import unreal
def create_control_rig(ch_folder, ch_name):

	unreal.load_module('ControlRigDeveloper')
	factory = unreal.ControlRigBlueprintFactory
	blueprint = factory.create_new_control_rig_asset(desired_package_path = '/Game/'+ch_folder+'/'+ch_name+'_CtrlRig')
	library = blueprint.get_local_function_library()
	library_controller = blueprint.get_controller(library)
	hierarchy = blueprint.hierarchy
	hierarchy_controller = hierarchy.get_controller()
	hierarchy_controller.add_bone('root', '', unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('pelvis', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='root'), unreal.Transform(location=[-0.000000,2.280866,97.896782],rotation=[86.366893,-90.000000,-90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='pelvis'), unreal.Transform(location=[3.677053,-0.000000,-0.000000],rotation=[0.000000,14.457322,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_01'), unreal.Transform(location=[6.795057,-0.000000,0.000000],rotation=[0.000000,-3.464470,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_03', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_02'), unreal.Transform(location=[7.238228,0.000000,0.000000],rotation=[-0.000000,-10.946079,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_03'), unreal.Transform(location=[8.523893,-0.000000,0.000000],rotation=[0.000000,-5.866984,0.000450],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_05', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_04'), unreal.Transform(location=[19.439800,0.000000,-0.000000],rotation=[-0.000005,-0.681389,-0.000449],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.242896,7.684768,-9.310202],rotation=[-82.006463,-112.633666,123.200886],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.237822,7.915499,9.635503],rotation=[-82.005484,67.346543,123.220872],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.961815,-4.626293,-15.443479],rotation=[-71.622025,-118.209500,130.384729],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.967104,-4.627012,15.454673],rotation=[-84.725074,-23.824683,-145.976713],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516269,-1.314766,-1.427904],rotation=[-80.831226,-153.124384,163.263585],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[11.813392,0.443878,6.281840],rotation=[3.110289,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[9.985832,-7.578162,-1.993106],rotation=[-3.110289,-175.708429,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[17.809523,-0.000000,0.000000],rotation=[-46.029604,4.358519,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_l'), unreal.Transform(location=[-0.000000,-0.000000,-0.000000],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[0.220349,-0.051737,5.804066],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[3.255006,8.509158,-1.063038],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[6.410149,0.544406,-4.761752],rotation=[48.194143,-0.000000,180.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[1.467736,-7.644437,0.385938],rotation=[-0.000000,-0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516220,-1.314811,1.427873],rotation=[-80.831226,26.875616,163.263585],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-12.041718,-0.442301,-6.316576],rotation=[3.110289,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-10.214471,7.567725,1.957083],rotation=[-3.110289,-175.708429,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-17.809626,-0.000003,0.000438],rotation=[-46.029604,4.358519,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_r'), unreal.Transform(location=[0.000000,0.000000,-0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-0.353314,0.044167,-5.993515],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-3.387981,-8.516726,0.873696],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-6.551142,-0.546132,4.556988],rotation=[48.194143,0.000000,179.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-1.599581,7.637699,-0.576368],rotation=[-0.000000,-0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[11.887766,-0.000000,0.000000],rotation=[-0.000000,23.928404,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_01'), unreal.Transform(location=[5.110260,0.000000,-0.000000],rotation=[-0.000000,-1.913529,-0.000098],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('head', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_02'), unreal.Transform(location=[4.912971,0.000000,0.000000],rotation=[0.000020,-11.880170,0.000096],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_FacialRoot', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='head'), unreal.Transform(location=[4.537196,-1.291924,-0.000001],rotation=[-90.000000,0.000000,90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_curve('CTRL_expressions_browDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeParallelLookDirection', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueOut', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueIn', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueWide', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueNarrow', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tonguePress', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpen', 0.720649)
	hierarchy_controller.add_curve('CTRL_expressions_jawLeft', -0.312347)
	hierarchy_controller.add_curve('CTRL_expressions_jawRight', 0.312347)
	hierarchy_controller.add_curve('CTRL_expressions_jawFwd', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawBack', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpenExtreme', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh4', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatExhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatInhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_skullUnified', 0.000000)
	hierarchy_controller.add_curve('CTRL_rigLogic_OffOn', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_jawOpen', 0.720649)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_jawOpen', 0.720649)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_up', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_down', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_open', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_fwd', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_back', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_openExtreme_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph4', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatExhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatInhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_fwd_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_back_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__skull_unified', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_wide', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_narrow', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilWide_L', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilNarrow_L', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilWide_R', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__body_neckFemaleAverage_cor', 0.000000)
	hierarchy_controller.add_curve('Default', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookInLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeWideLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookOutRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeWideRight', -0.000000)
	hierarchy_controller.add_curve('JawForward', -0.000000)
	hierarchy_controller.add_curve('JawLeft', -0.312347)
	hierarchy_controller.add_curve('JawRight', 0.312347)
	hierarchy_controller.add_curve('JawOpen', 0.720649)
	hierarchy_controller.add_curve('MouthClose', 0.000000)
	hierarchy_controller.add_curve('MouthFunnel', 0.000000)
	hierarchy_controller.add_curve('MouthPucker', 0.000000)
	hierarchy_controller.add_curve('MouthLeft', 0.000000)
	hierarchy_controller.add_curve('MouthRight', -0.000000)
	hierarchy_controller.add_curve('MouthSmileLeft', 0.000000)
	hierarchy_controller.add_curve('MouthSmileRight', 0.000000)
	hierarchy_controller.add_curve('MouthFrownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthFrownRight', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleLeft', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleRight', 0.000000)
	hierarchy_controller.add_curve('MouthStretchLeft', 0.000000)
	hierarchy_controller.add_curve('MouthStretchRight', 0.000000)
	hierarchy_controller.add_curve('MouthRollLower', 0.000000)
	hierarchy_controller.add_curve('MouthRollUpper', 0.000000)
	hierarchy_controller.add_curve('MouthShrugLower', 0.000000)
	hierarchy_controller.add_curve('MouthShrugUpper', 0.000000)
	hierarchy_controller.add_curve('MouthPressLeft', 0.000000)
	hierarchy_controller.add_curve('MouthPressRight', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownRight', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpLeft', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpRight', 0.000000)
	hierarchy_controller.add_curve('BrowDownLeft', 0.000000)
	hierarchy_controller.add_curve('BrowDownRight', 0.000000)
	hierarchy_controller.add_curve('BrowInnerUp', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpLeft', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpRight', 0.000000)
	hierarchy_controller.add_curve('CheekPuff', 0.000000)
	hierarchy_controller.add_curve('CheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('CheekSquintRight', 0.000000)
	hierarchy_controller.add_curve('NoseSneerLeft', 0.000000)
	hierarchy_controller.add_curve('NoseSneerRight', 0.000000)
	hierarchy_controller.add_curve('TongueOut', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_D', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightD', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_lookAtSwitch', 0.000000)
	hierarchy_controller.add_curve('blendParent1', 0.000000)
	hierarchy_controller.add_curve('HeadYaw', 0.000000)
	hierarchy_controller.add_curve('HeadPitch', 0.000000)
	hierarchy_controller.add_curve('HeadRoll', 0.000000)
	hierarchy_controller.add_curve('LeftEyeYaw', 0.000000)
	hierarchy_controller.add_curve('LeftEyePitch', 0.000000)
	hierarchy_controller.add_curve('LeftEyeRoll', 0.000000)
	hierarchy_controller.add_curve('RightEyeYaw', 0.000000)
	hierarchy_controller.add_curve('RightEyePitch', 0.000000)
	hierarchy_controller.add_curve('RightEyeRoll', 0.000000)
	hierarchy_controller.add_curve('Pose_0', 0.000000)
	hierarchy_controller.add_curve('Pose_1', 0.000000)
	hierarchy_controller.add_curve('Pose_2', 0.000000)
	hierarchy_controller.add_curve('Pose_3', 0.000000)
	hierarchy_controller.add_curve('Pose_4', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutRight', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintRight', 0.000000)
	control_settings_facial_board = unreal.RigControlSettings()
	control_settings_facial_board.animation_type = unreal.RigControlAnimationType.PROXY_CONTROL
	control_settings_facial_board.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_facial_board.display_name = 'None'
	control_settings_facial_board.draw_limits = True
	control_settings_facial_board.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_facial_board.shape_name = 'RoundedSquare_Thin'
	control_settings_facial_board.shape_visible = True
	control_settings_facial_board.is_transient_control = False
	control_settings_facial_board.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_facial_board.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('Facial_Board', '', control_settings_facial_board, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,20.000000],rotation=[0.000000,0.000000,90.000035],scale=[2.500000,4.000000,1.000000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[30.929428,0.000000,146.966346],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_browGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_brow_raiseIn_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[0.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_brow_raise_in = unreal.RigControlSettings()
	control_settings_ctrl_c_brow_raise_in.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_brow_raise_in.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_brow_raise_in.display_name = 'None'
	control_settings_ctrl_c_brow_raise_in.draw_limits = True
	control_settings_ctrl_c_brow_raise_in.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_brow_raise_in.shape_name = 'Default'
	control_settings_ctrl_c_brow_raise_in.shape_visible = True
	control_settings_ctrl_c_brow_raise_in.is_transient_control = False
	control_settings_ctrl_c_brow_raise_in.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_brow_raise_in.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_brow_raise_in.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_brow_raise_in.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_brow_raiseIn', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_brow_raiseIn_GRP'), control_settings_ctrl_c_brow_raise_in, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_down.display_name = 'None'
	control_settings_ctrl_l_brow_down.draw_limits = True
	control_settings_ctrl_l_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_down.shape_name = 'Default'
	control_settings_ctrl_l_brow_down.shape_visible = True
	control_settings_ctrl_l_brow_down.is_transient_control = False
	control_settings_ctrl_l_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_down_GRP'), control_settings_ctrl_l_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_raise_out.display_name = 'None'
	control_settings_ctrl_l_brow_raise_out.draw_limits = True
	control_settings_ctrl_l_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_l_brow_raise_out.shape_visible = True
	control_settings_ctrl_l_brow_raise_out.is_transient_control = False
	control_settings_ctrl_l_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_raiseOut_GRP'), control_settings_ctrl_l_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_down.display_name = 'None'
	control_settings_ctrl_r_brow_down.draw_limits = True
	control_settings_ctrl_r_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_down.shape_name = 'Default'
	control_settings_ctrl_r_brow_down.shape_visible = True
	control_settings_ctrl_r_brow_down.is_transient_control = False
	control_settings_ctrl_r_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_down_GRP'), control_settings_ctrl_r_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_raise_out.display_name = 'None'
	control_settings_ctrl_r_brow_raise_out.draw_limits = True
	control_settings_ctrl_r_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_r_brow_raise_out.shape_visible = True
	control_settings_ctrl_r_brow_raise_out.is_transient_control = False
	control_settings_ctrl_r_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_raiseOut_GRP'), control_settings_ctrl_r_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_eyeGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[0.000000,0.000000,28.815392],rotation=[0.000000,0.000000,-0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_c_eye = unreal.RigControlSettings()
	control_settings_ctrl_c_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_eye.display_name = 'None'
	control_settings_ctrl_c_eye.draw_limits = True
	control_settings_ctrl_c_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_eye.shape_name = 'Default'
	control_settings_ctrl_c_eye.shape_visible = True
	control_settings_ctrl_c_eye.is_transient_control = False
	control_settings_ctrl_c_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_eye_GRP'), control_settings_ctrl_c_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,-0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_r_eye = unreal.RigControlSettings()
	control_settings_ctrl_r_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_r_eye.display_name = 'None'
	control_settings_ctrl_r_eye.draw_limits = True
	control_settings_ctrl_r_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye.shape_name = 'Default'
	control_settings_ctrl_r_eye.shape_visible = True
	control_settings_ctrl_r_eye.is_transient_control = False
	control_settings_ctrl_r_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_r_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_r_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_R_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_GRP'), control_settings_ctrl_r_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,-0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_l_eye = unreal.RigControlSettings()
	control_settings_ctrl_l_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_l_eye.display_name = 'None'
	control_settings_ctrl_l_eye.draw_limits = True
	control_settings_ctrl_l_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye.shape_name = 'Default'
	control_settings_ctrl_l_eye.shape_visible = True
	control_settings_ctrl_l_eye.is_transient_control = False
	control_settings_ctrl_l_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_l_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_l_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_L_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_GRP'), control_settings_ctrl_l_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,-0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_r_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_blink.display_name = 'None'
	control_settings_ctrl_r_eye_blink.draw_limits = True
	control_settings_ctrl_r_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_blink.shape_name = 'Default'
	control_settings_ctrl_r_eye_blink.shape_visible = True
	control_settings_ctrl_r_eye_blink.is_transient_control = False
	control_settings_ctrl_r_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_r_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_blink_GRP'), control_settings_ctrl_r_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,-0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_l_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_blink.display_name = 'None'
	control_settings_ctrl_l_eye_blink.draw_limits = True
	control_settings_ctrl_l_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_blink.shape_name = 'Default'
	control_settings_ctrl_l_eye_blink.shape_visible = True
	control_settings_ctrl_l_eye_blink.is_transient_control = False
	control_settings_ctrl_l_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_l_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_blink_GRP'), control_settings_ctrl_l_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_r_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_r_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_r_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_r_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_r_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_cheekRaise_GRP'), control_settings_ctrl_r_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_l_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_l_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_l_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_l_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_l_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_cheekRaise_GRP'), control_settings_ctrl_l_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_r_eye_squint_inner.draw_limits = True
	control_settings_ctrl_r_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_r_eye_squint_inner.shape_visible = True
	control_settings_ctrl_r_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_r_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_squintInner_GRP'), control_settings_ctrl_r_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-59.999820,0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_l_eye_squint_inner.draw_limits = True
	control_settings_ctrl_l_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_l_eye_squint_inner.shape_visible = True
	control_settings_ctrl_l_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_l_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_squintInner_GRP'), control_settings_ctrl_l_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[59.999820,0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_noseGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_R_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[-2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_nose = unreal.RigControlSettings()
	control_settings_ctrl_r_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_nose.display_name = 'None'
	control_settings_ctrl_r_nose.draw_limits = True
	control_settings_ctrl_r_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_nose.shape_name = 'Default'
	control_settings_ctrl_r_nose.shape_visible = True
	control_settings_ctrl_r_nose.is_transient_control = False
	control_settings_ctrl_r_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_nose_GRP'), control_settings_ctrl_r_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_nose = unreal.RigControlSettings()
	control_settings_ctrl_l_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_nose.display_name = 'None'
	control_settings_ctrl_l_nose.draw_limits = True
	control_settings_ctrl_l_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_nose.shape_name = 'Default'
	control_settings_ctrl_l_nose.shape_visible = True
	control_settings_ctrl_l_nose.is_transient_control = False
	control_settings_ctrl_l_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_nose_GRP'), control_settings_ctrl_l_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_mouthGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,18.815392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_u = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_u.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_u.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_u.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_u.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseU_GRP'), control_settings_ctrl_c_jaw_chin_raise_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_r_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_r_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_r_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_upperLipRaise_GRP'), control_settings_ctrl_r_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[9.999931,0.000000,-89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_l_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_l_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_l_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_upperLipRaise_GRP'), control_settings_ctrl_l_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-10.000095,0.000000,-90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_r_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_r_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerPull_GRP'), control_settings_ctrl_r_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[29.999888,0.000000,-90.000020],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_l_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_l_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerPull_GRP'), control_settings_ctrl_l_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-30.000068,0.000000,-90.000068],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_dimple.display_name = 'None'
	control_settings_ctrl_r_mouth_dimple.draw_limits = True
	control_settings_ctrl_r_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_r_mouth_dimple.shape_visible = True
	control_settings_ctrl_r_mouth_dimple.is_transient_control = False
	control_settings_ctrl_r_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_dimple_GRP'), control_settings_ctrl_r_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[80.000126,0.000000,-90.000271],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_dimple.display_name = 'None'
	control_settings_ctrl_l_mouth_dimple.draw_limits = True
	control_settings_ctrl_l_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_l_mouth_dimple.shape_visible = True
	control_settings_ctrl_l_mouth_dimple.is_transient_control = False
	control_settings_ctrl_l_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_dimple_GRP'), control_settings_ctrl_l_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-80.000241,0.000000,-90.000156],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_r_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_r_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerDepress_GRP'), control_settings_ctrl_r_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[50.000133,180.000000,89.999994],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_l_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_l_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerDepress_GRP'), control_settings_ctrl_l_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-49.999783,180.000000,90.000009],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_stretch.display_name = 'None'
	control_settings_ctrl_r_mouth_stretch.draw_limits = True
	control_settings_ctrl_r_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_r_mouth_stretch.shape_visible = True
	control_settings_ctrl_r_mouth_stretch.is_transient_control = False
	control_settings_ctrl_r_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_stretch_GRP'), control_settings_ctrl_r_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000196,180.000000,89.999995],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_stretch.display_name = 'None'
	control_settings_ctrl_l_mouth_stretch.draw_limits = True
	control_settings_ctrl_l_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_l_mouth_stretch.shape_visible = True
	control_settings_ctrl_l_mouth_stretch.is_transient_control = False
	control_settings_ctrl_l_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_stretch_GRP'), control_settings_ctrl_l_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-19.999856,180.000000,89.999935],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_r_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_lowerLipDepress_GRP'), control_settings_ctrl_r_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000259,180.000000,90.000018],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_l_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_lowerLipDepress_GRP'), control_settings_ctrl_l_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999767,180.000000,89.999975],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,10.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_d = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_d.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_d.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_d.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_d.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseD_GRP'), control_settings_ctrl_c_jaw_chin_raise_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_suckBlow_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-10.000000,0.000000,13.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_suck_blow = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_suck_blow.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_suck_blow.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_suck_blow.display_name = 'None'
	control_settings_ctrl_c_mouth_suck_blow.draw_limits = True
	control_settings_ctrl_c_mouth_suck_blow.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_suck_blow.shape_name = 'Default'
	control_settings_ctrl_c_mouth_suck_blow.shape_visible = True
	control_settings_ctrl_c_mouth_suck_blow.is_transient_control = False
	control_settings_ctrl_c_mouth_suck_blow.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_suck_blow.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_suck_blow.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_suck_blow.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_suckBlow', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_suckBlow_GRP'), control_settings_ctrl_c_mouth_suck_blow, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,16.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth.display_name = 'None'
	control_settings_ctrl_c_mouth.draw_limits = True
	control_settings_ctrl_c_mouth.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth.shape_name = 'Default'
	control_settings_ctrl_c_mouth.shape_visible = True
	control_settings_ctrl_c_mouth.is_transient_control = False
	control_settings_ctrl_c_mouth.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_mouth.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_GRP'), control_settings_ctrl_c_mouth, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-90.000000,0.000000,-90.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_jawGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[0.000000,0.000000,7.000000],rotation=[0.000000,0.000000,-0.000000],scale=[2.000000,4.000000,2.000000]), False)
	control_settings_ctrl_c_jaw = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_jaw.display_name = 'None'
	control_settings_ctrl_c_jaw.draw_limits = True
	control_settings_ctrl_c_jaw.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw.shape_name = 'Default'
	control_settings_ctrl_c_jaw.shape_visible = True
	control_settings_ctrl_c_jaw.is_transient_control = False
	control_settings_ctrl_c_jaw.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000))
	control_settings_ctrl_c_jaw.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_jaw.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_jaw', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_GRP'), control_settings_ctrl_c_jaw, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.020000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,-180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,8.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_u = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_u.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_u.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_u.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_u.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollU_GRP'), control_settings_ctrl_c_mouth_lips_roll_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,3.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_d.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_d.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_d.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_d.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollD_GRP'), control_settings_ctrl_c_mouth_lips_roll_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_purseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-7.500000,0.000000,4.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_purse_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_purse_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_purse_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_purse_d.display_name = 'None'
	control_settings_ctrl_c_mouth_purse_d.draw_limits = True
	control_settings_ctrl_c_mouth_purse_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_purse_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_purse_d.shape_visible = True
	control_settings_ctrl_c_mouth_purse_d.is_transient_control = False
	control_settings_ctrl_c_mouth_purse_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_purse_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_purse_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_purse_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_purseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_purseD_GRP'), control_settings_ctrl_c_mouth_purse_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_funnelD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-5.000000,0.000000,4.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_funnel_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_funnel_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_funnel_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_funnel_d.display_name = 'None'
	control_settings_ctrl_c_mouth_funnel_d.draw_limits = True
	control_settings_ctrl_c_mouth_funnel_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_funnel_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_funnel_d.shape_visible = True
	control_settings_ctrl_c_mouth_funnel_d.is_transient_control = False
	control_settings_ctrl_c_mouth_funnel_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_funnel_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_funnel_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_funnel_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_funnelD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_funnelD_GRP'), control_settings_ctrl_c_mouth_funnel_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_fwdBack_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[3.500000,0.000000,5.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_fwd_back = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_fwd_back.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_fwd_back.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_fwd_back.display_name = 'None'
	control_settings_ctrl_c_jaw_fwd_back.draw_limits = True
	control_settings_ctrl_c_jaw_fwd_back.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_fwd_back.shape_name = 'Default'
	control_settings_ctrl_c_jaw_fwd_back.shape_visible = True
	control_settings_ctrl_c_jaw_fwd_back.is_transient_control = False
	control_settings_ctrl_c_jaw_fwd_back.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_fwd_back.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_jaw_fwd_back.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_fwd_back.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_fwdBack', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_fwdBack_GRP'), control_settings_ctrl_c_jaw_fwd_back, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_close_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[5.500000,0.000000,6.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_close = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_close.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_close.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_close.display_name = 'None'
	control_settings_ctrl_c_mouth_close.draw_limits = True
	control_settings_ctrl_c_mouth_close.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_close.shape_name = 'Default'
	control_settings_ctrl_c_mouth_close.shape_visible = True
	control_settings_ctrl_c_mouth_close.is_transient_control = False
	control_settings_ctrl_c_mouth_close.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_close.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_close.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_close.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_close', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_close_GRP'), control_settings_ctrl_c_mouth_close, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[7.500000,0.000000,6.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_press.display_name = 'None'
	control_settings_ctrl_r_mouth_press.draw_limits = True
	control_settings_ctrl_r_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_press.shape_name = 'Default'
	control_settings_ctrl_r_mouth_press.shape_visible = True
	control_settings_ctrl_r_mouth_press.is_transient_control = False
	control_settings_ctrl_r_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_press_GRP'), control_settings_ctrl_r_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999603,180.000000,89.999961],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[9.500000,0.000000,6.000000],rotation=[0.000000,0.000000,-0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_press.display_name = 'None'
	control_settings_ctrl_l_mouth_press.draw_limits = True
	control_settings_ctrl_l_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_press.shape_name = 'Default'
	control_settings_ctrl_l_mouth_press.shape_visible = True
	control_settings_ctrl_l_mouth_press.is_transient_control = False
	control_settings_ctrl_l_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_press_GRP'), control_settings_ctrl_l_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000423,180.000000,90.000033],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 992.000000), 'RigUnit_GetControlFloat_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2.Control', 'CTRL_L_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 992.000000), 'SetCurveValue_1_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2.Curve', 'BrowDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4393.000000, 992.000000), 'SetCurveValue_1_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_1.Curve', 'BrowDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4761.000000, 992.000000), 'RigUnit_GetControlFloat_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_1.Control', 'CTRL_R_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 1248.000000), 'RigUnit_GetControlFloat_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2.Control', 'CTRL_C_brow_raiseIn')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5145.000000, 1808.000000), 'Add_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 1808.000000), 'RigUnit_GetControlFloat_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4953.000000, 1808.000000), 'Clamp_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_3.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4713.000000, 1808.000000), 'RigUnit_SetCurveValue_40_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 2032.000000), 'RigUnit_GetControlFloat_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5145.000000, 2032.000000), 'Add_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4937.000000, 2032.000000), 'Clamp_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_4.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4713.000000, 2048.000000), 'RigUnit_SetCurveValue_40_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 1440.000000), 'RigUnit_SetCurveValue_40_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 1600.000000), 'RigUnit_SetCurveValue_40_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 1248.000000), 'SetCurveValue_1_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2.Curve', 'BrowInnerUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 2272.000000), 'RigUnit_GetControlFloat_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 2480.000000), 'RigUnit_SetCurveValue_40_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2.Curve', 'CTRL_expressions_browRaiseOuterL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 2288.000000), 'SetCurveValue_1_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1.Curve', 'BrowOuterUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4697.000000, 2272.000000), 'RigUnit_GetControlFloat_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4329.000000, 2480.000000), 'RigUnit_SetCurveValue_40_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4329.000000, 2288.000000), 'SetCurveValue_1_1_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1_1.Curve', 'BrowOuterUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1376.000000), 'GetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2462.000000, 1470.000000), 'Add_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2264.000000, 1495.000000), 'Clamp_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2012.000000, 1491.000000), 'SetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4.Curve', 'head_cm2_color_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2041.000000, 1648.000000), 'SetCurveValue_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5.Curve', 'head_wm2_normal_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1577.000000, 1344.000000), 'GetCurveValue_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1182.000000, 1439.000000), 'Add_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-983.000000, 1464.000000), 'Clamp_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-731.000000, 1460.000000), 'SetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4_1.Curve', 'head_cm2_color_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-761.000000, 1616.000000), 'SetCurveValue_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5_1.Curve', 'head_wm2_normal_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1872.000000), 'GetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2537.000000, 1696.000000), 'Multiply_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 2752.000000), 'GetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2784.000000), 'SetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2960.000000), 'SetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 1856.000000), 'GetCurveValue_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 1680.000000), 'Multiply_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1753.000000, 2752.000000), 'GetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1323.000000, 2789.000000), 'SetCurveValue_6_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_1.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1335.000000, 2963.000000), 'SetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 2288.000000), 'GetCurveValue_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2.Curve', 'CTRL_expressions_browDownL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2473.000000, 2288.000000), 'Add_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2249.000000, 2304.000000), 'Clamp_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2352.000000), 'SetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8.Curve', 'head_cm2_color_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2528.000000), 'SetCurveValue_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9.Curve', 'head_wm2_normal_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2521.000000, 2080.000000), 'Multiply_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1529.000000, 2288.000000), 'GetCurveValue_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_1.Curve', 'CTRL_expressions_browDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1145.000000, 2288.000000), 'Add_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-921.000000, 2304.000000), 'Clamp_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2352.000000), 'SetCurveValue_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8_1.Curve', 'head_cm2_color_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2528.000000), 'SetCurveValue_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9_1.Curve', 'head_wm2_normal_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 2080.000000), 'Multiply_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2281.000000, 1888.000000), 'SetCurveValue_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_10.Curve', 'head_cm2_color_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2272.000000, 2045.000000), 'SetCurveValue_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_11.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 1872.000000), 'SetCurveValue_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_12.Curve', 'head_cm2_color_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 2064.000000), 'SetCurveValue_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_13.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 3184.000000), 'GetCurveValue_2_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3216.000000), 'SetCurveValue_6_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3392.000000), 'SetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1769.000000, 3168.000000), 'GetCurveValue_2_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3200.000000), 'SetCurveValue_6_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2_1.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3392.000000), 'SetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browConnect', unreal.Vector2D(-5577.000000, 928.000000), unreal.Vector2D(1632.000000, 1712.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_0')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browMultipliersConnect', unreal.Vector2D(-2921.000000, 1280.000000), unreal.Vector2D(2704.000000, 2272.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -6015.000000), 'RigUnit_GetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5871.000000), 'SetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -6015.000000), 'RigUnit_GetControlFloat_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -5871.000000), 'SetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5183.000000), 'SetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -5327.000000), 'RigUnit_GetControlFloat_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3.Control', 'CTRL_L_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5183.000000), 'SetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5327.000000), 'SetCurveValue_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2.Curve', 'EyeSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5327.000000), 'SetCurveValue_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1.Curve', 'EyeSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4730.000000, -5327.000000), 'RigUnit_GetControlFloat_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1.Control', 'CTRL_R_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5551.000000), 'SetCurveValue_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14.Curve', 'CTRL_expressions_eyeWidenL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5711.000000), 'SetCurveValue_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5567.000000), 'SetCurveValue_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14_1.Curve', 'CTRL_expressions_eyeWidenR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5711.000000), 'SetCurveValue_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4815.000000), 'SetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5496.000000, -4959.000000), 'RigUnit_GetControlFloat_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3_1.Control', 'CTRL_L_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4815.000000), 'SetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4959.000000), 'SetCurveValue_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2_1.Curve', 'CheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4959.000000), 'SetCurveValue_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_1.Curve', 'CheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -4959.000000), 'RigUnit_GetControlFloat_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1_1.Control', 'CTRL_R_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5599.000000), 'RigUnit_GetControlVector2D')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -6031.000000), 'SetCurveValue_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5871.000000), 'SetCurveValue_16')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1893.000000, -5834.000000), 'SetCurveValue_16_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5631.000000), 'RigUnit_GetControlVector2D_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1892.000000, -6004.000000), 'SetCurveValue_15_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5695.000000), 'SetCurveValue_15_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5525.000000), 'SetCurveValue_16_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5487.000000), 'SetCurveValue_16_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1_1.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5657.000000), 'SetCurveValue_15_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5359.000000), 'SetCurveValue_15_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5189.000000), 'SetCurveValue_16_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5321.000000), 'SetCurveValue_15_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_1.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5151.000000), 'SetCurveValue_16_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_1.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5039.000000), 'SetCurveValue_15_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -4869.000000), 'SetCurveValue_16_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5001.000000), 'SetCurveValue_15_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -4831.000000), 'SetCurveValue_16_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2_1.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5343.000000), 'RigUnit_GetControlVector2D_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5967.000000), 'Clamp')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5695.000000), 'Add_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5519.000000), 'Multiply')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5647.000000), 'Clamp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5279.000000), 'Add_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3353.000000, -5279.000000), 'Clamp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5039.000000), 'Add_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -4879.000000), 'Multiply_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3369.000000, -4959.000000), 'Clamp_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5951.000000), 'Add_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5951.000000), 'Clamp_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_8.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5679.000000), 'Add_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5503.000000), 'Multiply_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5631.000000), 'Clamp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5263.000000), 'Add_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2153.000000, -5263.000000), 'Clamp_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -5023.000000), 'Add_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -4863.000000), 'Multiply_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2169.000000, -4943.000000), 'Clamp_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5343.000000), 'RigUnit_GetControlVector2D_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2_1.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4351.000000), 'GetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4239.000000), 'GetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4127.000000), 'GetCurveValue_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4015.000000), 'GetCurveValue_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3903.000000), 'GetCurveValue_3_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3791.000000), 'GetCurveValue_3_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3679.000000), 'GetCurveValue_3_1_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3337.000000, -4159.000000), 'SetCurveValue_17')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5337.000000, -5839.000000), 'Clamp_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4649.000000, -5535.000000), 'Clamp_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -4303.000000), 'GetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4622.000000, -4370.000000), 'SetCurveValue_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5449.000000, -4415.000000), 'GetCurveValue_4_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4239.000000), 'Multiply_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4095.000000), 'Multiply_8_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3951.000000), 'Multiply_8_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3807.000000), 'Multiply_8_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3663.000000), 'Multiply_8_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3519.000000), 'Multiply_8_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4383.000000), 'Multiply_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5492.000000, -4044.000000), 'GetCurveValue_4_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -4111.000000), 'SetCurveValue_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -4156.000000), 'GetCurveValue_4_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4127.000000), 'Multiply_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3791.000000), 'GetCurveValue_4_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3855.000000), 'SetCurveValue_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3900.000000), 'GetCurveValue_4_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3855.000000), 'Multiply_7_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3535.000000), 'GetCurveValue_4_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3599.000000), 'SetCurveValue_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3644.000000), 'GetCurveValue_4_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3599.000000), 'Multiply_7_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3359.000000), 'Multiply_7_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5486.000000, -3282.000000), 'GetCurveValue_4_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4638.000000, -3346.000000), 'SetCurveValue_17_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5465.000000, -3391.000000), 'GetCurveValue_4_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3103.000000), 'Multiply_7_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3023.000000), 'GetCurveValue_4_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3087.000000), 'SetCurveValue_17_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3132.000000), 'GetCurveValue_4_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4383.000000), 'GetCurveValue_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4271.000000), 'GetCurveValue_3_1_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_6.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4159.000000), 'GetCurveValue_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1_1.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4047.000000), 'GetCurveValue_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2_1.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3935.000000), 'GetCurveValue_3_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3_1.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3823.000000), 'GetCurveValue_3_1_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4_1.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3711.000000), 'GetCurveValue_3_1_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-793.000000, -4191.000000), 'SetCurveValue_17_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4335.000000), 'GetCurveValue_4_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_2.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2078.000000, -4402.000000), 'SetCurveValue_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_2.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -4447.000000), 'GetCurveValue_4_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4271.000000), 'Multiply_8_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4127.000000), 'Multiply_8_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3983.000000), 'Multiply_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3839.000000), 'Multiply_8_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3695.000000), 'Multiply_8_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3551.000000), 'Multiply_8_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4415.000000), 'Multiply_7_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2948.000000, -4076.000000), 'GetCurveValue_4_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_2.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -4143.000000), 'SetCurveValue_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_2.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4143.000000), 'Multiply_7_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3823.000000), 'GetCurveValue_4_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_2.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3887.000000), 'SetCurveValue_17_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_2.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3903.000000), 'Multiply_7_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3567.000000), 'GetCurveValue_4_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3631.000000), 'SetCurveValue_17_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_2.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3631.000000), 'Multiply_7_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3391.000000), 'Multiply_7_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2942.000000, -3314.000000), 'GetCurveValue_4_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2094.000000, -3378.000000), 'SetCurveValue_17_1_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_2.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3135.000000), 'Multiply_7_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3055.000000), 'GetCurveValue_4_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3119.000000), 'SetCurveValue_17_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4191.000000), 'GetCurveValue_4_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_1.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3935.000000), 'GetCurveValue_4_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3679.000000), 'GetCurveValue_4_2_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_3.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3423.000000), 'GetCurveValue_4_2_2_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_4.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -3167.000000), 'GetCurveValue_4_2_2_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_5.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeConnect', unreal.Vector2D(-5561.000000, -6095.000000), unreal.Vector2D(4954.000000, 3221.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_3')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1392.000000), 'Add_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 1392.000000), 'Clamp_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1392.000000), 'SetCurveValue_18')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18.Curve', 'head_cm1_color_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1504.000000), 'SetCurveValue_19')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19.Curve', 'head_wm1_normal_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1680.000000), 'Add_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 1680.000000), 'Clamp_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1680.000000), 'SetCurveValue_20')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20.Curve', 'head_cm1_color_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1792.000000), 'SetCurveValue_21')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21.Curve', 'head_wm1_normal_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2144.000000), 'SetCurveValue_21_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2032.000000), 'Clamp_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2032.000000), 'SetCurveValue_20_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2464.000000), 'SetCurveValue_21_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 2368.000000), 'Clamp_12_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2352.000000), 'SetCurveValue_20_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 3104.000000), 'SetCurveValue_21_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1.Curve', 'head_wm3_normal_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2992.000000), 'Clamp_12_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2992.000000), 'SetCurveValue_20_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1.Curve', 'head_cm3_color_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3408.000000), 'SetCurveValue_21_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 3296.000000), 'Clamp_12_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3296.000000), 'SetCurveValue_20_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3632.000000), 'SetCurveValue_21_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3520.000000), 'SetCurveValue_20_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1392.000000), 'GetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1680.000000), 'GetCurveValue_4_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1680.000000), 'Multiply_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1840.000000), 'Multiply_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1840.000000), 'GetCurveValue_4_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2048.000000), 'Multiply_9_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2048.000000), 'GetCurveValue_4_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2752.000000), 'SetCurveValue_21_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2640.000000), 'SetCurveValue_20_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2224.000000), 'Multiply_9_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2224.000000), 'GetCurveValue_4_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2864.000000), 'Multiply_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3040.000000), 'Multiply_9_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3040.000000), 'GetCurveValue_4_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3248.000000), 'Multiply_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3456.000000), 'GetCurveValue_4_3_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3456.000000), 'Multiply_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3920.000000), 'SetCurveValue_21_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3808.000000), 'SetCurveValue_20_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1360.000000), 'Add_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 1360.000000), 'Clamp_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1360.000000), 'SetCurveValue_18_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18_1.Curve', 'head_cm1_color_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1472.000000), 'SetCurveValue_19_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19_1.Curve', 'head_wm1_normal_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1648.000000), 'Add_11_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 1648.000000), 'Clamp_12_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1648.000000), 'SetCurveValue_20_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_2.Curve', 'head_cm1_color_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1760.000000), 'SetCurveValue_21_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_2.Curve', 'head_wm1_normal_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2112.000000), 'SetCurveValue_21_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2000.000000), 'Clamp_12_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2000.000000), 'SetCurveValue_20_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2432.000000), 'SetCurveValue_21_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_3.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 2368.000000), 'Clamp_12_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2320.000000), 'SetCurveValue_20_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_3.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 3072.000000), 'SetCurveValue_21_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_2.Curve', 'head_wm3_normal_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2960.000000), 'Clamp_12_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2960.000000), 'SetCurveValue_20_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_2.Curve', 'head_cm3_color_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3376.000000), 'SetCurveValue_21_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 3264.000000), 'Clamp_12_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3264.000000), 'SetCurveValue_20_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3600.000000), 'SetCurveValue_21_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3488.000000), 'SetCurveValue_20_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1360.000000), 'GetCurveValue_4_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_4.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1648.000000), 'GetCurveValue_4_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1648.000000), 'Multiply_9_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1808.000000), 'Multiply_9_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1808.000000), 'GetCurveValue_4_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2016.000000), 'Multiply_9_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2016.000000), 'GetCurveValue_4_3_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2720.000000), 'SetCurveValue_21_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2608.000000), 'SetCurveValue_20_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2192.000000), 'Multiply_9_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2192.000000), 'GetCurveValue_4_3_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_2.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2832.000000), 'Multiply_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3008.000000), 'Multiply_9_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3008.000000), 'GetCurveValue_4_3_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_2.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3216.000000), 'Multiply_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3424.000000), 'GetCurveValue_4_3_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1_1.Curve', 'CTRL_expressions_neckStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3424.000000), 'Multiply_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3888.000000), 'SetCurveValue_21_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3776.000000), 'SetCurveValue_20_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeMultipliersConnect', unreal.Vector2D(182.000000, 1296.000000), unreal.Vector2D(3264.000000, 2784.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_5')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2543.000000), 'SetCurveValue_22')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2367.000000), 'SetCurveValue_23')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23.Curve', 'CTRL_expressions_jawFwd')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2239.000000), 'SetCurveValue_23_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23_1.Curve', 'CTRL_expressions_jawBack')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5433.000000, -2255.000000), 'Multiply_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_13.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -2543.000000), 'RigUnit_GetControlFloat_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_4.Control', 'CTRL_C_jaw_fwdBack')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -2527.000000), 'SetCurveValue_22_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -2095.000000), 'RigUnit_GetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_3.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4617.000000, -2287.000000), 'Multiply_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_14.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2415.000000), 'SetCurveValue_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1.Curve', 'CTRL_expressions_jawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4360.000000, -2127.000000), 'SetCurveValue_22_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1.Curve', 'CTRL_expressions_jawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2239.000000), 'SetCurveValue_22_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4344.000000, -1807.000000), 'SetCurveValue_22_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1_1.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, -1919.000000), 'SetCurveValue_22_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2_1.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jawConnect', unreal.Vector2D(-5593.000000, -2607.000000), unreal.Vector2D(1632.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_6')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -1359.000000), 'RigUnit_GetControlFloat_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_5.Control', 'CTRL_C_mouth_funnelD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5113.000000, -1359.000000), 'SetCurveValue_24')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_24.Curve', 'MouthFunnel')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, -1119.000000), 'RigUnit_GetControlFloat_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_6.Control', 'CTRL_C_mouth_purseD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5129.000000, -1119.000000), 'Multiply_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.B', '0.750000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4713.000000, -1103.000000), 'Clamp_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_13.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -1103.000000), 'SetCurveValue_25')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25.Curve', 'CTRL_expressions_mouthFunnelDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -991.000000), 'SetCurveValue_25_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1.Curve', 'CTRL_expressions_mouthFunnelDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -879.000000), 'SetCurveValue_25_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1.Curve', 'CTRL_expressions_mouthFunnelUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -767.000000), 'SetCurveValue_25_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1.Curve', 'CTRL_expressions_mouthFunnelUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4921.000000, -1103.000000), 'Add_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -591.000000), 'SetCurveValue_25_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -479.000000), 'SetCurveValue_25_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -367.000000), 'SetCurveValue_25_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -255.000000), 'SetCurveValue_25_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5097.000000, -127.000000), 'Multiply_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.B', '0.410000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -79.000000), 'SetCurveValue_25_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 32.000000), 'SetCurveValue_25_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 144.000000), 'SetCurveValue_25_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 256.000000), 'SetCurveValue_25_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsTowardsUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5193.000000, -863.000000), 'SetCurveValue_26')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_26.Curve', 'MouthPucker')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -1343.000000), 'RigUnit_GetControlFloat_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_7.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1327.000000), 'SetCurveValue_27')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3785.000000, -1071.000000), 'Multiply_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1071.000000), 'SetCurveValue_27_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3563.000000, -1319.000000), 'Clamp_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_14.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3577.000000, -1071.000000), 'Clamp_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_15.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -767.000000), 'RigUnit_GetControlFloat_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8.Control', 'CTRL_L_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1215.000000), 'SetCurveValue_27_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_2.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -959.000000), 'SetCurveValue_27_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -767.000000), 'SetCurveValue_28')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28.Curve', 'MouthSmileLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -655.000000), 'SetCurveValue_28_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -655.000000), 'SetCurveValue_28_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_1.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3001.000000, -767.000000), 'RigUnit_GetControlFloat_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_1.Control', 'CTRL_R_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -767.000000), 'SetCurveValue_28_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_2.Curve', 'MouthSmileRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3849.000000, -479.000000), 'RigUnit_GetControlFloat_8_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2.Control', 'CTRL_L_mouth_cornerDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -479.000000), 'SetCurveValue_28_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3.Curve', 'MouthFrownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -367.000000), 'SetCurveValue_28_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2.Curve', 'CTRL_expressions_mouthCornerDepressL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3001.000000, -479.000000), 'RigUnit_GetControlFloat_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_1.Control', 'CTRL_R_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -479.000000), 'SetCurveValue_28_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_1.Curve', 'MouthFrownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -367.000000), 'SetCurveValue_28_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_1.Curve', 'CTRL_expressions_mouthCornerDepressR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3833.000000, -175.000000), 'RigUnit_GetControlFloat_8_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2.Control', 'CTRL_L_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3417.000000, -175.000000), 'SetCurveValue_28_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2.Curve', 'MouthDimpleLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3417.000000, -63.000000), 'SetCurveValue_28_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2985.000000, -191.000000), 'RigUnit_GetControlFloat_8_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_1.Control', 'CTRL_R_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2569.000000, -191.000000), 'SetCurveValue_28_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_1.Curve', 'MouthDimpleRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2569.000000, -79.000000), 'SetCurveValue_28_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_1.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3817.000000, 128.000000), 'RigUnit_GetControlFloat_8_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2.Control', 'CTRL_L_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3401.000000, 128.000000), 'SetCurveValue_28_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2.Curve', 'MouthStretchLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3401.000000, 240.000000), 'SetCurveValue_28_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2985.000000, 112.000000), 'RigUnit_GetControlFloat_8_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2_1.Control', 'CTRL_R_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2569.000000, 112.000000), 'SetCurveValue_28_3_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2_1.Curve', 'MouthStretchRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2569.000000, 224.000000), 'SetCurveValue_28_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2_1.Curve', 'CTRL_expressions_mouthStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2025.000000, -735.000000), 'RigUnit_GetControlFloat_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9.Control', 'CTRL_C_mouth_lipsRollD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1641.000000, -895.000000), 'Multiply_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_if_node('float', 'None', unreal.Vector2D(-1353.000000, -895.000000), 'If_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_3.Condition', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_3.True', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_3.False', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1641.000000, -1055.000000), 'GetCurveValue_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_5.Curve', 'MouthRollUpper')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2009.000000, -1263.000000), 'RigUnit_GetControlFloat_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9_1.Control', 'CTRL_C_mouth_lipsRollU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -1247.000000), 'SetCurveValue_29')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29.Curve', 'CTRL_expressions_mouthUpperLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -1135.000000), 'SetCurveValue_29_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_1.Curve', 'CTRL_expressions_mouthUpperLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -911.000000), 'SetCurveValue_29_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_1_1.Curve', 'CTRL_expressions_mouthUpperLipRollOutR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -1023.000000), 'SetCurveValue_29_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_2.Curve', 'CTRL_expressions_mouthUpperLipRollOutL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1657.000000, -1263.000000), 'SetCurveValue_30')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_30.Curve', 'MouthRollUpper')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -735.000000), 'SetCurveValue_29_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_3.Curve', 'CTRL_expressions_mouthLowerLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -623.000000), 'SetCurveValue_29_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_1_2.Curve', 'CTRL_expressions_mouthLowerLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -399.000000), 'SetCurveValue_29_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_1_1_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1065.000000, -511.000000), 'SetCurveValue_29_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_29_2_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1647.000000, -498.000000), 'SetCurveValue_31')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_31.Curve', 'MouthRollLower')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1977.000000, -143.000000), 'RigUnit_GetControlFloat_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10.Control', 'CTRL_C_jaw_ChinRaiseD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1550.000000, -121.000000), 'SetCurveValue_32')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, -15.000000), 'SetCurveValue_32_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 96.000000), 'SetCurveValue_32_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1.Curve', 'MouthShrugLower')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 560.000000), 'SetCurveValue_32_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_1.Curve', 'MouthShrugUpper')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1961.000000, 320.000000), 'RigUnit_GetControlFloat_10_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10_1.Control', 'CTRL_C_jaw_ChinRaiseU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1534.000000, 342.000000), 'SetCurveValue_32_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_2.Curve', 'CTRL_expressions_jawChinRaiseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 448.000000), 'SetCurveValue_32_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_2.Curve', 'CTRL_expressions_jawChinRaiseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1033.000000, -143.000000), 'RigUnit_GetControlFloat_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11.Control', 'CTRL_L_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-633.000000, -127.000000), 'SetCurveValue_32_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3.Curve', 'CTRL_expressions_mouthPressUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, -21.000000), 'SetCurveValue_32_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3.Curve', 'CTRL_expressions_mouthPressDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, 90.000000), 'SetCurveValue_32_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2.Curve', 'MouthPressLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1032.000000, 257.000000), 'RigUnit_GetControlFloat_11_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_1.Control', 'CTRL_R_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-632.000000, 273.000000), 'SetCurveValue_32_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_1.Curve', 'CTRL_expressions_mouthPressUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 379.000000), 'SetCurveValue_32_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_1.Curve', 'CTRL_expressions_mouthPressDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 491.000000), 'SetCurveValue_32_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2_1.Curve', 'MouthPressRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-137.000000, -1247.000000), 'RigUnit_GetControlFloat_11_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2.Control', 'CTRL_L_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(262.000000, -1231.000000), 'SetCurveValue_32_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2.Curve', 'head_lod0_mesh__McornerPull_MlowerLipDepress_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(251.000000, -1125.000000), 'SetCurveValue_32_1_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2.Curve', 'MouthLowerDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(758.000000, -1247.000000), 'RigUnit_GetControlFloat_11_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_1.Control', 'CTRL_R_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1158.000000, -1231.000000), 'SetCurveValue_32_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_1.Curve', 'head_lod0_mesh__McornerPull_MlowerLipDepress_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1147.000000, -1125.000000), 'SetCurveValue_32_1_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_1.Curve', 'MouthLowerDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(758.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_1_1.Control', 'CTRL_R_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1158.000000, -863.000000), 'SetCurveValue_32_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_1_1.Curve', 'CTRL_expressions_mouthUpperLipRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1147.000000, -757.000000), 'SetCurveValue_32_1_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_1_1.Curve', 'MouthUpperUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-137.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_2.Control', 'CTRL_L_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(262.000000, -863.000000), 'SetCurveValue_32_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_2.Curve', 'CTRL_expressions_mouthUpperLipRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(251.000000, -757.000000), 'SetCurveValue_32_1_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_2.Curve', 'MouthUpperUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-73.000000, -431.000000), 'RigUnit_GetControlVector2D_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_4.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-98.000000, -248.000000), 'RigUnit_GetControlFloat_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_12.Control', 'CTRL_C_mouth_close')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(326.000000, -287.000000), 'Multiply_19')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_19.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_if_node('float', 'None', unreal.Vector2D(614.000000, -367.000000), 'If_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.Condition', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.True', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.False', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(278.000000, -479.000000), 'GetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_6.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(822.000000, -271.000000), 'SetCurveValue_33')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_33.Curve', 'MouthClose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(282.000000, -77.000000), 'SetCurveValue_34')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 32.000000), 'SetCurveValue_34_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 144.000000), 'SetCurveValue_34_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 256.000000), 'SetCurveValue_34_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthConnect', unreal.Vector2D(-5593.000000, -1423.000000), unreal.Vector2D(7198.000000, 2150.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_7')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5481.000000, 2976.000000), 'RigUnit_GetControlFloat_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_13.Control', 'CTRL_C_mouth_suckBlow')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3008.000000), 'SetCurveValue_35')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35.Curve', 'CTRL_expressions_mouthCheekSuckL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3120.000000), 'SetCurveValue_35_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1.Curve', 'CTRL_expressions_mouthCheekSuckR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3344.000000), 'SetCurveValue_35_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1.Curve', 'CTRL_expressions_mouthCheekBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3232.000000), 'SetCurveValue_35_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2.Curve', 'CTRL_expressions_mouthCheekBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3568.000000), 'SetCurveValue_35_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1.Curve', 'CTRL_expressions_mouthLipsBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3456.000000), 'SetCurveValue_35_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1.Curve', 'CTRL_expressions_mouthLipsBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3680.000000), 'SetCurveValue_35_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1.Curve', 'CheekPuff')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('cheekConnect', unreal.Vector2D(-5545.000000, 2912.000000), unreal.Vector2D(850.000000, 914.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4473.000000, 2992.000000), 'RigUnit_GetControlFloat_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14.Control', 'CTRL_L_nose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 3104.000000), 'SetCurveValue_35_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2.Curve', 'CTRL_expressions_noseNostrilDilateL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 2992.000000), 'SetCurveValue_35_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 3216.000000), 'SetCurveValue_35_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1.Curve', 'NoseSneerLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 3472.000000), 'SetCurveValue_35_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2_1.Curve', 'CTRL_expressions_noseNostrilDilateR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 3360.000000), 'SetCurveValue_35_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1_1.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4137.000000, 3584.000000), 'SetCurveValue_35_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1_1.Curve', 'NoseSneerRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4473.000000, 3360.000000), 'RigUnit_GetControlFloat_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14_1.Control', 'CTRL_R_nose')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('noseConnect', unreal.Vector2D(-4537.000000, 2928.000000), unreal.Vector2D(786.000000, 801.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_9')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4390.000000, 1392.000000), 'Clamp_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_16.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1408.000000), 'SetCurveValue_36')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36.Curve', 'head_cm1_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1520.000000), 'SetCurveValue_36_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1.Curve', 'head_cm1_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1632.000000), 'SetCurveValue_36_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1.Curve', 'head_cm1_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1744.000000), 'SetCurveValue_36_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1.Curve', 'head_cm1_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 2192.000000), 'SetCurveValue_36_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1_1.Curve', 'head_wm1_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1856.000000), 'SetCurveValue_36_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_2.Curve', 'head_wm1_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 1968.000000), 'SetCurveValue_36_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_2.Curve', 'head_wm1_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4614.000000, 2080.000000), 'SetCurveValue_36_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_2.Curve', 'head_wm1_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2368.000000), 'Multiply_9_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2368.000000), 'GetCurveValue_4_3_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2416.000000), 'Multiply_9_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2416.000000), 'GetCurveValue_4_3_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3942.000000, 1376.000000), 'Multiply_9_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3574.000000, 1376.000000), 'GetCurveValue_4_3_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2592.000000), 'Multiply_20')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2544.000000), 'Multiply_20_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3526.000000, 1696.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3526.000000, 1808.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3574.000000, 1488.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_2.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3942.000000, 1520.000000), 'Multiply_22')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4454.000000, 2416.000000), 'Clamp_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4726.000000, 2416.000000), 'SetCurveValue_37')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37.Curve', 'head_cm1_color_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4726.000000, 2528.000000), 'SetCurveValue_37_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3974.000000, 2416.000000), 'Multiply_23')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 2416.000000), 'GetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(6006.000000, 2416.000000), 'Clamp_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6278.000000, 2416.000000), 'SetCurveValue_37_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_2.Curve', 'head_cm1_color_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6278.000000, 2528.000000), 'SetCurveValue_37_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5526.000000, 2416.000000), 'Multiply_23_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5110.000000, 2416.000000), 'GetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3974.000000, 2560.000000), 'Multiply_24')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 2576.000000), 'GetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5110.000000, 2576.000000), 'GetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5526.000000, 2560.000000), 'Multiply_24_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3974.000000, 2704.000000), 'Multiply_24_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 2720.000000), 'GetCurveValue_7_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5110.000000, 2720.000000), 'GetCurveValue_7_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5526.000000, 2704.000000), 'Multiply_24_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3974.000000, 2880.000000), 'Multiply_24_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 2896.000000), 'GetCurveValue_7_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4230.000000, 2880.000000), 'SetCurveValue_37_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3.Curve', 'head_cm1_color_head_wm1_purse_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4230.000000, 2992.000000), 'SetCurveValue_37_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5782.000000, 2880.000000), 'SetCurveValue_37_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_1.Curve', 'head_cm1_color_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5782.000000, 2992.000000), 'SetCurveValue_37_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_1.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5526.000000, 2880.000000), 'Multiply_24_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5110.000000, 2896.000000), 'GetCurveValue_7_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3974.000000, 3152.000000), 'Multiply_24_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 3168.000000), 'GetCurveValue_7_2_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4230.000000, 3152.000000), 'SetCurveValue_37_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2.Curve', 'head_cm1_color_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4230.000000, 3264.000000), 'SetCurveValue_37_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2.Curve', 'head_wm1_normal_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5526.000000, 3168.000000), 'Multiply_24_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5110.000000, 3184.000000), 'GetCurveValue_7_2_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_1.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5782.000000, 3168.000000), 'SetCurveValue_37_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_1.Curve', 'head_cm1_color_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5782.000000, 3280.000000), 'SetCurveValue_37_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_1.Curve', 'head_wm1_normal_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3558.000000, 3520.000000), 'GetCurveValue_7_2_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_2.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(3958.000000, 3520.000000), 'SetCurveValue_37_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_2.Curve', 'head_cm1_color_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(3958.000000, 3632.000000), 'SetCurveValue_37_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_2.Curve', 'head_wm1_normal_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthMultipliersConnect', unreal.Vector2D(3462.000000, 1312.000000), unreal.Vector2D(3010.000000, 2455.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_10')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4585.000000, -5855.000000), 'Clamp_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4649.000000, -5679.000000), 'Multiply_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5449.000000, -5535.000000), 'Clamp_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5449.000000, -5679.000000), 'Multiply_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_InverseExecution', 'Execute', unreal.Vector2D(-6313.000000, 4480.000000), 'InverseExecution')
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_ITERATOR, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5465.000000, 4304.000000), 'ArrayIterator')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))', unreal.Vector2D(-5497.000000, 4240.000000), 'RerouteNode_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3.Value', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_GET_AT_INDEX, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5145.000000, 4304.000000), 'ArrayGetAtIndex')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ArrayGetAtIndex.Index', '0')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))', unreal.Vector2D(-5177.000000, 4240.000000), 'RerouteNode_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3_1.Value', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5225.000000, 4464.000000), 'GetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io FloatValue,io ExecuteContext)', unreal.Vector2D(-4857.000000, 4240.000000), 'SetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Control', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.FloatValue', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4960.000000), 'GetCurveValue_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4960.000000), 'Remap')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5072.000000), 'GetCurveValue_2_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_4.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 5056.000000), 'Add_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 4992.000000), 'SetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4736.000000), 'GetCurveValue_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4736.000000), 'Remap_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4848.000000), 'GetCurveValue_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 4832.000000), 'Add_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4960.000000), 'GetCurveValue_2_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4960.000000), 'Remap_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 5072.000000), 'GetCurveValue_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_2.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 5056.000000), 'Add_2_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3609.000000, 4992.000000), 'SetControlVector2D_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4736.000000), 'GetCurveValue_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4736.000000), 'Remap_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4848.000000), 'GetCurveValue_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 4832.000000), 'Add_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5520.000000), 'GetCurveValue_2_1_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_2.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5440.000000), 'SetControlVector2D_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5296.000000), 'GetCurveValue_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5296.000000), 'Remap_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5408.000000), 'GetCurveValue_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5392.000000), 'Add_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye', unreal.Vector2D(-5561.000000, 4672.000000), unreal.Vector2D(2226.000000, 551.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_0_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5776.000000), 'SetControlVector2D_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5744.000000), 'GetCurveValue_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5744.000000), 'Remap_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5856.000000), 'GetCurveValue_2_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5840.000000), 'Add_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 6112.000000), 'SetControlVector2D_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 6080.000000), 'Remap_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 6176.000000), 'Add_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3577.000000, 6112.000000), 'SetControlVector2D_3_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4041.000000, 6080.000000), 'Remap_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3802.000000, 6176.000000), 'Add_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3593.000000, 5440.000000), 'SetControlVector2D_3_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, 5408.000000), 'GetCurveValue_2_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1_1.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4057.000000, 5408.000000), 'Remap_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3818.000000, 5504.000000), 'Add_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jaw', unreal.Vector2D(-5561.000000, 5232.000000), unreal.Vector2D(2260.000000, 443.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_2')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouth', unreal.Vector2D(-5561.000000, 5680.000000), unreal.Vector2D(1112.000000, 325.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_4')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye blink, wide', unreal.Vector2D(-5561.000000, 6016.000000), unreal.Vector2D(2276.000000, 327.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_5_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5903.000000), 'Add_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4303.000000), 'Add')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4015.000000), 'Add_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -3743.000000), 'Add_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3465.000000, -3615.000000), 'Add_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3449.000000, -3951.000000), 'Add_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3257.000000, -3807.000000), 'Add_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4319.000000), 'Add_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4031.000000), 'Add_17_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -3759.000000), 'Add_17_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-937.000000, -3631.000000), 'Add_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-921.000000, -3967.000000), 'Add_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-729.000000, -3823.000000), 'Add_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6089.000000, -5487.000000), 'SequenceAggregate_2')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6217.000000, -2415.000000), 'SequenceAggregate_2_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6169.000000, -1183.000000), 'SequenceAggregate_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6121.000000, 1136.000000), 'SequenceAggregate_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6025.000000, 2944.000000), 'SequenceAggregate_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5865.000000, 4448.000000), 'SequenceAggregate_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5849.000000, 4832.000000), 'SequenceAggregate_2_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5840.000000, 5316.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5828.000000, 5758.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2048.000000), 'Add_11_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2176.000000), 'Add_11_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 2544.000000), 'Add_11_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 2416.000000), 'Add_11_3_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2992.000000), 'Add_11_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2864.000000), 'Add_11_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 3376.000000), 'Add_11_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 3248.000000), 'Add_11_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2016.000000), 'Add_11_3_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2144.000000), 'Add_11_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 2368.000000), 'Add_11_3_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 2496.000000), 'Add_11_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2832.000000), 'Add_11_3_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2960.000000), 'Add_11_3_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 3216.000000), 'Add_11_3_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 3344.000000), 'Add_11_3_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(3942.000000, 1744.000000), 'Multiply_22_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4134.000000, 1744.000000), 'Multiply_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.B', '0.625000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4134.000000, 1408.000000), 'Add_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4310.000000, 1616.000000), 'Add_18_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4310.000000, 2640.000000), 'Add_18_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4182.000000, 2416.000000), 'Add_18_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(5862.000000, 2624.000000), 'Add_18_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(5734.000000, 2416.000000), 'Add_18_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_BeginExecution', 'Execute', unreal.Vector2D(-6400.000000, -5488.000000), 'BeginExecution')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2.FloatValue', 'SetCurveValue_1_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_1.FloatValue', 'SetCurveValue_1_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2.ExecuteContext', 'SetCurveValue_1_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1.FloatValue', 'Add_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_3.Result', 'Clamp_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_3.Result', 'RigUnit_SetCurveValue_40_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1.FloatValue', 'Add_4.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_4.Result', 'Clamp_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_4.Result', 'RigUnit_SetCurveValue_40_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'SetCurveValue_1_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_1.ExecuteContext', 'SetCurveValue_1_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_1.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue.Value', 'Add_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5.Result', 'Clamp_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_1.Value', 'Add_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5_1.Result', 'Clamp_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_4_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3.Result', 'Add_5.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3_1.Result', 'Add_5_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4.ExecuteContext', 'SetCurveValue_5.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5.ExecuteContext', 'SetCurveValue_4_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4_1.ExecuteContext', 'SetCurveValue_5_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6.ExecuteContext', 'SetCurveValue_7.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7.ExecuteContext', 'SetCurveValue_6_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_1.ExecuteContext', 'SetCurveValue_7_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2.Value', 'Add_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6.Result', 'Clamp_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4.Result', 'Add_6.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8.ExecuteContext', 'SetCurveValue_9.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_1.Value', 'Add_6_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6_1.Result', 'Clamp_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_8_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4_1.Result', 'Add_6_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8_1.ExecuteContext', 'SetCurveValue_9_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9.ExecuteContext', 'SetCurveValue_8_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9_1.ExecuteContext', 'SetCurveValue_6.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5_1.ExecuteContext', 'SetCurveValue_10.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_10.ExecuteContext', 'SetCurveValue_11.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_11.ExecuteContext', 'SetCurveValue_12.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_12.ExecuteContext', 'SetCurveValue_13.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_13.ExecuteContext', 'SetCurveValue_8.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_6_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_7_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2.ExecuteContext', 'SetCurveValue_7_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_1.ExecuteContext', 'SetCurveValue_6_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_6_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_7_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2_1.ExecuteContext', 'SetCurveValue_7_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2.ExecuteContext', 'SetCurveValue_6_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue.ExecuteContext', 'SetCurveValue_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3.ExecuteContext', 'SetCurveValue_14.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2.ExecuteContext', 'SetCurveValue_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3_1.ExecuteContext', 'SetCurveValue_14_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14_1.ExecuteContext', 'SetCurveValue_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2.ExecuteContext', 'SetCurveValue_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3.ExecuteContext', 'SetCurveValue_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1.ExecuteContext', 'SetCurveValue_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2_1.ExecuteContext', 'SetCurveValue_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3_1.ExecuteContext', 'SetCurveValue_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_1.ExecuteContext', 'SetCurveValue_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1.ExecuteContext', 'SetCurveValue_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1_1.ExecuteContext', 'SetCurveValue_15.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15.ExecuteContext', 'SetCurveValue_16.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1.ExecuteContext', 'SetCurveValue_16_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2.ExecuteContext', 'SetCurveValue_16_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1_1.ExecuteContext', 'SetCurveValue_16_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1.ExecuteContext', 'SetCurveValue_16_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_1.ExecuteContext', 'SetCurveValue_16_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2.ExecuteContext', 'SetCurveValue_16_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2_1.ExecuteContext', 'SetCurveValue_16_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1.Result', 'Multiply.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply.Result', 'Clamp_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_15_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_16_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2.Result', 'Clamp_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_15_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_16_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7.Result', 'Multiply_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1.Result', 'Clamp_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_15_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_16_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16.ExecuteContext', 'SetCurveValue_15_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2.ExecuteContext', 'SetCurveValue_15_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1.ExecuteContext', 'SetCurveValue_15_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2.ExecuteContext', 'SetCurveValue_15_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_8.Result', 'Clamp_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1.Result', 'Multiply_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_2.Result', 'Clamp_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_1.Result', 'Clamp_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7_1.Result', 'Multiply_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1_1.Result', 'Clamp_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_8.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_15_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_16_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_15_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_16_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_15_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_16_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_15_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_16_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1.ExecuteContext', 'SetCurveValue_15_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1_1.ExecuteContext', 'SetCurveValue_15_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_1.ExecuteContext', 'SetCurveValue_15_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14.ExecuteContext', 'SetCurveValue_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9.Result', 'SetCurveValue.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_14_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1.Value', 'Multiply_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1.Value', 'Multiply_8_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2.Value', 'Multiply_8_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3.Value', 'Multiply_8_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4.Value', 'Multiply_8_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5.Value', 'Multiply_8_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7.Result', 'SetCurveValue_17_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1.Result', 'SetCurveValue_17_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2_1.ExecuteContext', 'SetCurveValue_17_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1.Result', 'SetCurveValue_17_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_6.Value', 'Multiply_8_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1_1.Value', 'Multiply_8_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2_1.Value', 'Multiply_8_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3_1.Value', 'Multiply_8_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4_1.Value', 'Multiply_8_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5_1.Value', 'Multiply_8_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_2.Result', 'SetCurveValue_17_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_2.Result', 'SetCurveValue_17_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17.ExecuteContext', 'SetCurveValue_17_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10.Result', 'Clamp_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11.Result', 'Clamp_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_20.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_21.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_20_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_21_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_20_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_21_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_20_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_21_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4.Value', 'Add_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3.Value', 'Multiply_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9.Result', 'Add_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1.Value', 'Multiply_9_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1.Result', 'Add_11.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1.Value', 'Multiply_9_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_20_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_21_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_9_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_9_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1.Value', 'Multiply_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_20_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_21_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18.ExecuteContext', 'SetCurveValue_19.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19.ExecuteContext', 'SetCurveValue_20.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20.ExecuteContext', 'SetCurveValue_21.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21.ExecuteContext', 'SetCurveValue_20_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1.ExecuteContext', 'SetCurveValue_21_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1.ExecuteContext', 'SetCurveValue_20_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1.ExecuteContext', 'SetCurveValue_21_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1.ExecuteContext', 'SetCurveValue_20_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10_1.Result', 'Clamp_11_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_18_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_19_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_2.Result', 'Clamp_12_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_20_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_21_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_20_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_21_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_20_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_21_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_20_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_21_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_4.Value', 'Add_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_2.Value', 'Multiply_9_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_2.Result', 'Add_11_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_2.Value', 'Multiply_9_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_2.Result', 'Add_11_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2.Value', 'Multiply_9_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_20_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_21_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_9_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_9_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_11_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1_1.Value', 'Multiply_12_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_20_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_21_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18_1.ExecuteContext', 'SetCurveValue_19_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19_1.ExecuteContext', 'SetCurveValue_20_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_2.ExecuteContext', 'SetCurveValue_21_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_2.ExecuteContext', 'SetCurveValue_20_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_2.ExecuteContext', 'SetCurveValue_21_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_2.ExecuteContext', 'SetCurveValue_20_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_3.ExecuteContext', 'SetCurveValue_21_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_3.ExecuteContext', 'SetCurveValue_20_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2_1.ExecuteContext', 'SetCurveValue_21_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2_1.ExecuteContext', 'SetCurveValue_20_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_18_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'Multiply_13.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'SetCurveValue_23.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_13.Result', 'SetCurveValue_22.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22.ExecuteContext', 'SetCurveValue_23.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23.ExecuteContext', 'SetCurveValue_23_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'SetCurveValue_23_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'Multiply_14.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'SetCurveValue_22_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23_1.ExecuteContext', 'SetCurveValue_22_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'SetCurveValue_22_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'SetCurveValue_22_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'SetCurveValue_22_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1.ExecuteContext', 'SetCurveValue_22_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1.ExecuteContext', 'SetCurveValue_22_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2.ExecuteContext', 'SetCurveValue_22_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2_1.ExecuteContext', 'SetCurveValue_22_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1_1.ExecuteContext', 'SetCurveValue_22_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'SetCurveValue_24.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_15.Result', 'Add_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_12.Result', 'Clamp_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'Add_12.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25.ExecuteContext', 'SetCurveValue_25_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1.ExecuteContext', 'SetCurveValue_25_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1.ExecuteContext', 'SetCurveValue_25_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2.ExecuteContext', 'SetCurveValue_25_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2.ExecuteContext', 'SetCurveValue_25_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2.ExecuteContext', 'SetCurveValue_25_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2_1.ExecuteContext', 'SetCurveValue_25_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_26.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1.ExecuteContext', 'SetCurveValue_25_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1.ExecuteContext', 'SetCurveValue_25_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_24.ExecuteContext', 'SetCurveValue_26.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_26.ExecuteContext', 'SetCurveValue_25.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1_1.ExecuteContext', 'SetCurveValue_27.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Multiply_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Clamp_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_17.Result', 'Clamp_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_15.Result', 'SetCurveValue_27_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27.ExecuteContext', 'SetCurveValue_27_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_2.ExecuteContext', 'SetCurveValue_27_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1.ExecuteContext', 'SetCurveValue_27_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8.FloatValue', 'SetCurveValue_28.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28.ExecuteContext', 'SetCurveValue_28_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1_1.ExecuteContext', 'SetCurveValue_28.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_1.FloatValue', 'SetCurveValue_28_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_2.ExecuteContext', 'SetCurveValue_28_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2.FloatValue', 'SetCurveValue_28_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3.ExecuteContext', 'SetCurveValue_28_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1.FloatValue', 'SetCurveValue_28_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_1.ExecuteContext', 'SetCurveValue_28_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1.ExecuteContext', 'SetCurveValue_28_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2.FloatValue', 'SetCurveValue_28_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2.ExecuteContext', 'SetCurveValue_28_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_1.FloatValue', 'SetCurveValue_28_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_1.ExecuteContext', 'SetCurveValue_28_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_1.ExecuteContext', 'SetCurveValue_28_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2.ExecuteContext', 'SetCurveValue_28_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2.FloatValue', 'SetCurveValue_28_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2.ExecuteContext', 'SetCurveValue_28_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2.ExecuteContext', 'SetCurveValue_28_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2_1.FloatValue', 'SetCurveValue_28_3_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_1.ExecuteContext', 'SetCurveValue_28_3_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2.ExecuteContext', 'SetCurveValue_28_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'Multiply_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_3.Result', 'SetCurveValue_29.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_3.Result', 'SetCurveValue_29_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_3.Result', 'SetCurveValue_29_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_3.Result', 'SetCurveValue_29_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_5.Valid', 'If_3.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2_1.ExecuteContext', 'SetCurveValue_30.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_30.ExecuteContext', 'SetCurveValue_29.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29.ExecuteContext', 'SetCurveValue_29_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_1.ExecuteContext', 'SetCurveValue_29_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_2.ExecuteContext', 'SetCurveValue_29_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'SetCurveValue_30.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_3.ExecuteContext', 'SetCurveValue_29_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_1_2.ExecuteContext', 'SetCurveValue_29_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_2_1.ExecuteContext', 'SetCurveValue_29_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_29_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_29_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_29_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_29_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_31.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_1_1.ExecuteContext', 'SetCurveValue_31.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_31.ExecuteContext', 'SetCurveValue_29_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_29_1_1_1.ExecuteContext', 'SetCurveValue_32.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32.ExecuteContext', 'SetCurveValue_32_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1.ExecuteContext', 'SetCurveValue_32_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_2.ExecuteContext', 'SetCurveValue_32_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_2.ExecuteContext', 'SetCurveValue_32_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1.ExecuteContext', 'SetCurveValue_32_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3.ExecuteContext', 'SetCurveValue_32_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3.ExecuteContext', 'SetCurveValue_32_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_1.ExecuteContext', 'SetCurveValue_32_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_1.ExecuteContext', 'SetCurveValue_32_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_1.ExecuteContext', 'SetCurveValue_32_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2.ExecuteContext', 'SetCurveValue_32_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2.ExecuteContext', 'SetCurveValue_32_1_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2.FloatValue', 'SetCurveValue_32_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2.FloatValue', 'SetCurveValue_32_1_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2_1.ExecuteContext', 'SetCurveValue_32_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_1.ExecuteContext', 'SetCurveValue_32_1_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1.FloatValue', 'SetCurveValue_32_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1.FloatValue', 'SetCurveValue_32_1_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_2.ExecuteContext', 'SetCurveValue_32_1_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_1_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_1_1.ExecuteContext', 'SetCurveValue_32_1_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_1_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4.Vector.Y', 'Multiply_19.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'Multiply_19.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_6.Valid', 'If_4.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_19.Result', 'If_4.True')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_4.Result', 'SetCurveValue_33.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2.ExecuteContext', 'SetCurveValue_32_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_1.ExecuteContext', 'SetCurveValue_32_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_2.ExecuteContext', 'SetCurveValue_32_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_1_1.ExecuteContext', 'SetCurveValue_33.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_33.ExecuteContext', 'SetCurveValue_34.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34.ExecuteContext', 'SetCurveValue_34_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1.ExecuteContext', 'SetCurveValue_34_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1_1.ExecuteContext', 'SetCurveValue_34_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35.ExecuteContext', 'SetCurveValue_35_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2.ExecuteContext', 'SetCurveValue_35_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1.ExecuteContext', 'SetCurveValue_35_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1.ExecuteContext', 'SetCurveValue_35_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1.ExecuteContext', 'SetCurveValue_35_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_4.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2_1.ExecuteContext', 'SetCurveValue_18.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36.ExecuteContext', 'SetCurveValue_36_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1.ExecuteContext', 'SetCurveValue_36_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1.ExecuteContext', 'SetCurveValue_36_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_2.ExecuteContext', 'SetCurveValue_36_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_2.ExecuteContext', 'SetCurveValue_36_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_2.ExecuteContext', 'SetCurveValue_36_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1.ExecuteContext', 'SetCurveValue_36_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_9_1_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_9_1_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1.Value', 'Multiply_9_1_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_20.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_20_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_2.Value', 'Multiply_22.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_36.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17.Result', 'SetCurveValue_37.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37.ExecuteContext', 'SetCurveValue_37_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7.Value', 'Multiply_23.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17_1.Result', 'SetCurveValue_37_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_2.ExecuteContext', 'SetCurveValue_37_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_1.Value', 'Multiply_23_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1_1.ExecuteContext', 'SetCurveValue_37.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2.Value', 'Multiply_24.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1.Value', 'Multiply_24_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2.Value', 'Multiply_24_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1_1.Value', 'Multiply_24_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1.Value', 'Multiply_24_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3.ExecuteContext', 'SetCurveValue_37_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1.ExecuteContext', 'SetCurveValue_37_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_1.Value', 'Multiply_24_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_1.ExecuteContext', 'SetCurveValue_37_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_1.ExecuteContext', 'SetCurveValue_37_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2.Value', 'Multiply_24_2_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2.ExecuteContext', 'SetCurveValue_37_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2.ExecuteContext', 'SetCurveValue_37_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2.ExecuteContext', 'SetCurveValue_37_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_1.Value', 'Multiply_24_2_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_1.ExecuteContext', 'SetCurveValue_37_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_1.ExecuteContext', 'SetCurveValue_37_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_2.ExecuteContext', 'SetCurveValue_37_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2_1.ExecuteContext', 'SetCurveValue_37_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_4.Value', 'Multiply_7_1_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_2.Value', 'Multiply_7_1_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_5.Value', 'Multiply_7_1_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_3.Value', 'Multiply_7_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_2.Value', 'Multiply_7_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_2.Value', 'Multiply_7_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_2.Value', 'Multiply_7_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_1.Value', 'Multiply_7_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_2.Value', 'Multiply_7_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2.Value', 'Multiply_7_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_2.Value', 'Multiply_7_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2.Value', 'Multiply_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1.Value', 'Multiply_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1.Value', 'Multiply_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1.Value', 'Multiply_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1.Value', 'Multiply_7_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1.Value', 'Multiply_7_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1.Value', 'Multiply_7_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1.Value', 'Multiply_7_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1.Value', 'Multiply_7_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_18.Result', 'If_3.False')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'If_3.True')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9_1.Result', 'SetCurveValue_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Multiply_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Multiply_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Clamp_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_5.Result', 'Clamp_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Clamp_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_6.Result', 'Clamp_10_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3.Value', 'ArrayIterator.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Index', 'ArrayGetAtIndex.Index')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3_1.Value', 'ArrayGetAtIndex.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Element.Name', 'GetCurveValue_8.Curve')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.ExecuteContext', 'SetControlFloat.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_8.Value', 'SetControlFloat.FloatValue')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayGetAtIndex.Element.Name', 'SetControlFloat.Control')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3.Value', 'Remap.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap.Result', 'Add_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_4.Value', 'Add_15.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_15.Result', 'SetControlVector2D_3.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1.Value', 'Remap_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1.Result', 'Add_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1.Value', 'Add_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2.Result', 'SetControlVector2D_3.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3_1.Value', 'Remap_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_2.Result', 'Add_2_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_2.Value', 'Add_2_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_2.Result', 'SetControlVector2D_3_1.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1_1.Value', 'Remap_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_1.Result', 'Add_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1_1.Value', 'Add_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1_1.Result', 'SetControlVector2D_3_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3.ExecuteContext', 'SetControlVector2D_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2.Value', 'Remap_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2.Result', 'Add_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2.Value', 'Add_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1.Result', 'SetControlVector2D_3_2.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_2.Value', 'SetControlVector2D_3_2.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1.Value', 'Remap_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1.Result', 'Add_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1.Value', 'Add_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1.Result', 'SetControlVector2D_3_2_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1.Value', 'Remap_1_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1.Result', 'Add_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1.Value', 'Add_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1.Result', 'SetControlVector2D_3_2_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1.Value', 'Remap_1_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1.Result', 'Add_1_2_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1_1.Value', 'Add_1_2_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1_1.Value', 'Remap_1_2_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1_1.Result', 'Add_1_2_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2.ExecuteContext', 'SetControlVector2D_3_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2_1_1.ExecuteContext', 'SetControlVector2D_3_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_16.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_16.Result', 'Clamp.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3.Value', 'Add.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8.Result', 'Add.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1.Result', 'Add_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2.Result', 'Add_17.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3.Result', 'Add_17_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4.Result', 'Add_17_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1.Result', 'Add_17_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5.Result', 'Add_17_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add.Result', 'Add_17_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17.Result', 'Add_17_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1.Result', 'Add_17_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1.Result', 'Add_17_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1.Result', 'SetCurveValue_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_2.Result', 'Add_17_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_9.Result', 'Add_17_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_2.Result', 'Add_17_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_2.Result', 'Add_17_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_2.Result', 'Add_17_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_2.Value', 'Add_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_6.Result', 'Add_9.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1_1.Result', 'Add_17_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2_1.Result', 'Add_17_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3_1.Result', 'Add_17_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4_1.Result', 'Add_17_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5_1.Result', 'Add_17_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1_1.Result', 'SetCurveValue_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.B', 'SequenceAggregate_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.B', 'SequenceAggregate_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.B', 'SequenceAggregate_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.A', 'SetCurveValue.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.A', 'SetCurveValue_22.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.A', 'SetCurveValue_24.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.B', 'SequenceAggregate_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.A', 'SetCurveValue_1_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1.A', 'SetCurveValue_35.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('InverseExecution.ExecuteContext', 'SequenceAggregate_2_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.A', 'ArrayIterator.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.A', 'SetControlVector2D_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.B', 'SetControlVector2D_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3.Result', 'Add_11_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1.Result', 'Clamp_12_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2.Result', 'Add_11_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1.Result', 'Clamp_12_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1.Result', 'Add_11_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1.Result', 'Add_11_3_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20.Result', 'Add_11_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1.Result', 'Clamp_12_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1_1.Result', 'Add_11_3_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11.Result', 'Add_11_3_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'Add_11_3_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1_1.Result', 'Clamp_12_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3.Result', 'Add_11_3_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2.Result', 'Clamp_12_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1.Result', 'Add_11_3_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1.Result', 'Clamp_12_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1.Result', 'Add_11_3_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1_1.Result', 'Add_11_3_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20_1.Result', 'Add_11_3_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1.Result', 'Clamp_12_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1_1.Result', 'Add_11_3_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11_1.Result', 'Add_11_3_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'Add_11_3_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1_1.Result', 'Clamp_12_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1.Value', 'Multiply_22_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Value', 'Multiply_22_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1.Result', 'Multiply_22_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1_1.Result', 'Add_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22.Result', 'Add_18.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18.Result', 'Add_18_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1_1.Result', 'Add_18_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1.Result', 'Clamp_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2.Result', 'Add_18_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23.Result', 'Add_18_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24.Result', 'Add_18_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2.Result', 'Add_18_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1.Result', 'Clamp_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2_1.Result', 'Add_18_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23_1.Result', 'Add_18_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1.Result', 'Add_18_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1_1.Result', 'Add_18_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1_1.Result', 'Clamp_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('BeginExecution.ExecuteContext', 'SequenceAggregate_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3', True)
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3_1', True)
	blueprint.set_preview_mesh(unreal.load_object(name='/Game/Characters/'+ch_foler+'/'+ch_name+'.'+ch_name, outer=None))
create_control_rig('Test/ART/RIG/YeonGyunJeong/Tolka/blendBase/v03', 'Tolka_blendBase_VRND_v03')
