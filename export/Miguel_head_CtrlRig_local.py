import unreal
def create_control_rig(ch_folder,ch_name):

	unreal.load_module('ControlRigDeveloper')
	factory = unreal.ControlRigBlueprintFactory
	blueprint = factory.create_new_control_rig_asset(desired_package_path = '/Game/'+ch_folder+'/'+ch_name+'_CtrlRig')
	library = blueprint.get_local_function_library()
	library_controller = blueprint.get_controller(library)
	hierarchy = blueprint.hierarchy
	hierarchy_controller = hierarchy.get_controller()
	hierarchy_controller.add_curve('CTRL_expressions_browDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeParallelLookDirection', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthRight', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueOut', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueIn', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueWide', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueNarrow', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tonguePress', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpen', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawLeft', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawFwd', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawBack', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpenExtreme', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh4', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatExhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatInhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_skullUnified', 0.000000)
	hierarchy_controller.add_curve('CTRL_rigLogic_OffOn', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_jawOpen', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_jawOpen', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_up', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_down', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_open', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_fwd', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_back', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_openExtreme_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph4', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatExhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatInhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_fwd_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_back_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__skull_unified', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_wide', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_narrow', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilWide_L', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilNarrow_L', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilWide_R', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__body_neckFemaleAverage_cor', 0.000000)
	hierarchy_controller.add_curve('Default', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookInLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeWideLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookOutRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeWideRight', -0.000000)
	hierarchy_controller.add_curve('JawForward', -0.000000)
	hierarchy_controller.add_curve('JawLeft', -0.000000)
	hierarchy_controller.add_curve('JawRight', 0.000000)
	hierarchy_controller.add_curve('JawOpen', 0.000000)
	hierarchy_controller.add_curve('MouthClose', 0.000000)
	hierarchy_controller.add_curve('MouthFunnel', 0.000000)
	hierarchy_controller.add_curve('MouthPucker', 0.000000)
	hierarchy_controller.add_curve('MouthLeft', 0.000000)
	hierarchy_controller.add_curve('MouthRight', -0.000000)
	hierarchy_controller.add_curve('MouthSmileLeft', 0.000000)
	hierarchy_controller.add_curve('MouthSmileRight', 0.000000)
	hierarchy_controller.add_curve('MouthFrownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthFrownRight', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleLeft', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleRight', 0.000000)
	hierarchy_controller.add_curve('MouthStretchLeft', 0.000000)
	hierarchy_controller.add_curve('MouthStretchRight', 0.000000)
	hierarchy_controller.add_curve('MouthRollLower', 0.000000)
	hierarchy_controller.add_curve('MouthRollUpper', 0.000000)
	hierarchy_controller.add_curve('MouthShrugLower', 0.000000)
	hierarchy_controller.add_curve('MouthShrugUpper', 0.000000)
	hierarchy_controller.add_curve('MouthPressLeft', 0.000000)
	hierarchy_controller.add_curve('MouthPressRight', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownRight', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpLeft', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpRight', 0.000000)
	hierarchy_controller.add_curve('BrowDownLeft', 0.000000)
	hierarchy_controller.add_curve('BrowDownRight', 0.000000)
	hierarchy_controller.add_curve('BrowInnerUp', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpLeft', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpRight', 0.000000)
	hierarchy_controller.add_curve('CheekPuff', 0.000000)
	hierarchy_controller.add_curve('CheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('CheekSquintRight', 0.000000)
	hierarchy_controller.add_curve('NoseSneerLeft', 0.000000)
	hierarchy_controller.add_curve('NoseSneerRight', 0.000000)
	hierarchy_controller.add_curve('TongueOut', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_D', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightD', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_lookAtSwitch', 0.000000)
	hierarchy_controller.add_curve('blendParent1', 0.000000)
	hierarchy_controller.add_curve('HeadYaw', 0.000000)
	hierarchy_controller.add_curve('HeadPitch', 0.000000)
	hierarchy_controller.add_curve('HeadRoll', 0.000000)
	hierarchy_controller.add_curve('LeftEyeYaw', 0.000000)
	hierarchy_controller.add_curve('LeftEyePitch', 0.000000)
	hierarchy_controller.add_curve('LeftEyeRoll', 0.000000)
	hierarchy_controller.add_curve('RightEyeYaw', 0.000000)
	hierarchy_controller.add_curve('RightEyePitch', 0.000000)
	hierarchy_controller.add_curve('RightEyeRoll', 0.000000)
	hierarchy_controller.add_curve('Pose_0', 0.000000)
	hierarchy_controller.add_curve('Pose_1', 0.000000)
	hierarchy_controller.add_curve('Pose_2', 0.000000)
	hierarchy_controller.add_curve('Pose_3', 0.000000)
	hierarchy_controller.add_curve('Pose_4', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutRight', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintRight', 0.000000)
	control_settings_facial_board = unreal.RigControlSettings()
	control_settings_facial_board.animation_type = unreal.RigControlAnimationType.PROXY_CONTROL
	control_settings_facial_board.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_facial_board.display_name = 'None'
	control_settings_facial_board.draw_limits = True
	control_settings_facial_board.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_facial_board.shape_name = 'RoundedSquare_Thin'
	control_settings_facial_board.shape_visible = True
	control_settings_facial_board.is_transient_control = False
	control_settings_facial_board.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_facial_board.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('Facial_Board', '', control_settings_facial_board, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,20.000000],rotation=[0.000000,0.000000,90.000035],scale=[2.500000,4.000000,1.000000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[30.929428,0.000000,146.966346],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_browGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_brow_raiseIn_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[0.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_brow_raise_in = unreal.RigControlSettings()
	control_settings_ctrl_c_brow_raise_in.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_brow_raise_in.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_brow_raise_in.display_name = 'None'
	control_settings_ctrl_c_brow_raise_in.draw_limits = True
	control_settings_ctrl_c_brow_raise_in.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_brow_raise_in.shape_name = 'Default'
	control_settings_ctrl_c_brow_raise_in.shape_visible = True
	control_settings_ctrl_c_brow_raise_in.is_transient_control = False
	control_settings_ctrl_c_brow_raise_in.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_brow_raise_in.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_brow_raise_in.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_brow_raise_in.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_brow_raiseIn', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_brow_raiseIn_GRP'), control_settings_ctrl_c_brow_raise_in, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_down.display_name = 'None'
	control_settings_ctrl_l_brow_down.draw_limits = True
	control_settings_ctrl_l_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_down.shape_name = 'Default'
	control_settings_ctrl_l_brow_down.shape_visible = True
	control_settings_ctrl_l_brow_down.is_transient_control = False
	control_settings_ctrl_l_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_down_GRP'), control_settings_ctrl_l_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_raise_out.display_name = 'None'
	control_settings_ctrl_l_brow_raise_out.draw_limits = True
	control_settings_ctrl_l_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_l_brow_raise_out.shape_visible = True
	control_settings_ctrl_l_brow_raise_out.is_transient_control = False
	control_settings_ctrl_l_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_raiseOut_GRP'), control_settings_ctrl_l_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_down.display_name = 'None'
	control_settings_ctrl_r_brow_down.draw_limits = True
	control_settings_ctrl_r_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_down.shape_name = 'Default'
	control_settings_ctrl_r_brow_down.shape_visible = True
	control_settings_ctrl_r_brow_down.is_transient_control = False
	control_settings_ctrl_r_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_down_GRP'), control_settings_ctrl_r_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_raise_out.display_name = 'None'
	control_settings_ctrl_r_brow_raise_out.draw_limits = True
	control_settings_ctrl_r_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_r_brow_raise_out.shape_visible = True
	control_settings_ctrl_r_brow_raise_out.is_transient_control = False
	control_settings_ctrl_r_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_raiseOut_GRP'), control_settings_ctrl_r_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_eyeGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[0.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_c_eye = unreal.RigControlSettings()
	control_settings_ctrl_c_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_eye.display_name = 'None'
	control_settings_ctrl_c_eye.draw_limits = True
	control_settings_ctrl_c_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_eye.shape_name = 'Default'
	control_settings_ctrl_c_eye.shape_visible = True
	control_settings_ctrl_c_eye.is_transient_control = False
	control_settings_ctrl_c_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_eye_GRP'), control_settings_ctrl_c_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_r_eye = unreal.RigControlSettings()
	control_settings_ctrl_r_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_r_eye.display_name = 'None'
	control_settings_ctrl_r_eye.draw_limits = True
	control_settings_ctrl_r_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye.shape_name = 'Default'
	control_settings_ctrl_r_eye.shape_visible = True
	control_settings_ctrl_r_eye.is_transient_control = False
	control_settings_ctrl_r_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_r_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_r_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_R_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_GRP'), control_settings_ctrl_r_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_l_eye = unreal.RigControlSettings()
	control_settings_ctrl_l_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_l_eye.display_name = 'None'
	control_settings_ctrl_l_eye.draw_limits = True
	control_settings_ctrl_l_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye.shape_name = 'Default'
	control_settings_ctrl_l_eye.shape_visible = True
	control_settings_ctrl_l_eye.is_transient_control = False
	control_settings_ctrl_l_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_l_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_l_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_L_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_GRP'), control_settings_ctrl_l_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_r_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_blink.display_name = 'None'
	control_settings_ctrl_r_eye_blink.draw_limits = True
	control_settings_ctrl_r_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_blink.shape_name = 'Default'
	control_settings_ctrl_r_eye_blink.shape_visible = True
	control_settings_ctrl_r_eye_blink.is_transient_control = False
	control_settings_ctrl_r_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_r_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_blink_GRP'), control_settings_ctrl_r_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_l_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_blink.display_name = 'None'
	control_settings_ctrl_l_eye_blink.draw_limits = True
	control_settings_ctrl_l_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_blink.shape_name = 'Default'
	control_settings_ctrl_l_eye_blink.shape_visible = True
	control_settings_ctrl_l_eye_blink.is_transient_control = False
	control_settings_ctrl_l_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_l_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_blink_GRP'), control_settings_ctrl_l_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_r_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_r_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_r_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_r_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_r_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_cheekRaise_GRP'), control_settings_ctrl_r_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_l_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_l_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_l_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_l_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_l_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_cheekRaise_GRP'), control_settings_ctrl_l_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_r_eye_squint_inner.draw_limits = True
	control_settings_ctrl_r_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_r_eye_squint_inner.shape_visible = True
	control_settings_ctrl_r_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_r_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_squintInner_GRP'), control_settings_ctrl_r_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-59.999820,-0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_l_eye_squint_inner.draw_limits = True
	control_settings_ctrl_l_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_l_eye_squint_inner.shape_visible = True
	control_settings_ctrl_l_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_l_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_squintInner_GRP'), control_settings_ctrl_l_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[59.999820,0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_noseGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_R_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[-2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_nose = unreal.RigControlSettings()
	control_settings_ctrl_r_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_nose.display_name = 'None'
	control_settings_ctrl_r_nose.draw_limits = True
	control_settings_ctrl_r_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_nose.shape_name = 'Default'
	control_settings_ctrl_r_nose.shape_visible = True
	control_settings_ctrl_r_nose.is_transient_control = False
	control_settings_ctrl_r_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_nose_GRP'), control_settings_ctrl_r_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_nose = unreal.RigControlSettings()
	control_settings_ctrl_l_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_nose.display_name = 'None'
	control_settings_ctrl_l_nose.draw_limits = True
	control_settings_ctrl_l_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_nose.shape_name = 'Default'
	control_settings_ctrl_l_nose.shape_visible = True
	control_settings_ctrl_l_nose.is_transient_control = False
	control_settings_ctrl_l_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_nose_GRP'), control_settings_ctrl_l_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_mouthGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,18.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_u = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_u.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_u.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_u.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_u.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseU_GRP'), control_settings_ctrl_c_jaw_chin_raise_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_r_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_r_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_r_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_upperLipRaise_GRP'), control_settings_ctrl_r_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[9.999931,0.000000,-89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_l_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_l_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_l_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_upperLipRaise_GRP'), control_settings_ctrl_l_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-10.000095,0.000000,-90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_r_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_r_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerPull_GRP'), control_settings_ctrl_r_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[29.999888,0.000000,-90.000020],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_l_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_l_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerPull_GRP'), control_settings_ctrl_l_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-30.000068,0.000000,-90.000068],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_dimple.display_name = 'None'
	control_settings_ctrl_r_mouth_dimple.draw_limits = True
	control_settings_ctrl_r_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_r_mouth_dimple.shape_visible = True
	control_settings_ctrl_r_mouth_dimple.is_transient_control = False
	control_settings_ctrl_r_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_dimple_GRP'), control_settings_ctrl_r_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[80.000126,-0.000000,-90.000271],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_dimple.display_name = 'None'
	control_settings_ctrl_l_mouth_dimple.draw_limits = True
	control_settings_ctrl_l_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_l_mouth_dimple.shape_visible = True
	control_settings_ctrl_l_mouth_dimple.is_transient_control = False
	control_settings_ctrl_l_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_dimple_GRP'), control_settings_ctrl_l_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-80.000241,0.000000,-90.000156],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_r_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_r_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerDepress_GRP'), control_settings_ctrl_r_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[50.000133,180.000000,89.999994],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_l_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_l_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerDepress_GRP'), control_settings_ctrl_l_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-49.999783,180.000000,90.000009],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_stretch.display_name = 'None'
	control_settings_ctrl_r_mouth_stretch.draw_limits = True
	control_settings_ctrl_r_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_r_mouth_stretch.shape_visible = True
	control_settings_ctrl_r_mouth_stretch.is_transient_control = False
	control_settings_ctrl_r_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_stretch_GRP'), control_settings_ctrl_r_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000196,180.000000,89.999995],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_stretch.display_name = 'None'
	control_settings_ctrl_l_mouth_stretch.draw_limits = True
	control_settings_ctrl_l_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_l_mouth_stretch.shape_visible = True
	control_settings_ctrl_l_mouth_stretch.is_transient_control = False
	control_settings_ctrl_l_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_stretch_GRP'), control_settings_ctrl_l_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-19.999856,180.000000,89.999935],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_r_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_lowerLipDepress_GRP'), control_settings_ctrl_r_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000259,180.000000,90.000018],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_l_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_lowerLipDepress_GRP'), control_settings_ctrl_l_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999767,180.000000,89.999975],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,10.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_d = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_d.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_d.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_d.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_d.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseD_GRP'), control_settings_ctrl_c_jaw_chin_raise_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_suckBlow_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-10.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_suck_blow = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_suck_blow.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_suck_blow.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_suck_blow.display_name = 'None'
	control_settings_ctrl_c_mouth_suck_blow.draw_limits = True
	control_settings_ctrl_c_mouth_suck_blow.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_suck_blow.shape_name = 'Default'
	control_settings_ctrl_c_mouth_suck_blow.shape_visible = True
	control_settings_ctrl_c_mouth_suck_blow.is_transient_control = False
	control_settings_ctrl_c_mouth_suck_blow.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_suck_blow.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_suck_blow.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_suck_blow.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_suckBlow', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_suckBlow_GRP'), control_settings_ctrl_c_mouth_suck_blow, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,16.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth.display_name = 'None'
	control_settings_ctrl_c_mouth.draw_limits = True
	control_settings_ctrl_c_mouth.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth.shape_name = 'Default'
	control_settings_ctrl_c_mouth.shape_visible = True
	control_settings_ctrl_c_mouth.is_transient_control = False
	control_settings_ctrl_c_mouth.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_mouth.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_GRP'), control_settings_ctrl_c_mouth, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-90.000000,-165.963757,75.963757],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_jawGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[0.000000,0.000000,7.000000],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,4.000000,2.000000]), False)
	control_settings_ctrl_c_jaw = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_jaw.display_name = 'None'
	control_settings_ctrl_c_jaw.draw_limits = True
	control_settings_ctrl_c_jaw.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw.shape_name = 'Default'
	control_settings_ctrl_c_jaw.shape_visible = True
	control_settings_ctrl_c_jaw.is_transient_control = False
	control_settings_ctrl_c_jaw.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000))
	control_settings_ctrl_c_jaw.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_jaw.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_jaw', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_GRP'), control_settings_ctrl_c_jaw, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.020000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,-180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,8.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_u = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_u.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_u.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_u.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_u.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollU_GRP'), control_settings_ctrl_c_mouth_lips_roll_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,3.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_d.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_d.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_d.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_d.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollD_GRP'), control_settings_ctrl_c_mouth_lips_roll_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_purseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-7.500000,0.000000,4.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_purse_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_purse_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_purse_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_purse_d.display_name = 'None'
	control_settings_ctrl_c_mouth_purse_d.draw_limits = True
	control_settings_ctrl_c_mouth_purse_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_purse_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_purse_d.shape_visible = True
	control_settings_ctrl_c_mouth_purse_d.is_transient_control = False
	control_settings_ctrl_c_mouth_purse_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_purse_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_purse_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_purse_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_purseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_purseD_GRP'), control_settings_ctrl_c_mouth_purse_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_funnelD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-5.000000,0.000000,4.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_funnel_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_funnel_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_funnel_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_funnel_d.display_name = 'None'
	control_settings_ctrl_c_mouth_funnel_d.draw_limits = True
	control_settings_ctrl_c_mouth_funnel_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_funnel_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_funnel_d.shape_visible = True
	control_settings_ctrl_c_mouth_funnel_d.is_transient_control = False
	control_settings_ctrl_c_mouth_funnel_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_funnel_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_funnel_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_funnel_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_funnelD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_funnelD_GRP'), control_settings_ctrl_c_mouth_funnel_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_fwdBack_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[3.500000,0.000000,5.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_fwd_back = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_fwd_back.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_fwd_back.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_fwd_back.display_name = 'None'
	control_settings_ctrl_c_jaw_fwd_back.draw_limits = True
	control_settings_ctrl_c_jaw_fwd_back.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_fwd_back.shape_name = 'Default'
	control_settings_ctrl_c_jaw_fwd_back.shape_visible = True
	control_settings_ctrl_c_jaw_fwd_back.is_transient_control = False
	control_settings_ctrl_c_jaw_fwd_back.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_fwd_back.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_jaw_fwd_back.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_fwd_back.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_fwdBack', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_fwdBack_GRP'), control_settings_ctrl_c_jaw_fwd_back, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_close_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[5.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_close = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_close.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_close.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_close.display_name = 'None'
	control_settings_ctrl_c_mouth_close.draw_limits = True
	control_settings_ctrl_c_mouth_close.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_close.shape_name = 'Default'
	control_settings_ctrl_c_mouth_close.shape_visible = True
	control_settings_ctrl_c_mouth_close.is_transient_control = False
	control_settings_ctrl_c_mouth_close.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_close.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_close.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_close.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_close', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_close_GRP'), control_settings_ctrl_c_mouth_close, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[7.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_press.display_name = 'None'
	control_settings_ctrl_r_mouth_press.draw_limits = True
	control_settings_ctrl_r_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_press.shape_name = 'Default'
	control_settings_ctrl_r_mouth_press.shape_visible = True
	control_settings_ctrl_r_mouth_press.is_transient_control = False
	control_settings_ctrl_r_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_press_GRP'), control_settings_ctrl_r_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999603,180.000000,89.999961],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[9.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_press.display_name = 'None'
	control_settings_ctrl_l_mouth_press.draw_limits = True
	control_settings_ctrl_l_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_press.shape_name = 'Default'
	control_settings_ctrl_l_mouth_press.shape_visible = True
	control_settings_ctrl_l_mouth_press.is_transient_control = False
	control_settings_ctrl_l_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_press_GRP'), control_settings_ctrl_l_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000423,180.000000,90.000033],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_tongueGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[1.500000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_tongue_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[5.000000,0.000000,9.000000],rotation=[-0.000115,90.000115,-90.000229],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_press = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_press.display_name = 'None'
	control_settings_ctrl_c_tongue_press.draw_limits = True
	control_settings_ctrl_c_tongue_press.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_press.shape_name = 'Default'
	control_settings_ctrl_c_tongue_press.shape_visible = True
	control_settings_ctrl_c_tongue_press.is_transient_control = False
	control_settings_ctrl_c_tongue_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_tongue_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_press_GRP'), control_settings_ctrl_c_tongue_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_roll_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[6.500000,0.000000,9.000000],rotation=[0.000081,-0.000081,-89.999873],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_roll = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_roll.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_roll.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue_roll.display_name = 'None'
	control_settings_ctrl_c_tongue_roll.draw_limits = True
	control_settings_ctrl_c_tongue_roll.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_roll.shape_name = 'Default'
	control_settings_ctrl_c_tongue_roll.shape_visible = True
	control_settings_ctrl_c_tongue_roll.is_transient_control = False
	control_settings_ctrl_c_tongue_roll.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_roll.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue_roll.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue_roll.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue_roll', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_roll_GRP'), control_settings_ctrl_c_tongue_roll, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_tip_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[9.000000,0.000000,9.000000],rotation=[-0.000081,-0.000081,-90.000035],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_tip = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_tip.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_tip.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue_tip.display_name = 'None'
	control_settings_ctrl_c_tongue_tip.draw_limits = True
	control_settings_ctrl_c_tongue_tip.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_tip.shape_name = 'Default'
	control_settings_ctrl_c_tongue_tip.shape_visible = True
	control_settings_ctrl_c_tongue_tip.is_transient_control = False
	control_settings_ctrl_c_tongue_tip.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_tip.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue_tip.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue_tip.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue_tip', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_tip_GRP'), control_settings_ctrl_c_tongue_tip, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[3.500000,0.000000,9.000000],rotation=[-0.000243,-0.000081,-90.000035],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue.display_name = 'None'
	control_settings_ctrl_c_tongue.draw_limits = True
	control_settings_ctrl_c_tongue.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue.shape_name = 'Default'
	control_settings_ctrl_c_tongue.shape_visible = True
	control_settings_ctrl_c_tongue.is_transient_control = False
	control_settings_ctrl_c_tongue.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_GRP'), control_settings_ctrl_c_tongue, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_narrowWide_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[5.000000,0.000000,10.500000],rotation=[-0.000081,89.999873,179.999919],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_narrow_wide = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_narrow_wide.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_narrow_wide.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_narrow_wide.display_name = 'None'
	control_settings_ctrl_c_tongue_narrow_wide.draw_limits = True
	control_settings_ctrl_c_tongue_narrow_wide.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_narrow_wide.shape_name = 'Default'
	control_settings_ctrl_c_tongue_narrow_wide.shape_visible = True
	control_settings_ctrl_c_tongue_narrow_wide.is_transient_control = False
	control_settings_ctrl_c_tongue_narrow_wide.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_narrow_wide.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_tongue_narrow_wide.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_narrow_wide.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_narrowWide', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_narrowWide_GRP'), control_settings_ctrl_c_tongue_narrow_wide, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_inOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[2.000000,0.000000,9.000000],rotation=[-0.000057,90.000000,-90.000229],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_in_out = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_in_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_in_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_in_out.display_name = 'None'
	control_settings_ctrl_c_tongue_in_out.draw_limits = True
	control_settings_ctrl_c_tongue_in_out.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_in_out.shape_name = 'Default'
	control_settings_ctrl_c_tongue_in_out.shape_visible = True
	control_settings_ctrl_c_tongue_in_out.is_transient_control = False
	control_settings_ctrl_c_tongue_in_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_in_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_tongue_in_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_in_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_inOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_inOut_GRP'), control_settings_ctrl_c_tongue_in_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_switchesGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,3.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_lookAtSwitch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_switchesGUI'), unreal.Transform(location=[8.000000,0.000000,38.000000],rotation=[0.000081,-90.000035,0.000081],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_look_at_switch = unreal.RigControlSettings()
	control_settings_ctrl_look_at_switch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_look_at_switch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_look_at_switch.display_name = 'None'
	control_settings_ctrl_look_at_switch.draw_limits = True
	control_settings_ctrl_look_at_switch.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_look_at_switch.shape_name = 'Default'
	control_settings_ctrl_look_at_switch.shape_visible = True
	control_settings_ctrl_look_at_switch.is_transient_control = False
	control_settings_ctrl_look_at_switch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_look_at_switch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_look_at_switch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_look_at_switch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_lookAtSwitch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_lookAtSwitch_GRP'), control_settings_ctrl_look_at_switch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.100000,0.020000,0.050000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_eyeControls', '', unreal.Transform(location=[17.737194,7.487751,140.274658],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_eyes_aim = unreal.RigControlSettings()
	control_settings_ctrl_c_eyes_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_eyes_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_c_eyes_aim.display_name = 'None'
	control_settings_ctrl_c_eyes_aim.draw_limits = True
	control_settings_ctrl_c_eyes_aim.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_eyes_aim.shape_name = 'RoundedSquare_Thick'
	control_settings_ctrl_c_eyes_aim.shape_visible = True
	control_settings_ctrl_c_eyes_aim.is_transient_control = False
	control_settings_ctrl_c_eyes_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_c_eyes_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_c_eyes_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_c_eyes_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_C_eyesAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeControls'), control_settings_ctrl_c_eyes_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[90.000000,180.000000,-90.000000],scale=[1.200000,0.500000,0.300000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[-17.732119,22.512249,31.120455],rotation=[90.000000,180.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eyeAim_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[-0.013297,0.000000,3.408712],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_l_eye_aim = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_l_eye_aim.display_name = 'None'
	control_settings_ctrl_l_eye_aim.draw_limits = True
	control_settings_ctrl_l_eye_aim.shape_color = unreal.LinearColor(1.000000, 0.964687, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_aim.shape_name = 'Circle_Thick'
	control_settings_ctrl_l_eye_aim.shape_visible = True
	control_settings_ctrl_l_eye_aim.is_transient_control = False
	control_settings_ctrl_l_eye_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_l_eye_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_l_eye_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_l_eye_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_L_eyeAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eyeAim_space'), control_settings_ctrl_l_eye_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,90.000035],scale=[0.300000,0.300000,0.100000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.Transform(location=[0.006729,0.000000,0.063249],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eyeAim_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[0.013297,0.000000,-3.408712],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_r_eye_aim = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_r_eye_aim.display_name = 'None'
	control_settings_ctrl_r_eye_aim.draw_limits = True
	control_settings_ctrl_r_eye_aim.shape_color = unreal.LinearColor(1.000000, 0.964687, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_aim.shape_name = 'Circle_Thick'
	control_settings_ctrl_r_eye_aim.shape_visible = True
	control_settings_ctrl_r_eye_aim.is_transient_control = False
	control_settings_ctrl_r_eye_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_r_eye_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_r_eye_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_r_eye_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_R_eyeAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eyeAim_space'), control_settings_ctrl_r_eye_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,90.000035],scale=[0.300000,0.300000,0.100000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.Transform(location=[-0.006729,0.000000,-0.063249],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	control_settings_frm_convergence_gui = unreal.RigControlSettings()
	control_settings_frm_convergence_gui.animation_type = unreal.RigControlAnimationType.PROXY_CONTROL
	control_settings_frm_convergence_gui.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_frm_convergence_gui.display_name = 'None'
	control_settings_frm_convergence_gui.draw_limits = True
	control_settings_frm_convergence_gui.shape_color = unreal.LinearColor(0.000000, 0.000000, 0.000000, 1.000000)
	control_settings_frm_convergence_gui.shape_name = 'convergence_3L'
	control_settings_frm_convergence_gui.shape_visible = True
	control_settings_frm_convergence_gui.is_transient_control = False
	control_settings_frm_convergence_gui.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_frm_convergence_gui.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_frm_convergence_gui.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_frm_convergence_gui.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('FRM_convergenceGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), control_settings_frm_convergence_gui, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[90.000000,0.000000,-179.999838],scale=[1.000000,1.000000,1.000000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[-4.360413,-0.000001,0.000027],rotation=[0.000000,0.000000,0.000000],scale=[1.200000,1.200000,1.200000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_convergenceSwitch_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[-0.440002,0.000000,-1.000010],rotation=[0.000000,-180.000000,-89.999711],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_convergence_switch = unreal.RigControlSettings()
	control_settings_ctrl_convergence_switch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_convergence_switch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_convergence_switch.display_name = 'None'
	control_settings_ctrl_convergence_switch.draw_limits = True
	control_settings_ctrl_convergence_switch.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_convergence_switch.shape_name = 'Default'
	control_settings_ctrl_convergence_switch.shape_visible = True
	control_settings_ctrl_convergence_switch.is_transient_control = False
	control_settings_ctrl_convergence_switch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_convergence_switch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_convergence_switch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_convergence_switch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_convergenceSwitch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_convergenceSwitch_space'), control_settings_ctrl_convergence_switch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_INR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_OUTR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_INL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_INR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_OUTL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_OUTR', 0.000000)
	hierarchy_controller.add_bone('root', '', unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('pelvis', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='root'), unreal.Transform(location=[-0.000000,2.280866,97.896782],rotation=[86.366893,-90.000000,-90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='pelvis'), unreal.Transform(location=[3.677053,0.000000,0.000000],rotation=[0.000000,14.457322,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_01'), unreal.Transform(location=[6.795057,0.000000,0.000000],rotation=[0.000000,-3.464470,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_03', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_02'), unreal.Transform(location=[7.238228,0.000000,0.000000],rotation=[0.000000,-10.946079,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_03'), unreal.Transform(location=[8.523893,0.000000,0.000000],rotation=[0.000000,-5.866984,0.000450],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_05', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_04'), unreal.Transform(location=[19.439800,0.000000,0.000000],rotation=[-0.000005,-0.681389,-0.000449],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[11.887766,0.000000,0.000000],rotation=[0.000000,23.928404,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_01'), unreal.Transform(location=[5.110260,0.000000,0.000000],rotation=[0.000000,-1.913529,-0.000098],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('head', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_02'), unreal.Transform(location=[4.912971,0.000000,0.000000],rotation=[0.000020,-11.880169,0.000096],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_FacialRoot', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='head'), unreal.Transform(location=[4.539611,-1.292612,-0.000001],rotation=[-90.000000,0.000000,90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.033159,-9.120307,11.241559],rotation=[0.000000,0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.111538,-8.632834,11.377698],rotation=[-10.000001,10.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.191992,-8.643562,11.391563],rotation=[10.000001,-10.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.024571,-10.632588,10.118773],rotation=[0.000000,0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020072,-12.156291,8.540941],rotation=[0.000000,0.000000,45.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.012764,-13.725125,5.655601],rotation=[0.000000,0.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.006436,-14.409169,1.555831],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.012903,-13.366991,-2.992088],rotation=[0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.882738,-8.665192,10.183965],rotation=[-23.999999,24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.988724,-8.702345,10.214046],rotation=[23.999999,-24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.868986,-10.351617,8.818857],rotation=[-23.999999,24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.938937,-10.397866,8.829982],rotation=[23.999999,-24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.123147,-11.601115,7.030155],rotation=[-20.000000,32.000000,36.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.154619,-11.641753,7.024999],rotation=[20.000000,-32.000000,36.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.037686,-12.729738,4.967597],rotation=[-15.999999,35.000000,28.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.034410,-12.752872,4.949427],rotation=[15.999999,-35.000000,28.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.462377,-13.125817,1.779668],rotation=[-5.000000,34.999998,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.411909,-13.121728,1.753451],rotation=[5.000000,-34.999998,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.556622,-12.530653,-1.749729],rotation=[7.000000,32.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.498546,-12.557862,-1.787995],rotation=[-7.000000,-32.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.799356,-7.104973,9.037388],rotation=[31.000000,-13.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.913898,-7.139815,9.033218],rotation=[-31.000000,13.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.477154,-8.484173,7.015952],rotation=[27.000000,-16.999999,38.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.555805,-8.534161,6.998523],rotation=[-27.000000,16.999999,38.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.091416,-9.432432,4.419511],rotation=[17.000001,-21.000000,23.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.122130,-9.478121,4.380607],rotation=[-17.000001,21.000000,23.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.269088,-10.149133,1.169526],rotation=[11.000000,-22.000000,11.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.245151,-10.189685,1.118460],rotation=[-11.000000,22.000000,11.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.371854,-9.315550,-1.126072],rotation=[4.000000,-21.999999,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.331873,-9.366305,-1.190954],rotation=[-4.000000,21.999999,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Temple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.825635,-4.721194,7.729728],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Temple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.891916,-4.742426,7.675189],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.352862,-4.400757,8.823400],rotation=[12.000001,-5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.452101,-4.408408,8.784590],rotation=[-12.000001,5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.753538,-3.728731,7.901552],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.821705,-3.745118,7.840795],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.807117,-5.865160,7.633657],rotation=[12.000001,-5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.904788,-5.893574,7.597838],rotation=[-12.000001,5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.259077,-4.908216,6.490633],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.338111,-4.935334,6.436494],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.525741,-5.597568,5.551270],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.600992,-5.632124,5.494573],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.067300,-6.775639,2.513887],rotation=[8.000000,-7.000000,16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.115940,-6.822471,2.441777],rotation=[-8.000000,7.000000,16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.005116,-6.559712,-0.803244],rotation=[-1.000000,-8.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.991968,-6.616871,-0.900174],rotation=[0.999999,8.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.094373,-4.034313,-0.181646],rotation=[-1.000000,5.000000,-3.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.111160,-4.100608,-0.376424],rotation=[0.999996,-5.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.050089,-2.645748,7.080392],rotation=[11.999999,2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.084443,-2.659190,7.004072],rotation=[-11.999999,-2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.605927,-3.130383,4.879639],rotation=[9.000001,2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.651030,-3.156768,4.778645],rotation=[-9.000001,-2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.989627,-3.231361,2.738831],rotation=[4.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.042659,-3.263240,2.516061],rotation=[-4.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.288127,-0.527408,6.784258],rotation=[10.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.286848,-0.527157,6.697066],rotation=[-10.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.578488,-0.684030,5.104172],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.562095,-0.699776,4.987884],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.718945,-0.839628,3.427123],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.732023,-0.885435,3.214532],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_ForeheadSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.049164,-6.796334,12.236732],rotation=[-0.000002,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.014448,-6.791122,11.990355],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.137918,-6.794342,12.011873],rotation=[11.999998,-7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.734799,-7.510923,11.941590],rotation=[-0.000002,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.829956,-7.512693,11.951542],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.669811,-6.106448,12.445195],rotation=[-0.000003,-0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.777681,-6.103161,12.449026],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.558033,-7.486259,11.847287],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.660117,-7.487206,11.842149],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.423858,-6.125346,12.350146],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.542125,-6.121401,12.361465],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.914536,-7.397292,11.452380],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.035239,-7.408222,11.469148],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.666940,-6.147152,12.013764],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.797022,-6.139826,12.023891],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMidSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.143532,-6.244084,11.084763],rotation=[-22.000002,14.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMidSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.274692,-6.237947,11.086510],rotation=[21.999998,-14.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.473537,-5.712158,9.938304],rotation=[-29.000001,31.999999,-28.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.599298,-5.708497,9.929138],rotation=[28.999999,-31.999999,-27.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Skull', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.146559,-3.787936,2.459196],rotation=[0.000000,0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.070308,-4.219746,11.956030],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.017354,-1.449006,0.801602],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.729242,-1.463894,0.784796],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.699450,-1.461572,0.787169],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.021567,-0.134181,1.077228],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.713316,-0.142309,1.075022],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.713873,-0.144624,1.133650],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.026005,0.881206,0.972089],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.649868,0.913236,0.893278],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.623672,0.919360,0.886065],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.017672,-2.134486,0.607640],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.755743,-2.143139,0.568355],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.727226,-2.141160,0.579441],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.018104,-1.112938,0.894409],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.722598,-1.130807,0.890897],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.690036,-1.125949,0.880507],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.019457,-0.776038,0.973285],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.719524,-0.797562,0.982106],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.684897,-0.789798,0.971544],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.023277,0.428940,1.067693],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.695685,0.441064,1.035315],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.654873,0.457306,1.047279],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.024691,0.665611,1.023990],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.677755,0.689960,0.973030],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.633799,0.708194,0.987215],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.027885,1.267807,0.850161],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.565618,1.304939,0.731696],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.516658,1.324955,0.756181],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadIn', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.844351,-4.172100,11.598560],rotation=[-8.000000,0.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.859110,-0.800393,1.222163],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.910962,0.473775,1.226057],rotation=[-4.000000,-6.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.395230,1.162174,0.658821],rotation=[12.000000,-18.000001,30.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.610529,-0.894834,1.068884],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.467791,0.330425,1.167964],rotation=[0.000000,0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.048966,-1.456229,1.023931],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.125682,-0.461103,1.266396],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.140832,-0.135400,1.291906],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.174425,0.716608,1.128303],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.292161,-1.485868,1.006693],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.385962,-0.489555,1.289020],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.403910,-0.159123,1.317883],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.425977,0.741393,1.081917],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.702143,-1.534849,0.884143],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.568436,-0.568838,1.147492],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.531459,-0.248627,1.204851],rotation=[0.000000,0.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.435624,0.570781,1.068617],rotation=[0.000000,0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.730497,1.387414,0.488894],rotation=[17.000001,-28.000001,28.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.381126,0.931674,0.766850],rotation=[6.000000,-6.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadIn', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.828141,-4.122396,11.589052],rotation=[8.000000,0.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.737833,-0.834751,1.251069],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.796561,0.449952,1.279384],rotation=[4.000000,6.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.272588,1.164737,0.711919],rotation=[-12.000000,18.000001,30.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.740616,-0.917072,1.098179],rotation=[14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.582483,0.320989,1.197716],rotation=[0.000000,0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.927822,-1.496979,1.046493],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.009603,-0.495679,1.305966],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.026109,-0.167919,1.335628],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.158030,-1.525547,1.057776],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.066128,0.691396,1.185722],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.261524,-0.518274,1.321212],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.282432,-0.184872,1.355350],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.309722,0.733139,1.142557],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.841238,-1.567453,0.927216],rotation=[14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.694598,-0.588208,1.172146],rotation=[14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.547290,0.567016,1.103222],rotation=[0.000000,0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.652133,-0.265082,1.221635],rotation=[0.000000,0.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.625754,1.373417,0.536880],rotation=[-17.000001,28.000001,28.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.489507,0.938860,0.799390],rotation=[-6.000000,6.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.380565,-4.737338,10.735550],rotation=[-19.999999,4.000000,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.138865,-0.264904,1.105596],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.104741,0.812480,1.369914],rotation=[-7.000000,5.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.201501,-0.891370,1.061823],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.463459,0.057116,1.327125],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.520689,0.362632,1.412537],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.624795,1.109863,1.362715],rotation=[-7.000000,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.838935,-0.791638,0.785880],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.584842,0.058600,1.058609],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.523563,0.321971,1.169599],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.353795,1.005625,1.274134],rotation=[-7.000000,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.379190,-4.676110,10.654889],rotation=[19.999999,-4.000000,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.229519,-0.279873,1.236999],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.034533,0.813123,1.474138],rotation=[7.000000,-5.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.109876,-0.912638,1.185520],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.384692,0.045809,1.440562],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.448648,0.354643,1.516061],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.559081,1.110963,1.473843],rotation=[7.000000,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.938763,-0.815255,0.920848],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.661193,0.053323,1.149464],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.593094,0.322570,1.248027],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.424134,1.008044,1.365072],rotation=[7.000000,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOut', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.770576,-4.297495,9.803448],rotation=[-27.999999,14.000000,-18.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.241537,-0.253811,1.021405],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.465122,0.950042,1.288429],rotation=[-12.000000,2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.069151,-0.044736,0.472039],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.749422,1.079654,0.802373],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.179506,-0.534078,0.951663],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.347317,0.276003,1.162522],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut25', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.384184,0.509664,1.247863],rotation=[-12.000000,2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut26', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.577983,1.495437,1.117081],rotation=[-12.000000,2.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut27', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.163055,-0.299872,0.398842],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut28', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.931030,0.443581,0.662864],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut29', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.441769,0.815020,0.975250],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut30', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.187872,1.692419,0.792248],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut31', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.556306,1.100371,0.257937],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut32', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.149578,1.861611,0.230024],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOut', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.838775,-4.211833,9.777843],rotation=[27.999999,-14.000000,-18.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.220922,-0.307730,1.055924],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.455430,0.910840,1.296808],rotation=[12.000000,-2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.097684,-0.120766,0.512334],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.757651,1.024066,0.804082],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.152244,-0.594928,1.005899],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.334556,0.233481,1.174577],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut25', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.371019,0.469052,1.261158],rotation=[12.000000,-2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut26', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.577966,1.463534,1.134057],rotation=[12.000000,-2.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut27', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.190748,-0.381311,0.439132],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut28', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.948224,0.382245,0.679005],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut29', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.456418,0.769195,0.985182],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut30', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.201552,1.659210,0.803309],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut31', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.565912,1.013369,0.248681],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut32', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.164890,1.788316,0.239121],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackU0', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.765560,-2.636326,11.580383],rotation=[3.000000,-17.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackU0', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.795762,-2.631791,11.588289],rotation=[-3.000000,17.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.632018,-3.277878,11.576002],rotation=[-10.000001,7.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[-1.119402,0.356969,0.086710],rotation=[9.000000,-12.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[0.004421,0.095821,0.173162],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[1.267461,0.236679,-0.159082],rotation=[-10.000000,7.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.667179,-3.257243,11.555912],rotation=[10.000001,-7.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[1.122204,0.341015,0.116433],rotation=[-9.000000,12.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[0.005827,0.086880,0.185942],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[-1.270527,0.240231,-0.170569],rotation=[10.000000,-7.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.600863,-2.430639,10.151261],rotation=[-30.000001,25.000001,4.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.640156,-2.428574,10.102605],rotation=[30.000001,-25.000001,4.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.562237,-3.149674,11.115275],rotation=[-17.000001,10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[-0.906961,0.503868,-0.260338],rotation=[24.000000,-21.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[-0.022793,0.041485,0.090869],rotation=[10.000000,-1.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[1.180850,0.118063,-0.016744],rotation=[-8.000000,3.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.536476,-3.171897,11.117773],rotation=[17.000001,-10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[0.902219,0.471876,-0.271971],rotation=[-24.000000,21.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[0.022897,0.039445,0.084973],rotation=[-10.000000,1.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[-1.203094,0.118907,-0.002688],rotation=[8.000000,-3.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413845,-2.188019,9.697194],rotation=[0.000000,0.000000,-26.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[-0.694530,0.226607,1.636400],rotation=[14.000000,-10.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[0.167421,0.052687,1.822048],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[1.113088,0.079781,1.422747],rotation=[-19.000000,6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,-26.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[0.717982,0.213092,1.645526],rotation=[-14.000000,10.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[-0.139417,0.058316,1.825905],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[-1.101173,0.097074,1.443620],rotation=[19.000000,-6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,-17.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[-0.680295,0.176838,1.579588],rotation=[14.000000,-10.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA1'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000001,0.000005,-0.000017],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[0.175672,0.036464,1.814505],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA2'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000011],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[1.070481,0.128906,1.396506],rotation=[-19.000000,6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA3'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000018,-0.000004,0.000030],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,-17.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[0.708846,0.185056,1.575403],rotation=[-14.000000,10.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA1'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000012,-0.000005,-0.000005],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[-0.136060,0.030537,1.821347],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA2'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000011],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[-1.054629,0.126110,1.425339],rotation=[19.000000,-6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA3'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000009,0.000003,0.000025],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Eye', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeParallel', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Pupil', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeParallel'), unreal.Transform(location=[0.093620,0.048643,1.345957],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Eye', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeParallel', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Pupil', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeParallel'), unreal.Transform(location=[-0.079874,0.052018,1.355275],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.418181,-2.181764,9.704404],rotation=[0.000000,0.000000,33.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[-0.673963,-0.242509,1.530385],rotation=[9.000001,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[0.176938,-0.171735,1.653140],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[1.024033,-0.115866,1.300080],rotation=[-21.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,33.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[0.646772,-0.220074,1.564548],rotation=[-9.000001,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[-0.189706,-0.149687,1.681779],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[-1.037660,-0.096326,1.327259],rotation=[21.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.406045,-2.200466,9.706235],rotation=[0.000208,-0.001388,36.998788],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[-0.650574,-0.144671,1.755001],rotation=[8.998828,-0.001484,-0.000365],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[0.217118,-0.019528,1.805953],rotation=[-0.000830,-0.000740,-0.000516],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[1.108616,0.132927,1.466105],rotation=[-20.999088,-0.002381,0.001459],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.398557,-2.225882,9.684868],rotation=[-0.000538,0.001862,37.997593],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[0.622191,-0.151406,1.767613],rotation=[-8.999305,0.001863,-0.000992],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[-0.238163,-0.029988,1.814956],rotation=[0.001670,0.000613,-0.000467],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[-1.126743,0.117961,1.469202],rotation=[20.999318,0.002953,0.001079],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.952294,-1.791856,10.924731],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerInner'), unreal.Transform(location=[0.145393,-0.244307,0.057806],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerInner'), unreal.Transform(location=[0.254430,0.154533,0.061558],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.925360,-1.782082,10.910858],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerInner'), unreal.Transform(location=[-0.167500,-0.269582,0.062751],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerInner'), unreal.Transform(location=[-0.273654,0.148479,0.054857],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.906773,-1.988998,10.283381],rotation=[-45.000001,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter'), unreal.Transform(location=[-0.138843,-0.178321,0.172909],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter1'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000017,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter'), unreal.Transform(location=[-0.019378,0.121487,0.050772],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.911734,-2.018491,10.202393],rotation=[44.999995,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter'), unreal.Transform(location=[0.199978,-0.181229,0.226828],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter1'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000013,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter'), unreal.Transform(location=[0.071845,0.130585,0.100269],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyeCornerO1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.253812,-1.961912,10.064713],rotation=[-30.000000,25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyeCornerO1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.255300,-1.999494,10.041357],rotation=[30.000000,-25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyeCornerO2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.654426,-1.627458,9.606414],rotation=[-30.000000,25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyeCornerO2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.677468,-1.653656,9.554701],rotation=[29.996687,-24.998472,0.004789],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.712761,-0.839812,10.573346],rotation=[-15.996048,2.991301,-2.988021],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.245187,0.068202,0.253258],rotation=[22.978162,2.997512,3.026844],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[1.206117,-0.093677,0.150269],rotation=[-9.996921,-12.010710,2.004607],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.674801,-0.211724,0.143689],rotation=[23.000197,2.996667,2.997214],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.659909,0.257074,0.248974],rotation=[23.017401,2.996959,3.018187],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-0.627359,-0.093272,0.415010],rotation=[22.990563,3.006377,3.009323],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-0.504898,0.599453,0.403688],rotation=[22.993331,3.016159,3.028017],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[0.327297,-0.105586,0.414589],rotation=[-10.004004,-11.995202,2.012296],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[0.652869,0.639748,0.378990],rotation=[-9.968759,-12.011817,1.968349],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[1.631519,-0.576662,-0.086966],rotation=[-10.005631,-11.997985,1.999650],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[2.050230,0.222608,-0.116444],rotation=[-10.003147,-11.995878,1.976578],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.794572,-0.840254,10.637772],rotation=[15.999557,-2.994881,-2.985585],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.270445,0.064150,0.176161],rotation=[-22.983615,-3.012229,3.037963],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-1.184048,-0.119269,0.039437],rotation=[9.997466,12.005681,2.009183],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.705940,-0.215044,0.054636],rotation=[-22.998677,-2.982523,2.993171],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.685922,0.245483,0.173039],rotation=[-23.010676,-2.981602,3.039483],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[0.650725,-0.111752,0.307745],rotation=[-22.991317,-3.006494,3.009589],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[0.533207,0.585340,0.314278],rotation=[-22.991159,-3.010614,3.057037],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-0.306091,-0.124202,0.313367],rotation=[10.004810,11.994013,2.014710],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-0.635701,0.623952,0.278679],rotation=[9.961531,12.034904,1.947434],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-1.594586,-0.607582,-0.213593],rotation=[10.007893,11.995906,1.999289],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-2.020180,0.198932,-0.250797],rotation=[9.996388,11.999575,1.962429],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.333541,0.125195,10.480430],rotation=[-6.987755,23.973209,-16.028850],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[-0.567284,-0.122180,0.988401],rotation=[-6.020748,-2.998800,5.949176],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[-0.344651,0.862556,1.178169],rotation=[-7.041059,16.983741,3.096027],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[0.692487,0.002770,0.882263],rotation=[-5.963788,-3.002984,5.949789],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[0.728461,1.275897,0.975929],rotation=[-7.072506,17.040989,3.067805],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.222874,0.118979,10.429791],rotation=[6.983431,-23.970828,-16.024415],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[0.428049,-0.179542,1.062235],rotation=[6.022326,3.013270,5.930506],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[0.201069,0.828185,1.267604],rotation=[7.052740,-17.000956,3.128528],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[-0.829133,-0.052514,0.924139],rotation=[5.952245,2.997523,5.918074],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[-0.858772,1.245147,1.028214],rotation=[7.083738,-16.999530,3.093780],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.347557,0.396001,8.822820],rotation=[-43.000541,-18.008016,13.991279],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[-0.926659,-0.456995,1.623680],rotation=[-4.979354,5.007783,-7.977591],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[0.119506,1.558356,1.746722],rotation=[-3.992187,6.005342,9.013340],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[1.402375,-0.501823,1.592036],rotation=[-7.996249,-24.990726,-3.986623],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.275924,0.462740,8.865720],rotation=[43.001739,18.008391,13.994488],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[0.774076,-0.503145,1.630153],rotation=[4.972398,-5.011832,-7.976370],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[-0.271560,1.524076,1.735049],rotation=[3.991740,-6.024731,9.032860],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[-1.557884,-0.542093,1.565038],rotation=[7.990418,24.979992,-3.982627],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.373089,-2.038490,8.838681],rotation=[24.999998,3.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.408897,-2.052711,8.758998],rotation=[-25.000003,-3.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.962443,-2.198213,9.523251],rotation=[32.997461,9.004622,35.002654],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.006211,-2.203174,9.461296],rotation=[-32.994166,-9.005683,35.003171],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.120540,-1.255244,9.154986],rotation=[40.001826,-2.006710,-15.004393],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.139453,-1.273724,9.078301],rotation=[-39.998523,2.007718,-15.000191],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.443374,-2.790036,8.786530],rotation=[24.999998,3.000000,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.502463,-2.794725,8.722017],rotation=[-24.999998,-2.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.789050,-1.201647,8.128102],rotation=[24.999997,3.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.797048,-1.207108,8.039523],rotation=[-24.993787,-3.002555,-4.990282],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.036044,-2.888519,12.838471],rotation=[-0.000001,0.000003,4.983073],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.041622,-3.219433,12.975347],rotation=[-0.000001,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.542164,-3.175879,12.874000],rotation=[-0.000001,0.000000,4.996350],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.630316,-3.158115,12.896300],rotation=[-0.000136,0.001538,4.996314],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.027472,-2.449676,12.734459],rotation=[-0.000001,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.375823,-2.394738,12.610187],rotation=[-0.000001,0.000000,5.002921],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.431458,-2.385627,12.610047],rotation=[0.000165,-0.001891,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.295530,-2.043756,11.462784],rotation=[-33.996590,16.001215,-4.016610],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.313279,-2.069438,11.515708],rotation=[33.996586,-16.001992,-4.023608],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.017237,-1.457680,13.161244],rotation=[-0.000078,-0.001354,-25.029346],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.143041,-0.882924,12.271877],rotation=[-31.990010,21.998290,-32.984114],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.191047,-0.894012,12.269066],rotation=[31.987947,-22.037334,-33.008819],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020447,-1.945946,12.855619],rotation=[0.003384,0.007257,-25.024883],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020353,-0.725895,13.615621],rotation=[0.002291,0.013042,-25.025323],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.488119,-1.835505,12.675358],rotation=[-31.987219,17.001427,-30.011668],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.525348,-1.826338,12.664728],rotation=[31.987106,-16.997559,-30.018510],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.527340,-0.643441,13.428838],rotation=[-32.001038,16.980748,-30.024276],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.563348,-0.635690,13.407459],rotation=[32.009272,-16.981260,-30.016684],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.902882,-1.518360,12.197823],rotation=[-31.990190,22.002505,-33.008339],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.942897,-1.519646,12.194992],rotation=[31.988273,-21.996326,-33.015153],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.965665,-0.396603,12.922376],rotation=[-31.999968,21.989269,-33.008645],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.015989,-0.399085,12.923206],rotation=[31.999903,-21.990457,-33.001332],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.472470,-0.984386,11.673988],rotation=[-32.032479,22.011456,-32.966355],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.524678,-0.995524,11.669868],rotation=[32.032160,-22.012280,-32.979991],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.472621,0.009758,12.297156],rotation=[-31.994862,21.990914,-32.988130],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.524463,0.010696,12.297704],rotation=[32.010306,-21.980496,-32.980693],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.882231,2.690141,11.361854],rotation=[-19.981509,49.984945,-20.024264],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.914905,2.686273,11.311820],rotation=[19.980034,-49.981333,-20.041923],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.589035,3.009582,11.484548],rotation=[-19.927718,50.062764,-19.983280],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.629856,3.005334,11.470352],rotation=[19.924746,-49.994158,-20.027748],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.820220,1.622290,11.315513],rotation=[-20.042806,50.020608,-19.998957],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.855918,1.612226,11.281642],rotation=[20.030997,-50.021787,-20.042964],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.862311,2.923568,10.522593],rotation=[-19.998595,49.976020,-19.985694],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.905346,2.908566,10.451375],rotation=[19.993758,-50.031290,-19.951377],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.903085,5.129624,9.863233],rotation=[-44.114968,-6.975051,9.980341],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.258080,-1.007198,0.952919],rotation=[4.015833,-6.985126,-11.973399],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.110733,0.974290,0.796858],rotation=[1.965515,7.963536,-1.018893],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.450335,-2.018441,0.962446],rotation=[0.751848,-21.646614,-12.624786],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.248007,-1.435117,0.817104],rotation=[1.180513,-19.790956,-12.686181],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.806544,-1.073488,0.823886],rotation=[1.236909,-19.788307,-12.619651],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[0.121319,-0.641378,0.929967],rotation=[2.794265,-12.865767,-12.343162],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.857405,-0.298842,0.868573],rotation=[3.892755,-7.076395,-12.131837],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.452541,-0.163771,0.813160],rotation=[3.976510,-6.969779,-11.968829],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[0.240113,0.422545,0.853503],rotation=[1.749785,-3.965929,-1.350338],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.852908,0.485188,0.794614],rotation=[1.880516,3.992465,-1.203154],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.454858,0.388583,0.669581],rotation=[2.076327,13.033566,-0.762729],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.161840,1.973827,0.586984],rotation=[1.915903,7.986211,-1.040866],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.278515,1.617636,0.606859],rotation=[2.141001,16.948565,-0.805532],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.881804,1.178444,0.585301],rotation=[2.171653,25.026232,-0.279608],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.822253,5.230111,9.852095],rotation=[44.100345,6.973385,9.989252],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.105729,-1.117176,1.007955],rotation=[-4.029553,7.018631,-12.017017],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.053442,0.893538,0.814493],rotation=[-1.967219,-7.962316,-1.004428],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.307303,-2.129797,1.020033],rotation=[-0.742034,21.643529,-12.670031],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.154632,-1.538688,0.879464],rotation=[-1.234437,19.746289,-12.531714],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.718607,-1.169102,0.909732],rotation=[-1.222145,19.774469,-12.606821],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.275425,-0.744962,0.958951],rotation=[-2.695202,12.873499,-12.360947],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.732590,-0.402941,0.941934],rotation=[-4.037184,7.079306,-12.080462],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.348847,-0.249763,0.910366],rotation=[-3.997981,7.029800,-12.049983],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.392967,0.331544,0.842123],rotation=[-1.739505,3.997701,-1.455547],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.719479,0.411684,0.885901],rotation=[-1.912381,-3.992835,-1.182240],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.343182,0.315066,0.761659],rotation=[-2.054837,-13.011646,-0.837324],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.009890,1.891618,0.604069],rotation=[-1.931418,-8.008633,-0.980541],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.124586,1.554383,0.692634],rotation=[-2.136779,-17.003589,-0.671210],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.765025,1.099202,0.667610],rotation=[-2.176775,-25.008933,-0.325663],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.022490,3.022241,11.679632],rotation=[-12.101343,44.085012,-8.894836],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.020518,3.045766,11.687135],rotation=[12.101393,-44.103871,-8.881691],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.825673,1.967028,11.694638],rotation=[-12.006864,43.999134,-9.006875],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.837667,1.978896,11.677937],rotation=[11.995709,-43.986781,-9.012945],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.538177,2.379871,11.691710],rotation=[-12.005730,44.000453,-8.985349],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.551628,2.402637,11.695498],rotation=[11.991179,-44.021560,-8.984575],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.344267,2.706419,11.854280],rotation=[-12.003851,44.021635,-9.045302],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.360898,2.728427,11.852990],rotation=[11.978060,-44.008677,-9.062557],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.351784,2.643035,11.584308],rotation=[-11.977170,43.990368,-9.029002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.367469,2.642377,11.572352],rotation=[11.983370,-44.008465,-9.009007],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.027706,3.022964,11.673704],rotation=[-11.985273,44.011497,-8.987307],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.020625,3.046818,11.679004],rotation=[11.976123,-43.983022,-9.000643],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.813982,3.306946,11.896046],rotation=[-11.944023,44.026033,-8.995885],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.821132,3.333693,11.901711],rotation=[11.988468,-44.020928,-8.985652],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.823154,3.381082,11.345061],rotation=[-12.011376,44.052803,-8.975603],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.869029,3.367529,11.315072],rotation=[12.000103,-44.010770,-9.002412],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.510363,3.709005,11.556937],rotation=[-12.006680,43.972024,-9.007557],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.523360,3.712289,11.537906],rotation=[12.033127,-44.013571,-8.995405],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.273492,3.955655,11.763832],rotation=[-12.012979,43.983582,-8.988335],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.291575,3.971738,11.763680],rotation=[12.020384,-43.994444,-8.982894],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.966730,4.488391,8.265481],rotation=[-49.978020,-11.961217,9.970611],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.550074,0.628507,0.903319],rotation=[9.966044,-0.026026,-0.009183],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[1.061540,0.183605,0.735000],rotation=[-9.990809,-0.012782,-0.019981],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.813199,-0.950675,1.231788],rotation=[9.978683,-0.042061,-0.038143],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.640259,1.685867,0.673418],rotation=[9.989972,-0.007619,-0.066586],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[0.632640,-1.582023,1.295598],rotation=[-9.991981,-0.013581,-0.004426],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[1.021393,1.401211,0.426498],rotation=[-9.969829,0.009946,0.006610],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.849375,4.717059,8.355955],rotation=[49.981453,11.962556,9.972996],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.284954,0.401921,0.902853],rotation=[-9.979090,0.011999,-0.001651],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-1.296877,-0.037433,0.694626],rotation=[10.008980,0.010928,-0.004773],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.544396,-1.184037,1.241540],rotation=[-10.028044,0.013551,0.047774],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.384702,1.453927,0.649450],rotation=[-10.030846,-0.021204,-0.004514],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-0.874223,-1.803103,1.275951],rotation=[10.009334,0.018951,0.007476],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-1.250787,1.162009,0.374034],rotation=[9.991663,-0.008941,0.016941],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.557025,0.093728,1.002680],rotation=[-0.000002,3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[-0.000003,0.000011,0.000005],rotation=[0.000000,0.000002,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[2.001148,-3.087622,-0.849304],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[1.795845,-0.360989,-1.458185],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[0.708332,2.326802,1.226807],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.519202,0.055603,0.770582],rotation=[-0.000002,-3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[0.000005,0.000011,0.000006],rotation=[0.000000,0.000000,0.000003],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-1.994922,-3.102561,-1.017456],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-1.715864,-0.423390,-1.664055],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-0.682188,2.331955,1.191363],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Nose', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.063852,-0.377706,12.711123],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[0.030788,3.165423,-0.335639],rotation=[0.006969,-0.008512,14.897489],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[0.616801,-0.338852,-0.057213],rotation=[19.915468,0.043725,-10.018214],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[-0.619131,-0.345440,-0.058726],rotation=[-19.910942,-0.035466,-10.086000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[-0.006014,-0.088551,0.692944],rotation=[0.006481,0.031885,0.049500],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[0.010263,0.528226,-0.035678],rotation=[-0.057884,0.004517,0.129735],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseTip', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[-0.058893,2.296148,0.733928],rotation=[0.002954,-0.002552,10.017950],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.092504,-1.113047,0.534468],rotation=[0.023757,-0.000392,-19.948813],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.084432,-0.251305,0.885460],rotation=[-0.000409,0.013240,-0.089276],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.084974,0.585127,0.686620],rotation=[-0.014965,0.004998,19.770374],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.989396,-1.100307,0.010670],rotation=[-32.231238,13.441126,-23.744301],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-0.807920,-1.109465,0.012930],rotation=[32.235874,-13.437534,-23.743503],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[1.206791,-0.332275,0.223080],rotation=[-43.231856,3.413625,3.284451],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-1.030656,-0.337326,0.221513],rotation=[43.213326,-3.430014,3.316273],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[1.299103,0.308673,0.047108],rotation=[-43.141068,3.530824,14.161535],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-1.118346,0.307536,0.042936],rotation=[43.125772,-3.583230,14.201338],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Nostril', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[1.553431,2.260907,-0.344637],rotation=[15.018509,-0.014906,2.035291],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.414073,0.487447,0.957982],rotation=[29.991900,7.024565,8.852310],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.027289,0.399605,0.078357],rotation=[0.053689,-0.026402,-0.131099],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.219788,-1.634993,0.607108],rotation=[7.957047,-0.012050,-5.988642],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.099244,-1.397527,-0.525693],rotation=[-2.959992,19.987297,-4.922581],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.429766,-0.788063,-1.170877],rotation=[-18.008898,35.031465,-11.918659],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.084081,-1.008370,0.830634],rotation=[8.013164,0.003345,-6.032369],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.066699,-0.967116,-0.408399],rotation=[-2.945035,9.999422,-5.001299],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.099422,-0.297553,1.018442],rotation=[8.004134,0.050227,-6.099778],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.456887,-0.154869,-0.268789],rotation=[-11.069046,-6.993889,-2.062650],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.188954,-0.107401,-1.178291],rotation=[-18.018281,-0.031077,2.910845],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.008820,0.373225,0.917654],rotation=[18.991292,-1.888850,-6.113042],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.345641,0.355426,-0.018147],rotation=[-10.997333,-6.937969,-2.108906],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.030520,0.530788,-0.994373],rotation=[-33.963296,-12.092936,6.859528],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.539916,0.828221,-0.299783],rotation=[-33.891908,-12.065830,6.935836],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.599619,0.620225,-1.561895],rotation=[-18.012312,34.993456,-12.088292],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.179495,1.411897,-0.603035],rotation=[-33.984028,-11.902003,7.144024],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Nostril', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[-1.438479,2.225962,-0.314121],rotation=[-15.023130,0.023413,2.022280],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.383137,0.523613,0.920859],rotation=[-30.101386,-6.847555,9.109450],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.008968,0.418894,0.024975],rotation=[-0.022966,0.035437,0.050791],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.198232,-1.599642,0.567881],rotation=[-7.978830,0.002076,-5.991317],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.126508,-1.352373,-0.561625],rotation=[2.963986,-19.969884,-4.946446],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.446929,-0.732796,-1.203094],rotation=[18.047394,-34.996033,-11.904319],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.052949,-0.982539,0.789415],rotation=[-8.029482,-0.004339,-6.023963],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.090824,-0.929425,-0.452261],rotation=[2.943956,-10.045359,-4.969454],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.137351,-0.264889,0.979147],rotation=[-7.986913,0.001567,-6.127641],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.481149,-0.115248,-0.317393],rotation=[11.062791,7.010954,-2.058354],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.227379,-0.050706,-1.215459],rotation=[17.966057,0.004115,2.910122],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.027978,0.407008,0.872934],rotation=[-18.967159,1.938940,-6.091134],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.375370,0.388293,-0.066223],rotation=[10.986837,6.894037,-2.095245],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.006855,0.597994,-1.034346],rotation=[33.965657,12.034289,6.943719],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.533488,0.854725,-0.357847],rotation=[33.942437,12.045141,6.959508],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.599836,0.681013,-1.598789],rotation=[17.947492,-35.051967,-12.164627],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.156540,1.455711,-0.646052],rotation=[33.906064,11.878723,7.124757],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.013620,3.738451,13.252110],rotation=[-0.000661,-0.001537,-5.002252],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.439546,3.627142,12.862892],rotation=[-12.998478,8.004425,-7.991382],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.468677,3.636586,12.866487],rotation=[13.003908,-8.009863,-7.990248],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.744631,4.050483,12.162773],rotation=[-18.006668,15.013605,-11.983655],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.767680,4.066574,12.162578],rotation=[18.010271,-15.017517,-11.974313],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipUpperSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.016018,3.515541,13.197787],rotation=[0.015198,0.026370,-5.003438],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipUpperSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.008305,4.002189,13.362551],rotation=[0.016417,-0.035908,-5.024863],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.446541,3.620807,12.875398],rotation=[-13.015916,7.959146,-8.055657],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.474878,3.635016,12.878398],rotation=[12.993684,-7.930000,-8.030097],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.908124,3.829365,12.001172],rotation=[-17.966564,15.039677,-11.985797],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.931343,3.844725,12.006525],rotation=[18.001194,-15.041095,-11.959255],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.588601,4.404360,12.374352],rotation=[-18.004548,14.964891,-12.017497],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.611483,4.424792,12.373502],rotation=[17.996577,-14.966096,-12.038528],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.215238,3.287954,11.551774],rotation=[-10.003255,2.987145,-4.974540],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.252964,3.292461,11.537839],rotation=[10.007004,-2.984984,-4.973211],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.093762,4.033109,9.413923],rotation=[24.997081,4.989315,25.009180],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.095903,4.053148,9.401317],rotation=[-24.990066,-4.991579,25.000493],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_MouthUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.012715,5.084702,9.744472],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[0.006159,-0.649564,3.127244],rotation=[0.003462,-0.002589,-10.090622],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.000275,0.135990,0.762482],rotation=[-0.011055,0.002791,-0.032860],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.009760,0.780173,0.072653],rotation=[-0.002547,0.004091,0.139970],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.009194,0.190734,-0.480486],rotation=[0.002070,-0.007016,-0.058876],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.442974,-0.545898,0.665657],rotation=[0.017324,-0.072766,-0.056361],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.452203,-0.546468,0.665479],rotation=[0.049033,0.017762,-0.076003],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.457915,0.310648,0.615145],rotation=[0.068038,-0.051258,-0.341489],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.468616,0.313292,0.616076],rotation=[-0.070429,0.007124,-0.322055],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.369040,0.761585,0.041382],rotation=[-0.012979,-0.015608,0.119616],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.387301,0.766221,0.041150],rotation=[0.021667,0.025117,0.110202],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.316190,0.376229,-0.506211],rotation=[0.016282,0.006117,0.035793],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.336564,0.374273,-0.514682],rotation=[-0.005672,0.008683,0.047730],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.352506,-0.483257,-0.433524],rotation=[-0.003096,-0.011286,0.005607],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.374842,-0.483301,-0.430781],rotation=[0.004364,0.009263,0.005582],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[1.354223,-0.514308,2.751093],rotation=[-18.086753,6.019161,-10.129615],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.051134,0.024143,0.730975],rotation=[0.054192,-0.073613,-0.061325],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.147732,0.643824,0.091704],rotation=[-0.016334,0.010056,0.060288],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.162964,0.109594,-0.409262],rotation=[0.046304,0.100674,-0.044958],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.607590,-0.627388,0.718879],rotation=[-0.036479,-0.072478,-0.213347],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.549443,0.212610,0.697984],rotation=[0.010022,-0.024186,-0.122823],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.482949,-0.521470,0.532426],rotation=[-0.033139,-0.186589,-0.210592],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.371516,0.355732,0.453732],rotation=[0.029991,-0.018516,-0.355956],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.529106,0.675865,0.146830],rotation=[0.066803,0.064223,0.072578],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.217970,0.635706,-0.017278],rotation=[-0.031878,0.057616,0.064255],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.504412,0.320906,-0.380231],rotation=[0.013146,0.022325,0.066479],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.482822,-0.522957,-0.339196],rotation=[0.000667,-0.001616,-0.002923],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.161467,0.260474,-0.464710],rotation=[-0.013288,0.034794,0.160607],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.242092,-0.563720,-0.434119],rotation=[0.000151,0.013008,0.006919],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-1.304843,-0.565331,2.780271],rotation=[18.087327,-6.036939,-10.152452],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.004764,0.087165,0.694024],rotation=[-0.071548,0.062570,-0.039817],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.076508,0.695838,0.068518],rotation=[0.008515,-0.005973,0.047268],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.085065,0.155363,-0.441834],rotation=[-0.058904,-0.105071,-0.028438],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.542050,-0.583573,0.695265],rotation=[0.019622,0.092557,-0.192085],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.484415,0.266558,0.669409],rotation=[0.019241,-0.008737,-0.112054],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.546046,-0.468348,0.505230],rotation=[0.033485,0.232500,-0.251420],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.425696,0.423366,0.418388],rotation=[0.044829,-0.044781,-0.239375],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.457160,0.724036,0.125230],rotation=[-0.052130,-0.074495,0.074270],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.286470,0.688162,-0.041677],rotation=[0.019229,-0.098278,0.067559],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.427060,0.368320,-0.411983],rotation=[0.005751,-0.036082,0.074003],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.410406,-0.478796,-0.361734],rotation=[-0.000205,0.003590,-0.002304],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.239251,0.312104,-0.501148],rotation=[0.018623,-0.007706,0.110190],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.316448,-0.517386,-0.474624],rotation=[-0.000084,-0.006917,0.004669],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[2.102432,-0.305515,2.242413],rotation=[-25.110301,15.125465,-15.242903],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.148377,0.258588,0.485546],rotation=[-0.002083,-0.058465,-0.162505],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.072578,0.548738,0.036535],rotation=[-0.078197,-0.048921,0.013760],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.089316,-0.051377,-0.416833],rotation=[0.101818,0.122111,0.169811],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.378985,-0.392143,0.573365],rotation=[0.151832,-0.161747,-0.291009],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.050579,0.394588,0.427571],rotation=[0.042401,0.002167,-0.116157],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.463078,0.387879,0.083265],rotation=[-0.031454,-0.037092,-0.062148],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.193054,0.568859,0.003183],rotation=[0.038257,0.071410,0.067670],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.239463,0.465686,-0.235696],rotation=[-0.035882,-0.036247,0.012897],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.197137,0.150890,-0.408269],rotation=[0.001980,-0.002692,0.002375],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.151844,-0.653575,-0.310101],rotation=[0.001586,0.005440,0.004365],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.258702,0.031709,-0.606825],rotation=[0.012934,0.009637,-0.003704],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.394736,-0.710025,-0.576772],rotation=[-0.003959,0.001859,0.002873],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-2.101087,-0.374842,2.248529],rotation=[25.097058,-15.124939,-15.236177],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.179354,0.340941,0.453359],rotation=[0.010124,0.046721,-0.157609],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.044988,0.629442,0.015196],rotation=[0.085378,0.067603,0.035868],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.056343,0.024956,-0.457672],rotation=[-0.087147,-0.123052,0.156454],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.408018,-0.312787,0.552273],rotation=[-0.148500,0.037969,-0.146259],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.022958,0.477616,0.398187],rotation=[0.006427,-0.045711,-0.019578],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.500305,0.486529,0.060891],rotation=[0.036517,0.034922,-0.034863],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.165470,0.647507,-0.015457],rotation=[-0.030214,-0.102019,0.073795],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.268240,0.561620,-0.252382],rotation=[0.069245,0.072340,0.039237],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.160763,0.228649,-0.445909],rotation=[-0.002679,-0.001315,0.005527],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.118114,-0.583544,-0.349656],rotation=[-0.001144,-0.004678,0.001420],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.288101,0.120806,-0.633863],rotation=[-0.010415,-0.006153,-0.001328],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.415099,-0.630838,-0.612734],rotation=[0.001607,-0.000368,0.004644],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[2.761065,0.230485,1.524783],rotation=[-24.060582,-0.026265,-0.000731],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.473126,-0.008923,0.436580],rotation=[9.924879,0.001188,-0.044511],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.083249,-0.339513,-0.859814],rotation=[30.051767,0.009592,0.000252],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[-0.159948,0.482322,-0.792992],rotation=[30.060873,0.000221,0.000221],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[-0.201943,0.024168,0.213170],rotation=[29.907529,-0.004748,-0.074217],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.096226,-0.129223,0.530757],rotation=[29.992593,0.070822,-0.011291],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.083219,0.343818,0.334175],rotation=[30.007012,-0.168752,0.013829],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-2.804226,0.265215,1.447806],rotation=[24.029251,0.005169,0.018969],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.433428,-0.007963,0.490929],rotation=[-9.899653,-0.015313,0.007488],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.019379,-0.339996,-0.821128],rotation=[-30.027465,-0.008165,-0.006469],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.280368,0.491253,-0.777033],rotation=[-30.059680,0.011300,-0.016593],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.242910,0.046897,0.277171],rotation=[-29.864288,0.000829,-0.020934],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.048480,-0.128017,0.584626],rotation=[-30.034073,-0.018021,0.009028],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.046459,0.360013,0.377146],rotation=[-30.006808,0.090265,-0.053582],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_JawBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.095778,3.724692,4.600667],rotation=[10.001399,0.003368,10.005965],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_JawBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.072486,3.672952,4.486575],rotation=[-9.998187,-0.001203,10.003021],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_JawRecess', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.645633,0.757499,3.794695],rotation=[-2.000002,3.999424,0.000927],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_JawRecess', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.626418,0.709407,3.602635],rotation=[2.000212,-4.000098,0.001299],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Masseter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.191868,1.562799,5.827963],rotation=[12.936157,-0.041794,8.004634],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Masseter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.157848,1.545853,5.739901],rotation=[-12.939249,0.043103,7.998003],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.027170,10.114861,7.838884],rotation=[-0.001230,0.004265,59.998725],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.824114,9.976641,7.928736],rotation=[-5.015998,-10.008477,64.995352],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.831187,9.945828,7.911872],rotation=[5.019269,10.019449,64.995074],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.479918,10.664829,6.715632],rotation=[-5.000353,-10.004595,44.997528],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.511639,10.672764,6.687586],rotation=[5.000698,10.003331,45.001314],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.025748,8.880515,6.043408],rotation=[-31.972185,-30.025855,60.021860],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.018963,8.870221,5.957562],rotation=[31.977685,30.026771,60.034173],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.535557,9.719850,8.004857],rotation=[-24.993306,-16.999666,55.006387],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.531678,9.684674,7.967033],rotation=[24.997406,17.001137,55.010120],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.558431,10.260315,6.191468],rotation=[-25.003777,-20.000464,54.996675],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.555901,10.233599,6.102541],rotation=[25.005265,20.001275,54.999875],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.992536,7.995415,6.884510],rotation=[-32.001567,-29.999236,59.998392],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.958104,7.969618,6.822351],rotation=[32.000891,30.001159,60.005712],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.701538,8.371247,4.914662],rotation=[-31.997044,-30.001520,59.994532],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.724869,8.373047,4.835279],rotation=[31.994776,30.000057,59.990191],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TeethUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.070086,3.938396,9.689064],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LowerLipRotation', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.106004,2.493807,3.760324],rotation=[0.000000,0.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.097245,-2.068097,9.753704],rotation=[0.000591,0.004229,-30.029351],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.620066,-1.992443,9.560650],rotation=[-15.016596,4.000672,-30.049825],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-1.459403,-1.974164,9.561899],rotation=[15.017772,-4.008519,-30.056775],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.530309,-2.049124,8.904493],rotation=[-27.996707,8.928556,-36.006558],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.372114,-2.019602,8.901307],rotation=[27.972127,-8.969381,-36.021352],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipLowerSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.099349,-2.442331,9.647913],rotation=[-0.035618,0.030902,-25.022168],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipLowerSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.096600,-1.925644,10.163282],rotation=[0.009061,0.003251,-49.954475],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.629969,-1.993100,9.563579],rotation=[-15.036370,3.938913,-30.050602],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-1.467461,-1.976658,9.568149],rotation=[15.099149,-3.984630,-30.021020],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.454242,-2.315815,8.860721],rotation=[-27.999243,8.954611,-36.005403],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.277234,-2.279070,8.857661],rotation=[27.927951,-8.930445,-35.921348],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.538275,-1.753502,9.070108],rotation=[-27.995449,9.005602,-35.973980],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.377561,-1.731593,9.066371],rotation=[28.023587,-8.989134,-36.009870],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[3.110530,-2.034446,8.363790],rotation=[-27.997429,9.034474,-35.993553],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.950218,-1.991533,8.363272],rotation=[28.001769,-9.026311,-35.994304],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.025378,-0.762102,7.960563],rotation=[-6.006749,8.028276,-45.036336],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-0.818567,-0.752466,7.960706],rotation=[6.010673,-8.031972,-45.041810],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.990952,-0.545264,6.811831],rotation=[20.003832,-12.988497,-60.023222],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.736142,-0.510315,6.816051],rotation=[-19.998722,12.988311,-60.019573],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_MouthLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.099653,-1.779329,6.286786],rotation=[0.000000,0.000000,-40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[0.018720,0.940472,2.988572],rotation=[-0.001734,0.006584,10.344718],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.023198,0.036262,0.595410],rotation=[-0.003307,0.008875,0.094689],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.026751,-0.888172,0.062668],rotation=[0.016449,-0.000634,-0.146396],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.022538,-0.353616,-0.637116],rotation=[0.004827,-0.005456,-0.137490],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.492867,0.707328,0.075174],rotation=[-0.026756,-0.020689,0.105910],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.552969,0.728619,0.077402],rotation=[-0.091827,0.097545,-0.102582],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.486985,-0.296614,0.559452],rotation=[-0.028113,-0.058095,0.252348],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.537528,-0.294439,0.568195],rotation=[0.079705,0.037948,0.170569],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.370615,-0.894220,0.037657],rotation=[-0.009540,-0.007925,-0.091057],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.429058,-0.896148,0.038798],rotation=[0.024095,-0.009730,-0.094101],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.297285,-0.539379,-0.581507],rotation=[0.068934,-0.071096,-0.165343],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.346829,-0.539034,-0.592148],rotation=[-0.069780,0.068928,-0.161854],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.298181,0.090085,-0.746022],rotation=[-0.004258,0.001617,-0.015150],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.339635,0.092066,-0.753408],rotation=[0.003654,-0.000240,-0.015962],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[1.078100,0.823610,2.630610],rotation=[-14.531742,-4.820260,11.730326],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.250115,0.025098,0.659762],rotation=[0.069698,0.097766,0.242860],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.054766,-0.822230,0.168187],rotation=[0.018854,-0.059001,-0.100720],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.020669,-0.277373,-0.440004],rotation=[0.066034,-0.032747,-0.148713],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.024228,0.789885,0.388566],rotation=[0.009206,0.080852,0.044619],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.107598,-0.276758,0.719978],rotation=[0.113858,0.083897,0.213925],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.751584,0.691744,0.297453],rotation=[0.086552,0.125897,0.327261],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.579445,-0.287079,0.468773],rotation=[0.040030,-0.030029,0.367460],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.203697,-0.849258,0.214869],rotation=[0.125637,-0.043606,-0.141957],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.398798,-0.762238,0.058637],rotation=[-0.070506,-0.160434,-0.115288],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.234572,-0.475166,-0.374674],rotation=[0.031908,0.003249,-0.090606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.229705,0.143811,-0.507237],rotation=[0.000719,0.000587,0.003141],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.384131,-0.390988,-0.478155],rotation=[-0.135015,0.081967,-0.184049],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.388707,0.191738,-0.565268],rotation=[0.004230,0.010479,-0.003261],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[-1.147578,0.851011,2.653406],rotation=[14.501691,4.828755,11.733038],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.212545,0.015692,0.647536],rotation=[-0.044317,-0.055358,0.172049],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.016361,-0.835891,0.137411],rotation=[-0.022183,0.047796,-0.047818],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.069417,-0.293222,-0.501471],rotation=[-0.030785,0.059328,-0.125627],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.051643,0.776603,0.344451],rotation=[0.056786,-0.029013,0.078170],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.151408,-0.292573,0.705572],rotation=[-0.043507,-0.081534,0.061756],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.729874,0.691877,0.245929],rotation=[-0.078255,-0.108188,0.294513],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.537695,-0.289399,0.448526],rotation=[0.002357,0.109006,0.288903],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.238904,-0.868349,0.182608],rotation=[-0.108779,0.035370,-0.107868],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.353783,-0.772937,0.025390],rotation=[0.047391,0.179127,-0.053166],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.276819,-0.495496,-0.432563],rotation=[-0.031893,-0.011198,-0.075022],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.283220,0.127034,-0.562634],rotation=[-0.001344,-0.001114,0.000742],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.328689,-0.401294,-0.542359],rotation=[0.202854,-0.074518,-0.193239],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.327705,0.187098,-0.624987],rotation=[0.003173,-0.006993,-0.002553],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[1.948724,0.631947,2.229467],rotation=[-26.405467,-6.878530,12.649069],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.136551,-0.026696,0.417307],rotation=[0.117950,0.012944,0.244030],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.005500,-0.550312,0.046888],rotation=[-0.094317,0.072184,-0.024956],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.042570,-0.075601,-0.523670],rotation=[0.068991,-0.091058,-0.130097],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.365634,0.524745,0.351826],rotation=[0.034248,0.106326,0.141521],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.049941,-0.218234,0.403690],rotation=[0.213338,-0.045636,0.268582],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.507548,-0.285733,0.117844],rotation=[-0.087599,0.017887,-0.007729],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.182900,-0.583453,0.127350],rotation=[0.016060,-0.051615,-0.040277],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.300826,-0.482938,-0.120981],rotation=[-0.028075,0.044292,-0.146911],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.142121,-0.256969,-0.465577],rotation=[-0.007329,0.003676,-0.006913],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.101616,0.300527,-0.526704],rotation=[0.004809,-0.001023,-0.001570],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.330998,-0.163904,-0.648421],rotation=[0.009839,-0.004128,-0.001308],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.437049,0.316018,-0.737284],rotation=[-0.000832,-0.009614,0.006131],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[-1.944347,0.763213,2.173419],rotation=[26.371209,6.863911,12.629947],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.148510,-0.137711,0.470285],rotation=[-0.114085,-0.050219,0.187956],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.007599,-0.669215,0.091203],rotation=[0.079356,-0.058351,0.022469],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.053128,-0.188196,-0.513807],rotation=[-0.067584,0.073312,-0.123718],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.399442,0.423074,0.380255],rotation=[-0.180621,-0.032148,0.209060],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.037427,-0.338281,0.465069],rotation=[-0.111760,0.113090,0.145966],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.521284,-0.390359,0.172472],rotation=[0.100286,-0.020926,-0.021830],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.183591,-0.703129,0.172131],rotation=[-0.025109,0.046074,-0.006963],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.300233,-0.591798,-0.075470],rotation=[0.003274,-0.056667,-0.076258],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.151024,-0.374588,-0.453478],rotation=[0.014723,0.013603,-0.011978],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.118132,0.189186,-0.519154],rotation=[-0.002423,0.001959,-0.001945],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.312855,-0.265927,-0.629562],rotation=[-0.010332,0.000162,-0.003199],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.401591,0.218400,-0.737615],rotation=[-0.000338,0.007276,0.008661],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TeethLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.087983,-1.179970,6.729836],rotation=[0.000000,0.000000,-40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_TeethLower'), unreal.Transform(location=[-0.026548,-0.736444,-2.551240],rotation=[0.000040,-0.000048,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue1'), unreal.Transform(location=[-0.002067,0.129972,1.306401],rotation=[-0.000221,-0.000091,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[0.056322,-0.527918,-0.145556],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_TongueSide2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[1.992647,0.022840,0.224340],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_TongueSide2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[-1.881195,0.014488,0.219138],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[-0.006132,0.112857,1.289313],rotation=[-0.000137,0.000000,14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[0.061101,-0.457027,0.160904],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[0.066199,1.001775,0.343199],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_TongueSide3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[1.646001,0.107247,0.236942],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_TongueSide3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[-1.531311,0.101490,0.226307],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[-0.002310,0.113235,1.325803],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Jaw', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.106004,2.493806,3.760324],rotation=[0.000000,0.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.080941,1.632873,10.167798],rotation=[-0.000860,0.000915,30.018155],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.636017,0.893519,10.562221],rotation=[-9.871765,-5.001038,30.028807],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.491725,0.939731,10.585705],rotation=[9.851224,4.976025,30.001354],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.852744,2.274897,9.076908],rotation=[-4.987719,-5.012639,45.002179],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.658945,2.282284,9.064610],rotation=[4.986194,5.006725,45.006618],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[5.492284,0.831033,5.061453],rotation=[18.997315,-2.992600,-16.010862],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.280952,0.745642,1.315164],rotation=[-0.015494,0.010803,0.031398],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.440426,0.536348,-1.819678],rotation=[0.012633,-0.008242,0.027298],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.570550,-0.135620,0.829454],rotation=[-0.005711,0.007568,0.000617],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.036599,1.265383,1.285854],rotation=[0.009684,-0.002944,-0.000900],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.692271,-0.657902,-2.196654],rotation=[-0.003540,-0.004554,0.004122],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.089182,1.195998,-2.023552],rotation=[-0.004589,-0.000674,-0.010192],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-5.062099,0.905829,5.052089],rotation=[-18.997174,2.993659,-16.013802],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.485189,0.660113,1.201227],rotation=[0.021681,0.002796,0.027192],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.632154,0.465114,-1.940185],rotation=[-0.016553,0.003084,0.029144],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.754556,-0.241591,0.701987],rotation=[0.011273,0.008060,-0.007830],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.231342,1.187306,1.183859],rotation=[-0.000179,-0.005228,0.012910],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.883796,-0.743533,-2.321408],rotation=[0.005166,0.005473,0.002255],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.261628,1.126065,-2.131206],rotation=[0.009583,0.002597,-0.013415],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ChinSide', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.434292,-0.695729,8.825829],rotation=[-43.999028,5.913558,-29.825237],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ChinSide', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-3.325755,-0.651449,8.798023],rotation=[44.002652,-5.938254,-29.855307],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.516765,-1.499364,8.292682],rotation=[-42.987923,-30.155294,0.057228],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-3.394103,-1.448466,8.283859],rotation=[42.999436,30.054478,-0.005635],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[4.566223,-0.544817,7.626697],rotation=[-43.040561,-29.994212,0.057568],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-4.413312,-0.507577,7.551213],rotation=[42.973810,29.966686,0.027428],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.450995,-0.945425,9.717477],rotation=[-43.960105,5.959599,-29.976483],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.295792,-0.930567,9.718274],rotation=[43.970818,-5.979795,-29.961896],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.123991,0.552368,9.632418],rotation=[-43.974269,5.955897,-29.922061],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.970647,0.561999,9.607495],rotation=[43.987919,-5.960525,-29.883814],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.093240,-1.685242,10.547698],rotation=[-0.000500,0.007177,-49.978811],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.482509,-1.469889,10.194685],rotation=[-15.010561,8.016659,-49.957026],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.310008,-1.446582,10.178133],rotation=[15.018413,-8.029933,-49.966347],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.094514,-0.997609,11.175997],rotation=[-0.006469,-0.001307,-35.054994],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.713483,-0.849873,10.661355],rotation=[-17.018144,5.985133,-35.015425],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.558328,-0.843597,10.660987],rotation=[17.023695,-5.991029,-35.014765],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.090273,0.019716,11.360738],rotation=[-0.016143,0.008943,5.075759],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.772113,0.092910,10.900040],rotation=[-16.986972,5.038342,5.060835],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.619047,0.106920,10.910441],rotation=[16.995015,-5.036623,5.060051],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.713566,-1.628050,10.485073],rotation=[0.002125,-0.030734,-50.007560],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.536266,-1.617989,10.489594],rotation=[-0.002874,0.024313,-49.971081],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.837021,-0.972952,11.106148],rotation=[-0.035767,-0.080395,-35.053551],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.663983,-0.981480,11.130871],rotation=[0.010794,0.085724,-35.060688],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.091891,-0.386586,11.360033],rotation=[-0.006706,0.010918,4.966479],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Chin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.091179,0.450544,11.245948],rotation=[-0.024028,-0.002537,5.147490],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.061535,-1.670605,10.212049],rotation=[-15.025767,8.060265,-50.013580],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.886581,-1.640644,10.204020],rotation=[15.014711,-8.060610,-49.993625],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.220695,-1.277939,10.699007],rotation=[-14.995471,8.025652,-50.014490],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.041154,-1.261041,10.682593],rotation=[14.993433,-8.026425,-50.022860],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.041830,-1.137246,10.923989],rotation=[-16.982397,5.992539,-34.999636],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.872931,-1.140785,10.928335],rotation=[16.987616,-5.990933,-35.009806],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.153930,-0.561133,11.178773],rotation=[-17.019354,6.039147,-35.025436],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.985564,-0.554149,11.191779],rotation=[17.030636,-6.037613,-35.006331],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.053269,-1.527867,9.604074],rotation=[-14.973912,8.032420,-49.953545],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.894300,-1.505423,9.598263],rotation=[14.959976,-7.954480,-50.047341],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.237026,-1.096544,9.840741],rotation=[-14.967136,7.955414,-50.015043],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.071615,-1.073996,9.831679],rotation=[14.989760,-8.023280,-49.973373],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.152123,-0.935777,10.075832],rotation=[-17.014747,5.998291,-35.012935],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.999720,-0.925544,10.072076],rotation=[17.001129,-6.005244,-34.990474],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.397622,-0.430757,10.235192],rotation=[-16.989555,5.998544,-34.984671],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.246783,-0.421643,10.237253],rotation=[16.987361,-5.990580,-34.997400],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.437022,-0.320527,11.097241],rotation=[-17.018301,5.096784,4.945506],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.272911,-0.310431,11.105626],rotation=[17.027576,-5.075251,4.982646],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.595289,0.490230,10.890422],rotation=[-17.068895,5.090728,5.088960],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.433799,0.509116,10.897586],rotation=[17.100899,-5.019438,5.094062],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.044572,-0.188729,9.561565],rotation=[-0.002379,0.003530,-29.969972],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('EyeAim_R', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000001,0.000024,0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_L', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000001,0.000024,0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_R_inv', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_L_inv', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('FACIAL_C_Neck2Root', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_02'), unreal.Transform(location=[-0.342149,2.550485,-0.000005],rotation=[-90.000000,-165.963757,-115.916405],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_AdamsApple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.032243,1.972358,3.811386],rotation=[0.000000,0.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_AdamsA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.026861,1.266942,4.007867],rotation=[0.000000,0.000000,20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_AdamsA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.038624,2.713449,3.674319],rotation=[0.000000,0.000000,20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.285868,1.798656,3.067580],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.308984,1.783419,2.922633],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.535538,0.743245,1.549974],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.554211,0.778607,1.383781],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[6.120483,-1.354031,-0.945527],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.342130,-1.325648,-0.972740],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.969666,-1.181810,-0.217207],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.041418,-1.136351,-0.309958],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.560339,0.326825,3.345129],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.575195,0.310403,3.252887],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.005767,2.714481,3.125034],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.026772,2.699590,2.936221],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.934858,-1.506958,1.267737],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.008788,-1.496911,1.208839],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[3.989357,2.130828,2.077622],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-3.965191,2.170059,1.820628],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[6.176070,-2.804094,-1.139305],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.465837,-2.774743,-1.157889],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.965942,0.082207,-0.712916],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.097777,0.122689,-0.770223],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.250590,0.890333,0.901795],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.350729,0.955981,0.804990],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.211922,-2.406914,0.264592],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.243229,-2.403838,0.200938],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.879281,-0.231765,-0.450591],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.961844,-0.163792,-0.565733],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.162567,-4.260538,-7.930252],rotation=[0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.019356,-3.738114,-4.719928],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.459776,-3.688279,-4.857711],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.167043,-5.842956,-8.081673],rotation=[0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.170062,-3.524352,-7.872452],rotation=[0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.133842,-4.424729,-4.727829],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.507118,-4.371310,-4.830544],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.961009,-2.464689,-4.729115],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.527438,-2.431979,-4.944385],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Neck1Root', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_01'), unreal.Transform(location=[0.471016,2.859724,-0.000001],rotation=[-90.000000,165.963757,-89.757448],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.042903,-0.059255,4.030278],rotation=[0.000000,0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.157362,0.118136,3.390049],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.152792,0.207130,3.074128],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.391109,-2.956341,0.012493],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.568109,-2.881396,-0.113878],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.406207,-1.114670,1.155920],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.499527,-1.029345,1.046241],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.992068,-2.031062,-0.205727],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.062154,-1.942697,-0.333761],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.043393,-1.210262,4.362237],rotation=[0.000000,0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.037570,0.777521,3.860673],rotation=[0.000000,0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[2.360987,1.348245,3.521344],rotation=[-24.999999,-15.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-2.407702,1.439583,3.340215],rotation=[24.999999,15.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.724781,-1.543001,3.148616],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.682730,-1.505322,2.810780],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.542679,0.026954,1.967573],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.472156,0.179526,1.547218],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.248007,-3.928643,0.159124],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.499808,-3.874941,0.084767],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.929208,-1.611687,-0.711226],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-7.011338,-1.526600,-0.966497],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.705304,0.540248,1.796368],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.768771,0.609698,1.723121],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.300303,-2.111555,1.376746],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.406764,-2.029171,1.267528],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.591716,-0.053582,0.946717],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.652212,0.023123,0.850320],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.873095,-3.102911,0.015046],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.951925,-3.019499,-0.113247],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.269853,-0.956277,-0.429331],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.326140,-0.871260,-0.546007],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.193476,-5.125470,-7.192270],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.681829,-4.384252,-4.238776],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.186957,-4.434003,-4.441344],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.172959,-7.165555,-7.058084],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.154288,-3.899396,-7.619439],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.049770,-6.178170,-4.019462],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.618234,-6.166412,-4.231828],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.385571,-3.336989,-4.490564],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.824986,-3.441578,-4.701010],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516269,-1.314766,-1.427904],rotation=[-80.831221,-153.124391,163.263597],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[17.809523,0.000000,0.000000],rotation=[-46.029601,4.358518,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_l'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[0.220349,-0.051737,5.804066],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[3.255006,8.509158,-1.063038],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[6.410149,0.544406,-4.761752],rotation=[48.194143,0.000000,180.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[1.467736,-7.644437,0.385938],rotation=[0.000000,0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[11.813392,0.443878,6.281840],rotation=[3.110290,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[9.985832,-7.578162,-1.993106],rotation=[-3.110290,-175.708435,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516220,-1.314811,1.427873],rotation=[-80.831221,26.875609,163.263597],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-17.809626,-0.000003,0.000438],rotation=[-46.029601,4.358518,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_r'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-0.353314,0.044167,-5.993515],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-3.387981,-8.516726,0.873696],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-6.551142,-0.546132,4.556988],rotation=[48.194143,0.000000,180.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-1.599581,7.637699,-0.576368],rotation=[0.000000,0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-12.041718,-0.442301,-6.316576],rotation=[3.110290,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-10.214471,7.567725,1.957083],rotation=[-3.110290,-175.708435,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.242896,7.684768,-9.310202],rotation=[-82.006463,-112.633667,123.200882],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.237822,7.915499,9.635503],rotation=[-82.005484,67.346541,123.220872],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.961815,-4.626293,-15.443479],rotation=[-71.622023,-118.209498,130.384723],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.967104,-4.627012,15.454673],rotation=[-84.725074,-23.824684,-145.976708],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	blueprint.add_member_variable('eyes_aim_rig', 'bool', False, False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 992.000000), 'RigUnit_GetControlFloat_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2.Control', 'CTRL_L_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 992.000000), 'SetCurveValue_1_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2.Curve', 'BrowDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4393.000000, 992.000000), 'SetCurveValue_1_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_1.Curve', 'BrowDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4761.000000, 992.000000), 'RigUnit_GetControlFloat_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_1.Control', 'CTRL_R_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 1248.000000), 'RigUnit_GetControlFloat_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2.Control', 'CTRL_C_brow_raiseIn')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5152.000000, 1632.000000), 'Add_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 1632.000000), 'RigUnit_GetControlFloat_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4960.000000, 1632.000000), 'Clamp_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_3.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4720.000000, 1632.000000), 'RigUnit_SetCurveValue_40_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 1856.000000), 'RigUnit_GetControlFloat_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5152.000000, 1856.000000), 'Add_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4944.000000, 1856.000000), 'Clamp_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_4.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4720.000000, 1872.000000), 'RigUnit_SetCurveValue_40_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1360.000000), 'RigUnit_SetCurveValue_40_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1472.000000), 'RigUnit_SetCurveValue_40_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 1248.000000), 'SetCurveValue_1_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2.Curve', 'BrowInnerUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 2096.000000), 'RigUnit_GetControlFloat_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 2304.000000), 'RigUnit_SetCurveValue_40_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2.Curve', 'CTRL_expressions_browRaiseOuterL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 2112.000000), 'SetCurveValue_1_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1.Curve', 'BrowOuterUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4704.000000, 2096.000000), 'RigUnit_GetControlFloat_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4336.000000, 2304.000000), 'RigUnit_SetCurveValue_40_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4336.000000, 2112.000000), 'SetCurveValue_1_1_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1_1.Curve', 'BrowOuterUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1376.000000), 'GetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2462.000000, 1470.000000), 'Add_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2264.000000, 1495.000000), 'Clamp_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2012.000000, 1491.000000), 'SetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4.Curve', 'head_cm2_color_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2041.000000, 1648.000000), 'SetCurveValue_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5.Curve', 'head_wm2_normal_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1577.000000, 1344.000000), 'GetCurveValue_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1182.000000, 1439.000000), 'Add_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-983.000000, 1464.000000), 'Clamp_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-731.000000, 1460.000000), 'SetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4_1.Curve', 'head_cm2_color_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-761.000000, 1616.000000), 'SetCurveValue_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5_1.Curve', 'head_wm2_normal_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1872.000000), 'GetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2537.000000, 1696.000000), 'Multiply_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 2752.000000), 'GetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2784.000000), 'SetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2960.000000), 'SetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 1856.000000), 'GetCurveValue_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 1680.000000), 'Multiply_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1753.000000, 2752.000000), 'GetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1323.000000, 2789.000000), 'SetCurveValue_6_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_1.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1335.000000, 2963.000000), 'SetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 2288.000000), 'GetCurveValue_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2.Curve', 'CTRL_expressions_browDownL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2473.000000, 2288.000000), 'Add_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2249.000000, 2304.000000), 'Clamp_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2352.000000), 'SetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8.Curve', 'head_cm2_color_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2528.000000), 'SetCurveValue_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9.Curve', 'head_wm2_normal_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2521.000000, 2080.000000), 'Multiply_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1529.000000, 2288.000000), 'GetCurveValue_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_1.Curve', 'CTRL_expressions_browDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1145.000000, 2288.000000), 'Add_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-921.000000, 2304.000000), 'Clamp_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2352.000000), 'SetCurveValue_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8_1.Curve', 'head_cm2_color_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2528.000000), 'SetCurveValue_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9_1.Curve', 'head_wm2_normal_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 2080.000000), 'Multiply_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2281.000000, 1888.000000), 'SetCurveValue_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_10.Curve', 'head_cm2_color_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2272.000000, 2045.000000), 'SetCurveValue_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_11.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 1872.000000), 'SetCurveValue_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_12.Curve', 'head_cm2_color_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 2064.000000), 'SetCurveValue_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_13.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 3184.000000), 'GetCurveValue_2_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3216.000000), 'SetCurveValue_6_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3392.000000), 'SetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1769.000000, 3168.000000), 'GetCurveValue_2_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3200.000000), 'SetCurveValue_6_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2_1.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3392.000000), 'SetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browConnect', unreal.Vector2D(-5577.000000, 928.000000), unreal.Vector2D(1632.000000, 1712.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_0')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browMultipliersConnect', unreal.Vector2D(-2921.000000, 1280.000000), unreal.Vector2D(2704.000000, 2272.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -6015.000000), 'RigUnit_GetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5871.000000), 'SetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -6015.000000), 'RigUnit_GetControlFloat_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -5871.000000), 'SetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5183.000000), 'SetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -5327.000000), 'RigUnit_GetControlFloat_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3.Control', 'CTRL_L_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5183.000000), 'SetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5327.000000), 'SetCurveValue_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2.Curve', 'EyeSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5327.000000), 'SetCurveValue_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1.Curve', 'EyeSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4730.000000, -5327.000000), 'RigUnit_GetControlFloat_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1.Control', 'CTRL_R_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5551.000000), 'SetCurveValue_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14.Curve', 'CTRL_expressions_eyeWidenL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5711.000000), 'SetCurveValue_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5567.000000), 'SetCurveValue_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14_1.Curve', 'CTRL_expressions_eyeWidenR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5711.000000), 'SetCurveValue_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4815.000000), 'SetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5496.000000, -4959.000000), 'RigUnit_GetControlFloat_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3_1.Control', 'CTRL_L_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4815.000000), 'SetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4959.000000), 'SetCurveValue_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2_1.Curve', 'CheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4959.000000), 'SetCurveValue_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_1.Curve', 'CheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -4959.000000), 'RigUnit_GetControlFloat_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1_1.Control', 'CTRL_R_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5599.000000), 'RigUnit_GetControlVector2D')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -6031.000000), 'SetCurveValue_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5871.000000), 'SetCurveValue_16')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1893.000000, -5834.000000), 'SetCurveValue_16_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5631.000000), 'RigUnit_GetControlVector2D_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1892.000000, -6004.000000), 'SetCurveValue_15_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5695.000000), 'SetCurveValue_15_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5525.000000), 'SetCurveValue_16_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5487.000000), 'SetCurveValue_16_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1_1.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5657.000000), 'SetCurveValue_15_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5359.000000), 'SetCurveValue_15_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5189.000000), 'SetCurveValue_16_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5321.000000), 'SetCurveValue_15_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_1.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5151.000000), 'SetCurveValue_16_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_1.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5039.000000), 'SetCurveValue_15_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -4869.000000), 'SetCurveValue_16_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5001.000000), 'SetCurveValue_15_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -4831.000000), 'SetCurveValue_16_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2_1.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5343.000000), 'RigUnit_GetControlVector2D_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5967.000000), 'Clamp')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5695.000000), 'Add_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5519.000000), 'Multiply')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5647.000000), 'Clamp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5279.000000), 'Add_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3353.000000, -5279.000000), 'Clamp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5039.000000), 'Add_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -4879.000000), 'Multiply_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3369.000000, -4959.000000), 'Clamp_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5951.000000), 'Add_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5951.000000), 'Clamp_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_8.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5679.000000), 'Add_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5503.000000), 'Multiply_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5631.000000), 'Clamp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5263.000000), 'Add_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2153.000000, -5263.000000), 'Clamp_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -5023.000000), 'Add_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -4863.000000), 'Multiply_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2169.000000, -4943.000000), 'Clamp_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5343.000000), 'RigUnit_GetControlVector2D_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2_1.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4351.000000), 'GetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4239.000000), 'GetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4127.000000), 'GetCurveValue_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4015.000000), 'GetCurveValue_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3903.000000), 'GetCurveValue_3_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3791.000000), 'GetCurveValue_3_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3679.000000), 'GetCurveValue_3_1_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3337.000000, -4159.000000), 'SetCurveValue_17')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5337.000000, -5839.000000), 'Clamp_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4649.000000, -5535.000000), 'Clamp_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -4303.000000), 'GetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4622.000000, -4370.000000), 'SetCurveValue_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5449.000000, -4415.000000), 'GetCurveValue_4_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4239.000000), 'Multiply_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4095.000000), 'Multiply_8_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3951.000000), 'Multiply_8_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3807.000000), 'Multiply_8_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3663.000000), 'Multiply_8_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3519.000000), 'Multiply_8_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4383.000000), 'Multiply_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5492.000000, -4044.000000), 'GetCurveValue_4_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -4111.000000), 'SetCurveValue_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -4156.000000), 'GetCurveValue_4_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4127.000000), 'Multiply_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3791.000000), 'GetCurveValue_4_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3855.000000), 'SetCurveValue_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3900.000000), 'GetCurveValue_4_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3855.000000), 'Multiply_7_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3535.000000), 'GetCurveValue_4_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3599.000000), 'SetCurveValue_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3644.000000), 'GetCurveValue_4_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3599.000000), 'Multiply_7_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3359.000000), 'Multiply_7_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5486.000000, -3282.000000), 'GetCurveValue_4_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4638.000000, -3346.000000), 'SetCurveValue_17_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5465.000000, -3391.000000), 'GetCurveValue_4_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3103.000000), 'Multiply_7_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3023.000000), 'GetCurveValue_4_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3087.000000), 'SetCurveValue_17_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3132.000000), 'GetCurveValue_4_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4383.000000), 'GetCurveValue_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4271.000000), 'GetCurveValue_3_1_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_6.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4159.000000), 'GetCurveValue_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1_1.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4047.000000), 'GetCurveValue_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2_1.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3935.000000), 'GetCurveValue_3_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3_1.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3823.000000), 'GetCurveValue_3_1_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4_1.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3711.000000), 'GetCurveValue_3_1_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-793.000000, -4191.000000), 'SetCurveValue_17_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4335.000000), 'GetCurveValue_4_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_2.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2078.000000, -4402.000000), 'SetCurveValue_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_2.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -4447.000000), 'GetCurveValue_4_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4271.000000), 'Multiply_8_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4127.000000), 'Multiply_8_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3983.000000), 'Multiply_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3839.000000), 'Multiply_8_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3695.000000), 'Multiply_8_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3551.000000), 'Multiply_8_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4415.000000), 'Multiply_7_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2948.000000, -4076.000000), 'GetCurveValue_4_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_2.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -4143.000000), 'SetCurveValue_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_2.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4143.000000), 'Multiply_7_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3823.000000), 'GetCurveValue_4_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_2.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3887.000000), 'SetCurveValue_17_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_2.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3903.000000), 'Multiply_7_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3567.000000), 'GetCurveValue_4_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3631.000000), 'SetCurveValue_17_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_2.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3631.000000), 'Multiply_7_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3391.000000), 'Multiply_7_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2942.000000, -3314.000000), 'GetCurveValue_4_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2094.000000, -3378.000000), 'SetCurveValue_17_1_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_2.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3135.000000), 'Multiply_7_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3055.000000), 'GetCurveValue_4_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3119.000000), 'SetCurveValue_17_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4191.000000), 'GetCurveValue_4_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_1.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3935.000000), 'GetCurveValue_4_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3679.000000), 'GetCurveValue_4_2_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_3.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3423.000000), 'GetCurveValue_4_2_2_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_4.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -3167.000000), 'GetCurveValue_4_2_2_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_5.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeConnect', unreal.Vector2D(-5561.000000, -6095.000000), unreal.Vector2D(4954.000000, 3221.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_3')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1392.000000), 'Add_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 1392.000000), 'Clamp_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1392.000000), 'SetCurveValue_18')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18.Curve', 'head_cm1_color_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1504.000000), 'SetCurveValue_19')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19.Curve', 'head_wm1_normal_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1680.000000), 'Add_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 1680.000000), 'Clamp_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1680.000000), 'SetCurveValue_20')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20.Curve', 'head_cm1_color_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1792.000000), 'SetCurveValue_21')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21.Curve', 'head_wm1_normal_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2144.000000), 'SetCurveValue_21_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2032.000000), 'Clamp_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2032.000000), 'SetCurveValue_20_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2464.000000), 'SetCurveValue_21_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 2368.000000), 'Clamp_12_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2352.000000), 'SetCurveValue_20_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 3104.000000), 'SetCurveValue_21_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1.Curve', 'head_wm3_normal_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2992.000000), 'Clamp_12_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2992.000000), 'SetCurveValue_20_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1.Curve', 'head_cm3_color_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3408.000000), 'SetCurveValue_21_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 3296.000000), 'Clamp_12_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3296.000000), 'SetCurveValue_20_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3632.000000), 'SetCurveValue_21_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3520.000000), 'SetCurveValue_20_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1392.000000), 'GetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1680.000000), 'GetCurveValue_4_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1680.000000), 'Multiply_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1840.000000), 'Multiply_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1840.000000), 'GetCurveValue_4_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2048.000000), 'Multiply_9_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2048.000000), 'GetCurveValue_4_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2752.000000), 'SetCurveValue_21_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2640.000000), 'SetCurveValue_20_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2224.000000), 'Multiply_9_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2224.000000), 'GetCurveValue_4_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2864.000000), 'Multiply_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3040.000000), 'Multiply_9_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3040.000000), 'GetCurveValue_4_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3248.000000), 'Multiply_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3456.000000), 'GetCurveValue_4_3_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3456.000000), 'Multiply_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3920.000000), 'SetCurveValue_21_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3808.000000), 'SetCurveValue_20_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1360.000000), 'Add_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 1360.000000), 'Clamp_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1360.000000), 'SetCurveValue_18_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18_1.Curve', 'head_cm1_color_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1472.000000), 'SetCurveValue_19_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19_1.Curve', 'head_wm1_normal_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1648.000000), 'Add_11_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 1648.000000), 'Clamp_12_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1648.000000), 'SetCurveValue_20_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_2.Curve', 'head_cm1_color_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1760.000000), 'SetCurveValue_21_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_2.Curve', 'head_wm1_normal_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2112.000000), 'SetCurveValue_21_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2000.000000), 'Clamp_12_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2000.000000), 'SetCurveValue_20_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2432.000000), 'SetCurveValue_21_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_3.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 2368.000000), 'Clamp_12_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2320.000000), 'SetCurveValue_20_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_3.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 3072.000000), 'SetCurveValue_21_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_2.Curve', 'head_wm3_normal_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2960.000000), 'Clamp_12_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2960.000000), 'SetCurveValue_20_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_2.Curve', 'head_cm3_color_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3376.000000), 'SetCurveValue_21_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 3264.000000), 'Clamp_12_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3264.000000), 'SetCurveValue_20_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3600.000000), 'SetCurveValue_21_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3488.000000), 'SetCurveValue_20_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1360.000000), 'GetCurveValue_4_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_4.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1648.000000), 'GetCurveValue_4_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1648.000000), 'Multiply_9_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1808.000000), 'Multiply_9_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1808.000000), 'GetCurveValue_4_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2016.000000), 'Multiply_9_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2016.000000), 'GetCurveValue_4_3_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2720.000000), 'SetCurveValue_21_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2608.000000), 'SetCurveValue_20_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2192.000000), 'Multiply_9_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2192.000000), 'GetCurveValue_4_3_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_2.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2832.000000), 'Multiply_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3008.000000), 'Multiply_9_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3008.000000), 'GetCurveValue_4_3_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_2.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3216.000000), 'Multiply_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3424.000000), 'GetCurveValue_4_3_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1_1.Curve', 'CTRL_expressions_neckStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3424.000000), 'Multiply_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3888.000000), 'SetCurveValue_21_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3776.000000), 'SetCurveValue_20_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeMultipliersConnect', unreal.Vector2D(182.000000, 1296.000000), unreal.Vector2D(3264.000000, 2784.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_5')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2543.000000), 'SetCurveValue_22')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5120.000000, -2368.000000), 'SetCurveValue_23')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23.Curve', 'CTRL_expressions_jawFwd')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, -2208.000000), 'SetCurveValue_23_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23_1.Curve', 'CTRL_expressions_jawBack')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5433.000000, -2255.000000), 'Multiply_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_13.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -2543.000000), 'RigUnit_GetControlFloat_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_4.Control', 'CTRL_C_jaw_fwdBack')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -2527.000000), 'SetCurveValue_22_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -2095.000000), 'RigUnit_GetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_3.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4617.000000, -2287.000000), 'Multiply_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_14.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2415.000000), 'SetCurveValue_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1.Curve', 'CTRL_expressions_jawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4360.000000, -2127.000000), 'SetCurveValue_22_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1.Curve', 'CTRL_expressions_jawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2239.000000), 'SetCurveValue_22_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4344.000000, -1807.000000), 'SetCurveValue_22_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1_1.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, -1919.000000), 'SetCurveValue_22_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2_1.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jawConnect', unreal.Vector2D(-5593.000000, -2607.000000), unreal.Vector2D(1632.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_6')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -1359.000000), 'RigUnit_GetControlFloat_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_5.Control', 'CTRL_C_mouth_funnelD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5113.000000, -1359.000000), 'SetCurveValue_24')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_24.Curve', 'MouthFunnel')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, -1119.000000), 'RigUnit_GetControlFloat_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_6.Control', 'CTRL_C_mouth_purseD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5129.000000, -1119.000000), 'Multiply_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.B', '0.750000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4713.000000, -1103.000000), 'Clamp_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_13.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -1103.000000), 'SetCurveValue_25')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25.Curve', 'CTRL_expressions_mouthFunnelDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -991.000000), 'SetCurveValue_25_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1.Curve', 'CTRL_expressions_mouthFunnelDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -879.000000), 'SetCurveValue_25_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1.Curve', 'CTRL_expressions_mouthFunnelUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -767.000000), 'SetCurveValue_25_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1.Curve', 'CTRL_expressions_mouthFunnelUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4921.000000, -1103.000000), 'Add_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -591.000000), 'SetCurveValue_25_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -479.000000), 'SetCurveValue_25_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -367.000000), 'SetCurveValue_25_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -255.000000), 'SetCurveValue_25_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5097.000000, -127.000000), 'Multiply_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.B', '0.410000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -79.000000), 'SetCurveValue_25_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 32.000000), 'SetCurveValue_25_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 144.000000), 'SetCurveValue_25_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 256.000000), 'SetCurveValue_25_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsTowardsUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5193.000000, -863.000000), 'SetCurveValue_26')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_26.Curve', 'MouthPucker')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -1343.000000), 'RigUnit_GetControlFloat_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_7.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1327.000000), 'SetCurveValue_27')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3792.000000, -1104.000000), 'Multiply_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, -1104.000000), 'SetCurveValue_27_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3563.000000, -1319.000000), 'Clamp_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_14.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3584.000000, -1104.000000), 'Clamp_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_15.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -767.000000), 'RigUnit_GetControlFloat_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8.Control', 'CTRL_L_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1215.000000), 'SetCurveValue_27_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_2.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, -992.000000), 'SetCurveValue_27_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -767.000000), 'SetCurveValue_28')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28.Curve', 'MouthSmileLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -655.000000), 'SetCurveValue_28_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -655.000000), 'SetCurveValue_28_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_1.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3001.000000, -767.000000), 'RigUnit_GetControlFloat_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_1.Control', 'CTRL_R_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -767.000000), 'SetCurveValue_28_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_2.Curve', 'MouthSmileRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3849.000000, -479.000000), 'RigUnit_GetControlFloat_8_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2.Control', 'CTRL_L_mouth_cornerDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -479.000000), 'SetCurveValue_28_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3.Curve', 'MouthFrownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -367.000000), 'SetCurveValue_28_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2.Curve', 'CTRL_expressions_mouthCornerDepressL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2976.000000, -224.000000), 'RigUnit_GetControlFloat_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_1.Control', 'CTRL_R_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2560.000000, -224.000000), 'SetCurveValue_28_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_1.Curve', 'MouthLowerDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2560.000000, -112.000000), 'SetCurveValue_28_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipDepressR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3808.000000, 64.000000), 'RigUnit_GetControlFloat_8_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2.Control', 'CTRL_L_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3392.000000, 64.000000), 'SetCurveValue_28_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2.Curve', 'MouthDimpleLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3392.000000, 176.000000), 'SetCurveValue_28_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2960.000000, 48.000000), 'RigUnit_GetControlFloat_8_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_1.Control', 'CTRL_R_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 48.000000), 'SetCurveValue_28_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_1.Curve', 'MouthDimpleRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 160.000000), 'SetCurveValue_28_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_1.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3792.000000, 367.000000), 'RigUnit_GetControlFloat_8_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2.Control', 'CTRL_L_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, 367.000000), 'SetCurveValue_28_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2.Curve', 'MouthStretchLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, 479.000000), 'SetCurveValue_28_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2960.000000, 351.000000), 'RigUnit_GetControlFloat_8_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2_1.Control', 'CTRL_R_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 351.000000), 'SetCurveValue_28_3_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2_1.Curve', 'MouthStretchRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 463.000000), 'SetCurveValue_28_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2_1.Curve', 'CTRL_expressions_mouthStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2016.000000, -736.000000), 'RigUnit_GetControlFloat_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9.Control', 'CTRL_C_mouth_lipsRollD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2000.000000, -1216.000000), 'RigUnit_GetControlFloat_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9_1.Control', 'CTRL_C_mouth_lipsRollU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1584.000000, -1216.000000), 'SetCurveValue_30')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_30.Curve', 'MouthRollUpper')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1647.000000, -498.000000), 'SetCurveValue_31')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_31.Curve', 'MouthRollLower')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1977.000000, -143.000000), 'RigUnit_GetControlFloat_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10.Control', 'CTRL_C_jaw_ChinRaiseD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1550.000000, -121.000000), 'SetCurveValue_32')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, -15.000000), 'SetCurveValue_32_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 96.000000), 'SetCurveValue_32_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1.Curve', 'MouthShrugLower')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 560.000000), 'SetCurveValue_32_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_1.Curve', 'MouthShrugUpper')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1961.000000, 320.000000), 'RigUnit_GetControlFloat_10_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10_1.Control', 'CTRL_C_jaw_ChinRaiseU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1534.000000, 342.000000), 'SetCurveValue_32_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_2.Curve', 'CTRL_expressions_jawChinRaiseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 448.000000), 'SetCurveValue_32_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_2.Curve', 'CTRL_expressions_jawChinRaiseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1033.000000, -143.000000), 'RigUnit_GetControlFloat_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11.Control', 'CTRL_L_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-633.000000, -127.000000), 'SetCurveValue_32_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3.Curve', 'CTRL_expressions_mouthPressUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, -21.000000), 'SetCurveValue_32_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3.Curve', 'CTRL_expressions_mouthPressDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, 90.000000), 'SetCurveValue_32_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2.Curve', 'MouthPressLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1032.000000, 257.000000), 'RigUnit_GetControlFloat_11_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_1.Control', 'CTRL_R_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-632.000000, 273.000000), 'SetCurveValue_32_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_1.Curve', 'CTRL_expressions_mouthPressUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 379.000000), 'SetCurveValue_32_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_1.Curve', 'CTRL_expressions_mouthPressDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 491.000000), 'SetCurveValue_32_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2_1.Curve', 'MouthPressRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(758.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_1_1.Control', 'CTRL_R_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1158.000000, -863.000000), 'SetCurveValue_32_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_1_1.Curve', 'CTRL_expressions_mouthUpperLipRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1147.000000, -757.000000), 'SetCurveValue_32_1_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_1_1.Curve', 'MouthUpperUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-137.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_2.Control', 'CTRL_L_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(262.000000, -863.000000), 'SetCurveValue_32_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_2.Curve', 'CTRL_expressions_mouthUpperLipRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(251.000000, -757.000000), 'SetCurveValue_32_1_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_2.Curve', 'MouthUpperUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-73.000000, -431.000000), 'RigUnit_GetControlVector2D_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_4.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-98.000000, -248.000000), 'RigUnit_GetControlFloat_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_12.Control', 'CTRL_C_mouth_close')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(326.000000, -287.000000), 'Multiply_19')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_19.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_if_node('float', 'None', unreal.Vector2D(614.000000, -367.000000), 'If_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.Condition', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.True', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.False', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(278.000000, -479.000000), 'GetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_6.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(848.000000, -304.000000), 'SetCurveValue_33')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_33.Curve', 'MouthClose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(282.000000, -77.000000), 'SetCurveValue_34')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 32.000000), 'SetCurveValue_34_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 144.000000), 'SetCurveValue_34_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 256.000000), 'SetCurveValue_34_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthConnect', unreal.Vector2D(-5593.000000, -1423.000000), unreal.Vector2D(7198.000000, 2150.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_7')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5481.000000, 2976.000000), 'RigUnit_GetControlFloat_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_13.Control', 'CTRL_C_mouth_suckBlow')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3008.000000), 'SetCurveValue_35')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35.Curve', 'CTRL_expressions_mouthCheekSuckL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3120.000000), 'SetCurveValue_35_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1.Curve', 'CTRL_expressions_mouthCheekSuckR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3344.000000), 'SetCurveValue_35_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1.Curve', 'CTRL_expressions_mouthCheekBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3232.000000), 'SetCurveValue_35_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2.Curve', 'CTRL_expressions_mouthCheekBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3568.000000), 'SetCurveValue_35_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1.Curve', 'CTRL_expressions_mouthLipsBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3456.000000), 'SetCurveValue_35_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1.Curve', 'CTRL_expressions_mouthLipsBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3680.000000), 'SetCurveValue_35_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1.Curve', 'CheekPuff')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('cheekConnect', unreal.Vector2D(-5545.000000, 2912.000000), unreal.Vector2D(850.000000, 914.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4473.000000, 2992.000000), 'RigUnit_GetControlFloat_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14.Control', 'CTRL_L_nose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4153.000000, 3216.000000), 'SetCurveValue_35_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2.Curve', 'CTRL_expressions_noseNostrilDilateL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4153.000000, 3104.000000), 'SetCurveValue_35_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4144.000000, 2992.000000), 'SetCurveValue_35_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1.Curve', 'NoseSneerLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3728.000000), 'SetCurveValue_35_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2_1.Curve', 'CTRL_expressions_noseNostrilDilateR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3616.000000), 'SetCurveValue_35_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1_1.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4151.000000, 3504.000000), 'SetCurveValue_35_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1_1.Curve', 'NoseSneerRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4480.000000, 3504.000000), 'RigUnit_GetControlFloat_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14_1.Control', 'CTRL_R_nose')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('noseConnect', unreal.Vector2D(-4537.000000, 2928.000000), unreal.Vector2D(896.000000, 1056.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_9')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4752.000000, 1408.000000), 'Clamp_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_16.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1424.000000), 'SetCurveValue_36')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36.Curve', 'head_cm1_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1536.000000), 'SetCurveValue_36_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1.Curve', 'head_cm1_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1648.000000), 'SetCurveValue_36_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1.Curve', 'head_cm1_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1760.000000), 'SetCurveValue_36_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1.Curve', 'head_cm1_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 2208.000000), 'SetCurveValue_36_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1_1.Curve', 'head_wm1_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1872.000000), 'SetCurveValue_36_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_2.Curve', 'head_wm1_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1984.000000), 'SetCurveValue_36_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_2.Curve', 'head_wm1_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 2096.000000), 'SetCurveValue_36_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_2.Curve', 'head_wm1_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2368.000000), 'Multiply_9_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2368.000000), 'GetCurveValue_4_3_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2416.000000), 'Multiply_9_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2416.000000), 'GetCurveValue_4_3_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1392.000000), 'Multiply_9_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3936.000000, 1392.000000), 'GetCurveValue_4_3_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2592.000000), 'Multiply_20')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2544.000000), 'Multiply_20_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3888.000000, 1712.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3888.000000, 1824.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3936.000000, 1504.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_2.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1536.000000), 'Multiply_22')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4816.000000, 2432.000000), 'Clamp_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5088.000000, 2432.000000), 'SetCurveValue_37')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37.Curve', 'head_cm1_color_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5088.000000, 2544.000000), 'SetCurveValue_37_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2432.000000), 'Multiply_23')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2432.000000), 'GetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(6368.000000, 2432.000000), 'Clamp_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6640.000000, 2432.000000), 'SetCurveValue_37_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_2.Curve', 'head_cm1_color_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6640.000000, 2544.000000), 'SetCurveValue_37_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2432.000000), 'Multiply_23_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2432.000000), 'GetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2576.000000), 'Multiply_24')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2592.000000), 'GetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2592.000000), 'GetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2576.000000), 'Multiply_24_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2720.000000), 'Multiply_24_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2736.000000), 'GetCurveValue_7_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2736.000000), 'GetCurveValue_7_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2720.000000), 'Multiply_24_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2896.000000), 'Multiply_24_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2912.000000), 'GetCurveValue_7_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 2896.000000), 'SetCurveValue_37_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3.Curve', 'head_cm1_color_head_wm1_purse_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3008.000000), 'SetCurveValue_37_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 2896.000000), 'SetCurveValue_37_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_1.Curve', 'head_cm1_color_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3008.000000), 'SetCurveValue_37_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_1.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2896.000000), 'Multiply_24_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2912.000000), 'GetCurveValue_7_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 3168.000000), 'Multiply_24_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 3184.000000), 'GetCurveValue_7_2_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3168.000000), 'SetCurveValue_37_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2.Curve', 'head_cm1_color_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3280.000000), 'SetCurveValue_37_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2.Curve', 'head_wm1_normal_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 3184.000000), 'Multiply_24_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 3200.000000), 'GetCurveValue_7_2_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_1.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3184.000000), 'SetCurveValue_37_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_1.Curve', 'head_cm1_color_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3296.000000), 'SetCurveValue_37_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_1.Curve', 'head_wm1_normal_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 3536.000000), 'GetCurveValue_7_2_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_2.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4320.000000, 3536.000000), 'SetCurveValue_37_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_2.Curve', 'head_cm1_color_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4320.000000, 3648.000000), 'SetCurveValue_37_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_2.Curve', 'head_wm1_normal_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthMultipliersConnect', unreal.Vector2D(3824.000000, 1328.000000), unreal.Vector2D(3010.000000, 2455.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_10')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4585.000000, -5855.000000), 'Clamp_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4649.000000, -5679.000000), 'Multiply_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5449.000000, -5535.000000), 'Clamp_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5449.000000, -5679.000000), 'Multiply_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_InverseExecution', 'Execute', unreal.Vector2D(-6313.000000, 4480.000000), 'InverseExecution')
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_ITERATOR, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5465.000000, 4304.000000), 'ArrayIterator')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))', unreal.Vector2D(-5497.000000, 4240.000000), 'RerouteNode_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3.Value', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_GET_AT_INDEX, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5145.000000, 4304.000000), 'ArrayGetAtIndex')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ArrayGetAtIndex.Index', '0')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))', unreal.Vector2D(-5177.000000, 4240.000000), 'RerouteNode_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3_1.Value', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5225.000000, 4464.000000), 'GetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io FloatValue,io ExecuteContext)', unreal.Vector2D(-4857.000000, 4240.000000), 'SetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Control', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.FloatValue', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4960.000000), 'GetCurveValue_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4960.000000), 'Remap')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5072.000000), 'GetCurveValue_2_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_4.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 5056.000000), 'Add_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 4992.000000), 'SetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4736.000000), 'GetCurveValue_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4736.000000), 'Remap_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4848.000000), 'GetCurveValue_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 4832.000000), 'Add_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4960.000000), 'GetCurveValue_2_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4960.000000), 'Remap_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 5072.000000), 'GetCurveValue_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_2.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 5056.000000), 'Add_2_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3609.000000, 4992.000000), 'SetControlVector2D_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4736.000000), 'GetCurveValue_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4736.000000), 'Remap_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4848.000000), 'GetCurveValue_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 4832.000000), 'Add_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5520.000000), 'GetCurveValue_2_1_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_2.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5440.000000), 'SetControlVector2D_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5296.000000), 'GetCurveValue_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5296.000000), 'Remap_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5408.000000), 'GetCurveValue_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5392.000000), 'Add_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye', unreal.Vector2D(-5561.000000, 4672.000000), unreal.Vector2D(2226.000000, 551.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_0_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5776.000000), 'SetControlVector2D_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5744.000000), 'GetCurveValue_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5744.000000), 'Remap_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5856.000000), 'GetCurveValue_2_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5840.000000), 'Add_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 6112.000000), 'SetControlVector2D_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 6080.000000), 'Remap_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 6176.000000), 'Add_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3577.000000, 6112.000000), 'SetControlVector2D_3_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4041.000000, 6080.000000), 'Remap_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3802.000000, 6176.000000), 'Add_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3593.000000, 5440.000000), 'SetControlVector2D_3_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, 5408.000000), 'GetCurveValue_2_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1_1.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4057.000000, 5408.000000), 'Remap_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3818.000000, 5504.000000), 'Add_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jaw', unreal.Vector2D(-5561.000000, 5232.000000), unreal.Vector2D(2260.000000, 443.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_2')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouth', unreal.Vector2D(-5561.000000, 5680.000000), unreal.Vector2D(1112.000000, 325.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_4')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye blink, wide', unreal.Vector2D(-5561.000000, 6016.000000), unreal.Vector2D(2276.000000, 327.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_5_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5903.000000), 'Add_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4303.000000), 'Add')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4015.000000), 'Add_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -3743.000000), 'Add_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3465.000000, -3615.000000), 'Add_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3449.000000, -3951.000000), 'Add_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3257.000000, -3807.000000), 'Add_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4319.000000), 'Add_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4031.000000), 'Add_17_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -3759.000000), 'Add_17_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-937.000000, -3631.000000), 'Add_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-921.000000, -3967.000000), 'Add_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-729.000000, -3823.000000), 'Add_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6089.000000, -5487.000000), 'SequenceAggregate_2')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6217.000000, -2415.000000), 'SequenceAggregate_2_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6169.000000, -1183.000000), 'SequenceAggregate_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6121.000000, 1136.000000), 'SequenceAggregate_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6025.000000, 2944.000000), 'SequenceAggregate_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5865.000000, 4448.000000), 'SequenceAggregate_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5849.000000, 4832.000000), 'SequenceAggregate_2_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5840.000000, 5316.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5828.000000, 5758.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2048.000000), 'Add_11_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2176.000000), 'Add_11_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 2544.000000), 'Add_11_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 2416.000000), 'Add_11_3_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2992.000000), 'Add_11_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2864.000000), 'Add_11_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 3376.000000), 'Add_11_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 3248.000000), 'Add_11_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2016.000000), 'Add_11_3_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2144.000000), 'Add_11_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 2368.000000), 'Add_11_3_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 2496.000000), 'Add_11_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2832.000000), 'Add_11_3_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2960.000000), 'Add_11_3_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 3216.000000), 'Add_11_3_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 3344.000000), 'Add_11_3_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1760.000000), 'Multiply_22_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4496.000000, 1760.000000), 'Multiply_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.B', '0.625000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4496.000000, 1424.000000), 'Add_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4672.000000, 1632.000000), 'Add_18_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4672.000000, 2656.000000), 'Add_18_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4544.000000, 2432.000000), 'Add_18_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(6224.000000, 2640.000000), 'Add_18_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(6096.000000, 2432.000000), 'Add_18_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_BeginExecution', 'Execute', unreal.Vector2D(-6400.000000, -5488.000000), 'BeginExecution')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3840.000000, -224.000000), 'RigUnit_GetControlFloat_8_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_1_1.Control', 'CTRL_L_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3424.000000, -224.000000), 'SetCurveValue_28_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_1_1.Curve', 'MouthLowerDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3424.000000, -112.000000), 'SetCurveValue_28_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_1_1.Curve', 'CTRL_expressions_mouthLowerLipDepressL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2992.000000, -480.000000), 'RigUnit_GetControlFloat_8_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_3.Control', 'CTRL_R_mouth_cornerDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2576.000000, -480.000000), 'SetCurveValue_28_3_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_3.Curve', 'MouthFrownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2576.000000, -368.000000), 'SetCurveValue_28_1_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_3.Curve', 'CTRL_expressions_mouthCornerDepressR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1264.000000), 'RigUnit_SetCurveValue_76_1_2_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_3.Curve', 'CTRL_expressions_mouthUpperLipRollOutR')
	RigUnit_AlphaInterp_22_1_1_3_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_3.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_3.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_3.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1152.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_3.Curve', 'CTRL_expressions_mouthUpperLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1040.000000), 'RigUnit_SetCurveValue_76_1_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_1_2.Curve', 'CTRL_expressions_mouthUpperLipRollOutL')
	RigUnit_AlphaInterp_22_1_1_1_2_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_2.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_2.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -912.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_1_2.Curve', 'CTRL_expressions_mouthUpperLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -480.000000), 'RigUnit_SetCurveValue_76_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_1_1_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutL')
	RigUnit_AlphaInterp_22_1_1_1_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -352.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLowerLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -736.000000), 'RigUnit_SetCurveValue_76_1_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutR')
	RigUnit_AlphaInterp_22_1_1_2_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_2_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_2_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -608.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1680.000000, -896.000000), 'Multiply_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1472.000000, -905.952393), 'Add_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_13.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_13.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_13.B', '0.000000')
	RigUnit_AlphaInterp_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bMapRange', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4384.000000, 1104.000000), 'RigUnit_SetCurveValue_26')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_26.Curve', 'CTRL_expressions_browDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1104.000000), 'RigUnit_SetCurveValue_48')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_48.Curve', 'CTRL_expressions_browDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3328.000000), 'RigUnit_SetCurveValue_98')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_98.Curve', 'CTRL_expressions_noseWrinkleUpperL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3840.000000), 'RigUnit_SetCurveValue_99')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_99.Curve', 'CTRL_expressions_noseWrinkleUpperR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(5008.000000, 5296.000000), 'RigUnit_GetControlFloat_21')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_21.Control', 'CTRL_C_tongue_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5440.000000, 5264.000000), 'RigUnit_SetCurveValue_19')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_19.Curve', 'CTRL_expressions_tonguePress')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(3984.000000, 5120.000000), 'RigUnit_GetControlFloat_52')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_52.Control', 'CTRL_C_tongue_narrowWide')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4416.000000, 5088.000000), 'RigUnit_SetCurveValue_50')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_50.Curve', 'CTRL_expressions_tongueNarrow')
	RigUnit_AlphaInterp_18_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_50.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_18')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_18.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_18.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(3968.000000, 4784.000000), 'RigUnit_GetControlFloat_74')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_74.Control', 'CTRL_C_tongue_inOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4384.000000, 4736.000000), 'RigUnit_SetCurveValue_72')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_72.Curve', 'CTRL_expressions_tongueIn')
	RigUnit_AlphaInterp_15_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_72.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.bMapRange', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4160.000000), 'RigUnit_SetCurveValue_73')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73.Curve', 'CTRL_expressions_tongueLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(3936.000000, 4336.000000), 'RigUnit_GetControlVector2D_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_4_1.Control', 'CTRL_C_tongue')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4288.000000), 'RigUnit_SetCurveValue_73_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1.Curve', 'CTRL_expressions_tongueRight')
	RigUnit_AlphaInterp_12_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4544.000000), 'RigUnit_SetCurveValue_73_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1.Curve', 'CTRL_expressions_tongueDown')
	RigUnit_AlphaInterp_11_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4416.000000), 'RigUnit_SetCurveValue_73_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2.Curve', 'CTRL_expressions_tongueUp')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Tongue Left/Right Up/Down', unreal.Vector2D(3872.000000, 4080.000000), unreal.Vector2D(976.000000, 1344.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_0_2')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4384.000000, 4864.000000), 'RigUnit_SetCurveValue_72_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_72_1.Curve', 'CTRL_expressions_tongueOut')
	RigUnit_AlphaInterp_15_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_72_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_15_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4416.000000, 5216.000000), 'RigUnit_SetCurveValue_50_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_50_1.Curve', 'CTRL_expressions_tongueWide')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4112.000000), 'RigUnit_SetCurveValue_73_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_3.Curve', 'CTRL_expressions_tongueTipLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4240.000000), 'RigUnit_SetCurveValue_73_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_2.Curve', 'CTRL_expressions_tongueTipRight')
	RigUnit_AlphaInterp_12_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4496.000000), 'RigUnit_SetCurveValue_73_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1_1.Curve', 'CTRL_expressions_tongueTipDown')
	RigUnit_AlphaInterp_11_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4368.000000), 'RigUnit_SetCurveValue_73_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2_1.Curve', 'CTRL_expressions_tongueTipUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(4992.000000, 4288.000000), 'RigUnit_GetControlVector2D_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_5.Control', 'CTRL_C_tongue_tip')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4656.000000), 'RigUnit_SetCurveValue_73_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_3_1.Curve', 'CTRL_expressions_tongueRollLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 4800.000000), 'RigUnit_SetCurveValue_73_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_2_1.Curve', 'CTRL_expressions_tongueRollRight')
	RigUnit_AlphaInterp_12_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 5056.000000), 'RigUnit_SetCurveValue_73_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1_1_1.Curve', 'CTRL_expressions_tongueRollDown')
	RigUnit_AlphaInterp_11_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 4928.000000), 'RigUnit_SetCurveValue_73_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2_1_1.Curve', 'CTRL_expressions_tongueRollUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(4992.000000, 4832.000000), 'RigUnit_GetControlVector2D_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_6.Control', 'CTRL_C_tongue_roll')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Tongue Tip and Roll', unreal.Vector2D(4912.000000, 4080.000000), unreal.Vector2D(928.000000, 1376.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_6_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_AimItem', 'Execute', unreal.Vector2D(6684.000000, 4149.000000), 'AimItem')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Item', '(Type=Bone,Name="EyeAim_L")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Primary', '(Weight=1.000000,Axis=(X=0.000000,Y=0.000000,Z=1.000000),Target=(X=1.000000,Y=0.000000,Z=0.000000),Kind=Location,Space=(Type=Bone))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Secondary', '(Weight=1.000000,Axis=(X=1.000000,Y=-0.000000,Z=0.000000),Target=(X=0.000000,Y=0.000000,Z=-1.000000),Kind=Direction,Space=(Type=Bone,Name="head"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.DebugSettings', '(Scale=10.000000,WorldOffset=(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000)))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6320.000000, 4336.000000), 'GetTransform_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4.Item', '(Type=Control,Name="CTRL_L_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_4.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_AimItem', 'Execute', unreal.Vector2D(7516.000000, 4149.000000), 'AimItem_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Item', '(Type=Bone,Name="EyeAim_R")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Primary', '(Weight=1.000000,Axis=(X=0.000000,Y=0.000000,Z=1.000000),Target=(X=1.000000,Y=0.000000,Z=0.000000),Kind=Location,Space=(Type=Bone))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Secondary', '(Weight=1.000000,Axis=(X=1.000000,Y=0.000000,Z=0.000000),Target=(X=0.000000,Y=0.000000,Z=-1.000000),Kind=Direction,Space=(Type=Bone,Name="head"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.DebugSettings', '(Scale=10.000000,WorldOffset=(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000)))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(7152.000000, 4384.000000), 'GetTransform_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4_1.Item', '(Type=Control,Name="CTRL_R_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_4_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Aim Controls', unreal.Vector2D(6240.000000, 4096.000000), unreal.Vector2D(1808.000000, 896.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_5_2')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8336.000000, 4256.000000), 'RigUnit_GetControlFloat_17')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8832.000000, 4224.000000), 'RigUnit_SetCurveValue_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_15.Curve', 'CTRL_expressions_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_CollectionLoop', 'Execute', unreal.Vector2D(9952.000000, 4223.000000), 'CollectionLoop')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Greater::Execute(in A,in B,out Result)', unreal.Vector2D(8448.000000, 4448.000000), 'MathFloatGreater')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatGreater.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatGreater.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatGreater.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlVisibility::Execute(in Item,in Pattern,in bVisible,io ExecuteContext)', unreal.Vector2D(10592.000000, 4240.000000), 'SetControlVisibility')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVisibility.Item', '(Type=Control,Name="None")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVisibility.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVisibility.bVisible', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Aim Controls', unreal.Vector2D(8224.000000, 4096.000000), unreal.Vector2D(2832.000000, 1312.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_60')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_DebugLineItemSpace', 'Execute', unreal.Vector2D(8928.000000, 4768.000000), 'DebugLineItemSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.A', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.B', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Color', '(R=0.000000,G=0.000000,B=0.000000,A=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.Color', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Thickness', '0.050000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Space', '(Type=Bone)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.Space', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.WorldOffset', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.bEnabled', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(8352.000000, 4624.000000), 'GetTransform_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3.Item', '(Type=Bone,Name="FACIAL_L_Eye")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(8352.000000, 4976.000000), 'GetTransform_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1.Item', '(Type=Control,Name="CTRL_L_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(9360.000000, 5072.000000), 'GetTransform_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1_1.Item', '(Type=Control,Name="CTRL_R_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_1_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(9328.000000, 4768.000000), 'GetTransform_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_2.Item', '(Type=Bone,Name="FACIAL_R_Eye")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_2.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_2.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_DebugLineItemSpace', 'Execute', unreal.Vector2D(10304.000000, 4816.000000), 'DebugLineItemSpace_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.A', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.B', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Color', '(R=0.000000,G=0.000000,B=0.000000,A=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.Color', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Thickness', '0.050000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Space', '(Type=Bone)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.Space', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.WorldOffset', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.bEnabled', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceExecution', 'Execute', unreal.Vector2D(10240.000000, 4352.000000), 'SequenceExecution_6')
	blueprint.get_controller_by_name('RigVMModel').add_branch_node(unreal.Vector2D(10608.000000, 4448.000000), 'Branch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_CollectionItems', 'Execute', unreal.Vector2D(9520.000000, 4224.000000), 'CollectionItems')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('CollectionItems.Items', '((Type=Control,Name="CTRL_C_eyesAim"),(Type=Control,Name="CTRL_L_eyeAim"),(Type=Control,Name="CTRL_R_eyeAim"),(Type=Control,Name="FRM_convergenceGUI"),(Type=Control,Name="CTRL_convergenceSwitch"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.0', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.1', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.2', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.3', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.4', True)
	blueprint.get_controller_by_name('RigVMModel').add_variable_node('eyes_aim_rig', 'bool', None, False, '', unreal.Vector2D(8944.000000, 4448.000000), 'VariableNode')
	blueprint.get_controller_by_name('RigVMModel').add_variable_node('eyes_aim_rig', 'bool', None, True, '', unreal.Vector2D(9712.000000, 4544.000000), 'VariableNode_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7504.000000, 6047.000000), 'RigUnit_GetControlVector2D_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2_2.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7504.000000, 6255.000000), 'RigUnit_GetControlVector2D_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_8.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7888.000000, 5967.000000), 'MathFloatAdd')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7968.000000, 6319.000000), 'MathFloatAdd_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8768.000000, 5888.000000), 'SetCurveValue_1_1_1_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_2.Curve', 'CTRL_expressions_eyeLookLeftL')
	RigUnit_AlphaInterp_4_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_4.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_4.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8784.000000, 6063.000000), 'SetCurveValue_1_1_1_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_2.Curve', 'CTRL_expressions_eyeLookRightL')
	RigUnit_AlphaInterp_2_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_2_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_2_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7165.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookRightR')
	RigUnit_AlphaInterp_8_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_8_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_8_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7552.000000, 6463.000000), 'MathFloatAdd_19_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_19_2.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_19_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_19_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8784.000000, 6303.000000), 'SetCurveValue_1_1_1_2_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_2.Curve', 'CTRL_expressions_eyeLookUpL')
	RigUnit_AlphaInterp_27_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_27')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_27.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_27.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8800.000000, 6511.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookDownL')
	RigUnit_AlphaInterp_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7597.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeLookDownR')
	RigUnit_AlphaInterp_9_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_9_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_9_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Left Eye', unreal.Vector2D(6304.000000, 5712.000000), unreal.Vector2D(3008.000000, 1056.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_58')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8480.000000, 5999.000000), 'MathFloatLerp')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8096.000000, 6175.000000), 'RigUnit_GetControlFloat_17_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17_1.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8496.000000, 6367.000000), 'MathFloatLerp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7584.000000, 7439.000000), 'RigUnit_GetControlVector2D_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_3_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(8096.000000, 7535.000000), 'MathFloatAdd_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_1_1_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7584.000000, 7151.000000), 'RigUnit_GetControlVector2D_8_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_8_1_1.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(8096.000000, 7055.000000), 'MathFloatAdd_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_2_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8640.000000, 7103.000000), 'MathFloatLerp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_2.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_2.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8573.000000, 7581.000000), 'MathFloatLerp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_1_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1_1.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8224.000000, 7359.000000), 'RigUnit_GetControlFloat_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17_1_1.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8925.000000, 7037.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.Curve', 'CTRL_expressions_eyeLookLeftR')
	RigUnit_AlphaInterp_26_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_26_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_26_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_26_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7421.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.Curve', 'CTRL_expressions_eyeLookUpR')
	RigUnit_AlphaInterp_28_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_28_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_28_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_28_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Right Eye', unreal.Vector2D(6272.000000, 6879.000000), unreal.Vector2D(3184.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_61')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6336.000000, 6015.000000), 'GetTransform_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5.Item', '(Type=Bone,Name="EyeAim_L")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_5.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5.Space', 'LocalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Cast::Execute(in Value,out Result)', unreal.Vector2D(6752.000000, 6063.000000), 'MathQuaternionToRotator')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathQuaternionToRotator.Value', 'FQuat', '/Script/CoreUObject.Quat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathQuaternionToRotator.Value', '(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathQuaternionToRotator.Value', False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 5904.000000), 'MathFloatRemap')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.SourceMinimum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.SourceMaximum', '-40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.TargetMinimum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 6239.000000), 'MathFloatRemap_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.SourceMaximum', '-30.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 6447.000000), 'MathFloatRemap_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.SourceMaximum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6321.000000, 7103.000000), 'GetTransform_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5_1.Item', '(Type=Bone,Name="EyeAim_R")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_5_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5_1.Space', 'LocalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Cast::Execute(in Value,out Result)', unreal.Vector2D(6737.000000, 7151.000000), 'MathQuaternionToRotator_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathQuaternionToRotator_1.Value', 'FQuat', '/Script/CoreUObject.Quat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathQuaternionToRotator_1.Value', '(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathQuaternionToRotator_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7184.000000, 6991.000000), 'MathFloatRemap_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_2.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.SourceMinimum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.SourceMaximum', '-40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.TargetMinimum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7056.000000, 7247.000000), 'MathFloatRemap_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_2.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.SourceMaximum', '-30.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7056.000000, 7535.000000), 'MathFloatRemap_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_1_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.SourceMaximum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7392.000000, 7583.000000), 'MathFloatAdd_19_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_19_2_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_19_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatAdd_19_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Convergence', unreal.Vector2D(9792.000000, 6320.000000), unreal.Vector2D(2128.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_61_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(9872.000000, 6640.000000), 'RigUnit_GetControlFloat_12_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_12_1.Control', 'CTRL_convergenceSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Set Transform::Execute(in Item,in Space,in bInitial,in Value,in Weight,in bPropagateToChildren,io ExecuteContext)', unreal.Vector2D(11552.000000, 6496.000000), 'RigUnit_SetTransform')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('RigUnit_SetTransform.Value', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Item', '(Type=Null,Name="CTRL_L_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.bInitial', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Value', '(Rotation=(X=0.707107,Y=0.000000,Z=0.707107,W=0.000000),Translation=(X=3.105512,Y=38.008495,Z=149.175949),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.bPropagateToChildren', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Set Transform::Execute(in Item,in Space,in bInitial,in Value,in Weight,in bPropagateToChildren,io ExecuteContext)', unreal.Vector2D(11568.000000, 6816.000000), 'RigUnit_SetTransform_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('RigUnit_SetTransform_1.Value', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Item', '(Type=Null,Name="CTRL_R_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.bInitial', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Value', '(Rotation=(X=0.707107,Y=0.000000,Z=0.707107,W=0.000000),Translation=(X=-3.132267,Y=38.008495,Z=149.181046),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.bPropagateToChildren', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(11360.000000, 6528.000000), 'MathTransformLerp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathTransformLerp_1.A', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1.A', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1.B', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(10336.000000, 6608.000000), 'RigUnit_GetTransform_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_3.Item', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_GetTransform_3.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_3.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(11376.000000, 6944.000000), 'MathTransformLerp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathTransformLerp_1_1.A', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1_1.A', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1_1.B', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1_1.T', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_ProjectTransformToNewParent', 'Execute', unreal.Vector2D(10784.000000, 6400.000000), 'ProjectTransformToNewParent_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.Child', '(Type=Null,Name="CTRL_L_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.Child', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.bChildInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.OldParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.OldParent', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.bOldParentInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.NewParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.NewParent', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_ProjectTransformToNewParent', 'Execute', unreal.Vector2D(10784.000000, 6816.000000), 'ProjectTransformToNewParent_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.Child', '(Type=Null,Name="CTRL_R_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.Child', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.bChildInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.OldParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.OldParent', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.bOldParentInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.NewParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.NewParent', False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4624.000000, -2496.000000), 'Clamp_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_18.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_18.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_18.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_18.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4667.545183, -1825.073582), 'Clamp_19')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_19.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_19.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_19.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_19.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_ProjectTransformToNewParent', 'Execute', unreal.Vector2D(9872.000000, 7456.000000), 'ProjectTransformToNewParent')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent.Child', '(Type=Control,Name="Facial_Board")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent.Child', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent.bChildInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent.OldParent', '(Type=Bone,Name="head")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent.OldParent', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent.bOldParentInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent.NewParent', '(Type=Bone,Name="head")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent.NewParent', True)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Set Transform::Execute(in Item,in Space,in bInitial,in Value,in Weight,in bPropagateToChildren,io ExecuteContext)', unreal.Vector2D(10544.000000, 7616.000000), 'SetTransform')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('SetTransform.Value', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetTransform.Item', '(Type=Control,Name="Facial_Board")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetTransform.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetTransform.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetTransform.Value', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetTransform.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetTransform.Value.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetTransform.Value.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetTransform.Value.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetTransform.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetTransform.bPropagateToChildren', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(9888.000000, 7856.000000), 'RigUnit_GetTransform_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_2.Item', '(Type=Control,Name="Facial_Board")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_GetTransform_2.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_2.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_2.bInitial', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(10363.000000, 7983.000000), 'MathTransformLerp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathTransformLerp_2.A', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_2.A', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.A.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.A.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.A.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_2.B', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.B.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.B.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_2.B.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Face board Follow', unreal.Vector2D(9808.000000, 7408.000000), unreal.Vector2D(1340.000000, 861.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_3_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(9872.000000, 8080.000000), 'RigUnit_GetControlFloat_106')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_106.Control', 'CTRL_faceGUIfollowHead')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2.FloatValue', 'SetCurveValue_1_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_1.FloatValue', 'SetCurveValue_1_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1.FloatValue', 'Add_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_3.Result', 'Clamp_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_3.Result', 'RigUnit_SetCurveValue_40_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1.FloatValue', 'Add_4.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_4.Result', 'Clamp_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_4.Result', 'RigUnit_SetCurveValue_40_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'SetCurveValue_1_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_1.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue.Value', 'Add_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5.Result', 'Clamp_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_1.Value', 'Add_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5_1.Result', 'Clamp_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_4_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3.Result', 'Add_5.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3_1.Result', 'Add_5_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4.ExecuteContext', 'SetCurveValue_5.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5.ExecuteContext', 'SetCurveValue_4_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4_1.ExecuteContext', 'SetCurveValue_5_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6.ExecuteContext', 'SetCurveValue_7.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7.ExecuteContext', 'SetCurveValue_6_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_1.ExecuteContext', 'SetCurveValue_7_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2.Value', 'Add_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6.Result', 'Clamp_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4.Result', 'Add_6.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8.ExecuteContext', 'SetCurveValue_9.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_1.Value', 'Add_6_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6_1.Result', 'Clamp_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_8_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4_1.Result', 'Add_6_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8_1.ExecuteContext', 'SetCurveValue_9_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9.ExecuteContext', 'SetCurveValue_8_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9_1.ExecuteContext', 'SetCurveValue_6.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5_1.ExecuteContext', 'SetCurveValue_10.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_10.ExecuteContext', 'SetCurveValue_11.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_11.ExecuteContext', 'SetCurveValue_12.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_12.ExecuteContext', 'SetCurveValue_13.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_13.ExecuteContext', 'SetCurveValue_8.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_6_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_7_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2.ExecuteContext', 'SetCurveValue_7_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_1.ExecuteContext', 'SetCurveValue_6_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_6_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_7_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2_1.ExecuteContext', 'SetCurveValue_7_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2.ExecuteContext', 'SetCurveValue_6_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue.ExecuteContext', 'SetCurveValue_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3.ExecuteContext', 'SetCurveValue_14.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2.ExecuteContext', 'SetCurveValue_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3_1.ExecuteContext', 'SetCurveValue_14_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14_1.ExecuteContext', 'SetCurveValue_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2.ExecuteContext', 'SetCurveValue_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3.ExecuteContext', 'SetCurveValue_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1.ExecuteContext', 'SetCurveValue_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2_1.ExecuteContext', 'SetCurveValue_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3_1.ExecuteContext', 'SetCurveValue_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_1.ExecuteContext', 'SetCurveValue_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1.ExecuteContext', 'SetCurveValue_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1_1.ExecuteContext', 'SetCurveValue_15.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15.ExecuteContext', 'SetCurveValue_16.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1.ExecuteContext', 'SetCurveValue_16_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2.ExecuteContext', 'SetCurveValue_16_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1_1.ExecuteContext', 'SetCurveValue_16_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1.ExecuteContext', 'SetCurveValue_16_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_1.ExecuteContext', 'SetCurveValue_16_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2.ExecuteContext', 'SetCurveValue_16_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2_1.ExecuteContext', 'SetCurveValue_16_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1.Result', 'Multiply.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply.Result', 'Clamp_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_15_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_16_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2.Result', 'Clamp_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_15_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_16_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7.Result', 'Multiply_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1.Result', 'Clamp_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_15_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_16_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16.ExecuteContext', 'SetCurveValue_15_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2.ExecuteContext', 'SetCurveValue_15_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1.ExecuteContext', 'SetCurveValue_15_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2.ExecuteContext', 'SetCurveValue_15_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_8.Result', 'Clamp_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1.Result', 'Multiply_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_2.Result', 'Clamp_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_1.Result', 'Clamp_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7_1.Result', 'Multiply_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1_1.Result', 'Clamp_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_8.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_15_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_16_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_15_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_16_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_15_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_16_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_15_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_16_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1.ExecuteContext', 'SetCurveValue_15_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1_1.ExecuteContext', 'SetCurveValue_15_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_1.ExecuteContext', 'SetCurveValue_15_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14.ExecuteContext', 'SetCurveValue_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9.Result', 'SetCurveValue.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_14_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1.Value', 'Multiply_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1.Value', 'Multiply_8_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2.Value', 'Multiply_8_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3.Value', 'Multiply_8_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4.Value', 'Multiply_8_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5.Value', 'Multiply_8_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7.Result', 'SetCurveValue_17_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1.Result', 'SetCurveValue_17_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2_1.ExecuteContext', 'SetCurveValue_17_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1.Result', 'SetCurveValue_17_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_6.Value', 'Multiply_8_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1_1.Value', 'Multiply_8_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2_1.Value', 'Multiply_8_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3_1.Value', 'Multiply_8_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4_1.Value', 'Multiply_8_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5_1.Value', 'Multiply_8_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_2.Result', 'SetCurveValue_17_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_2.Result', 'SetCurveValue_17_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17.ExecuteContext', 'SetCurveValue_17_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10.Result', 'Clamp_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11.Result', 'Clamp_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_20.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_21.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_20_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_21_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_20_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_21_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_20_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_21_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4.Value', 'Add_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3.Value', 'Multiply_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9.Result', 'Add_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1.Value', 'Multiply_9_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1.Result', 'Add_11.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1.Value', 'Multiply_9_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_20_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_21_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_9_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_9_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1.Value', 'Multiply_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_20_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_21_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18.ExecuteContext', 'SetCurveValue_19.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19.ExecuteContext', 'SetCurveValue_20.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20.ExecuteContext', 'SetCurveValue_21.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21.ExecuteContext', 'SetCurveValue_20_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1.ExecuteContext', 'SetCurveValue_21_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1.ExecuteContext', 'SetCurveValue_20_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1.ExecuteContext', 'SetCurveValue_21_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1.ExecuteContext', 'SetCurveValue_20_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10_1.Result', 'Clamp_11_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_18_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_19_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_2.Result', 'Clamp_12_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_20_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_21_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_20_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_21_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_20_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_21_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_20_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_21_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_4.Value', 'Add_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_2.Value', 'Multiply_9_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_2.Result', 'Add_11_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_2.Value', 'Multiply_9_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_2.Result', 'Add_11_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2.Value', 'Multiply_9_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_20_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_21_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_9_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_9_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_11_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1_1.Value', 'Multiply_12_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_20_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_21_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18_1.ExecuteContext', 'SetCurveValue_19_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19_1.ExecuteContext', 'SetCurveValue_20_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_2.ExecuteContext', 'SetCurveValue_21_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_2.ExecuteContext', 'SetCurveValue_20_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_2.ExecuteContext', 'SetCurveValue_21_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_2.ExecuteContext', 'SetCurveValue_20_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_3.ExecuteContext', 'SetCurveValue_21_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_3.ExecuteContext', 'SetCurveValue_20_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2_1.ExecuteContext', 'SetCurveValue_21_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2_1.ExecuteContext', 'SetCurveValue_20_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_18_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'Multiply_13.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22.ExecuteContext', 'SetCurveValue_23.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23.ExecuteContext', 'SetCurveValue_23_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'Multiply_14.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23_1.ExecuteContext', 'SetCurveValue_22_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1.ExecuteContext', 'SetCurveValue_22_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1.ExecuteContext', 'SetCurveValue_22_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2.ExecuteContext', 'SetCurveValue_22_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2_1.ExecuteContext', 'SetCurveValue_22_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1_1.ExecuteContext', 'SetCurveValue_22_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'SetCurveValue_24.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_15.Result', 'Add_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_12.Result', 'Clamp_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'Add_12.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25.ExecuteContext', 'SetCurveValue_25_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1.ExecuteContext', 'SetCurveValue_25_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1.ExecuteContext', 'SetCurveValue_25_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2.ExecuteContext', 'SetCurveValue_25_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2.ExecuteContext', 'SetCurveValue_25_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2.ExecuteContext', 'SetCurveValue_25_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2_1.ExecuteContext', 'SetCurveValue_25_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_26.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1.ExecuteContext', 'SetCurveValue_25_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1.ExecuteContext', 'SetCurveValue_25_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_24.ExecuteContext', 'SetCurveValue_26.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_26.ExecuteContext', 'SetCurveValue_25.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1_1.ExecuteContext', 'SetCurveValue_27.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Multiply_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Clamp_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_17.Result', 'Clamp_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_15.Result', 'SetCurveValue_27_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27.ExecuteContext', 'SetCurveValue_27_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_2.ExecuteContext', 'SetCurveValue_27_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1.ExecuteContext', 'SetCurveValue_27_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8.FloatValue', 'SetCurveValue_28.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28.ExecuteContext', 'SetCurveValue_28_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1_1.ExecuteContext', 'SetCurveValue_28.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_1.FloatValue', 'SetCurveValue_28_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_2.ExecuteContext', 'SetCurveValue_28_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2.FloatValue', 'SetCurveValue_28_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3.ExecuteContext', 'SetCurveValue_28_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1.FloatValue', 'SetCurveValue_28_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_1.ExecuteContext', 'SetCurveValue_28_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1.ExecuteContext', 'SetCurveValue_28_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2.FloatValue', 'SetCurveValue_28_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2.ExecuteContext', 'SetCurveValue_28_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_1.FloatValue', 'SetCurveValue_28_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_1.ExecuteContext', 'SetCurveValue_28_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2.FloatValue', 'SetCurveValue_28_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2.ExecuteContext', 'SetCurveValue_28_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2.ExecuteContext', 'SetCurveValue_28_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2_1.FloatValue', 'SetCurveValue_28_3_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_1.ExecuteContext', 'SetCurveValue_28_3_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2.ExecuteContext', 'SetCurveValue_28_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2_1.ExecuteContext', 'SetCurveValue_30.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'SetCurveValue_30.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_31.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32.ExecuteContext', 'SetCurveValue_32_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1.ExecuteContext', 'SetCurveValue_32_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_2.ExecuteContext', 'SetCurveValue_32_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_2.ExecuteContext', 'SetCurveValue_32_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1.ExecuteContext', 'SetCurveValue_32_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3.ExecuteContext', 'SetCurveValue_32_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3.ExecuteContext', 'SetCurveValue_32_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_1.ExecuteContext', 'SetCurveValue_32_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_1.ExecuteContext', 'SetCurveValue_32_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_1.ExecuteContext', 'SetCurveValue_32_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2.ExecuteContext', 'SetCurveValue_32_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_2.ExecuteContext', 'SetCurveValue_32_1_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_1_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_1_1.ExecuteContext', 'SetCurveValue_32_1_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_1_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4.Vector.Y', 'Multiply_19.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'Multiply_19.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_6.Valid', 'If_4.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_19.Result', 'If_4.True')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_4.Result', 'SetCurveValue_33.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_2.ExecuteContext', 'SetCurveValue_32_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_33.ExecuteContext', 'SetCurveValue_34.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34.ExecuteContext', 'SetCurveValue_34_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1.ExecuteContext', 'SetCurveValue_34_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1_1.ExecuteContext', 'SetCurveValue_34_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35.ExecuteContext', 'SetCurveValue_35_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2.ExecuteContext', 'SetCurveValue_35_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1.ExecuteContext', 'SetCurveValue_35_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1.ExecuteContext', 'SetCurveValue_35_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1.ExecuteContext', 'SetCurveValue_35_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2_1.ExecuteContext', 'SetCurveValue_18.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36.ExecuteContext', 'SetCurveValue_36_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1.ExecuteContext', 'SetCurveValue_36_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1.ExecuteContext', 'SetCurveValue_36_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_2.ExecuteContext', 'SetCurveValue_36_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_2.ExecuteContext', 'SetCurveValue_36_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_2.ExecuteContext', 'SetCurveValue_36_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1.ExecuteContext', 'SetCurveValue_36_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_9_1_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_9_1_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1.Value', 'Multiply_9_1_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_20.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_20_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_2.Value', 'Multiply_22.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_36.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17.Result', 'SetCurveValue_37.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37.ExecuteContext', 'SetCurveValue_37_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7.Value', 'Multiply_23.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17_1.Result', 'SetCurveValue_37_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_2.ExecuteContext', 'SetCurveValue_37_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_1.Value', 'Multiply_23_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1_1.ExecuteContext', 'SetCurveValue_37.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2.Value', 'Multiply_24.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1.Value', 'Multiply_24_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2.Value', 'Multiply_24_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1_1.Value', 'Multiply_24_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1.Value', 'Multiply_24_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3.ExecuteContext', 'SetCurveValue_37_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1.ExecuteContext', 'SetCurveValue_37_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_1.Value', 'Multiply_24_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_1.ExecuteContext', 'SetCurveValue_37_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_1.ExecuteContext', 'SetCurveValue_37_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2.Value', 'Multiply_24_2_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2.ExecuteContext', 'SetCurveValue_37_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2.ExecuteContext', 'SetCurveValue_37_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2.ExecuteContext', 'SetCurveValue_37_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_1.Value', 'Multiply_24_2_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_1.ExecuteContext', 'SetCurveValue_37_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_1.ExecuteContext', 'SetCurveValue_37_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_2.ExecuteContext', 'SetCurveValue_37_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2_1.ExecuteContext', 'SetCurveValue_37_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_4.Value', 'Multiply_7_1_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_2.Value', 'Multiply_7_1_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_5.Value', 'Multiply_7_1_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_3.Value', 'Multiply_7_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_2.Value', 'Multiply_7_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_2.Value', 'Multiply_7_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_2.Value', 'Multiply_7_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_1.Value', 'Multiply_7_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_2.Value', 'Multiply_7_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2.Value', 'Multiply_7_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_2.Value', 'Multiply_7_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2.Value', 'Multiply_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1.Value', 'Multiply_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1.Value', 'Multiply_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1.Value', 'Multiply_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1.Value', 'Multiply_7_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1.Value', 'Multiply_7_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1.Value', 'Multiply_7_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1.Value', 'Multiply_7_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1.Value', 'Multiply_7_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9_1.Result', 'SetCurveValue_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Multiply_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Multiply_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Clamp_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_5.Result', 'Clamp_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Clamp_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_6.Result', 'Clamp_10_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3.Value', 'ArrayIterator.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Index', 'ArrayGetAtIndex.Index')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3_1.Value', 'ArrayGetAtIndex.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Element.Name', 'GetCurveValue_8.Curve')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.ExecuteContext', 'SetControlFloat.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_8.Value', 'SetControlFloat.FloatValue')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayGetAtIndex.Element.Name', 'SetControlFloat.Control')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3.Value', 'Remap.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap.Result', 'Add_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_4.Value', 'Add_15.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_15.Result', 'SetControlVector2D_3.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1.Value', 'Remap_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1.Result', 'Add_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1.Value', 'Add_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2.Result', 'SetControlVector2D_3.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3_1.Value', 'Remap_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_2.Result', 'Add_2_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_2.Value', 'Add_2_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_2.Result', 'SetControlVector2D_3_1.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1_1.Value', 'Remap_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_1.Result', 'Add_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1_1.Value', 'Add_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1_1.Result', 'SetControlVector2D_3_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3.ExecuteContext', 'SetControlVector2D_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2.Value', 'Remap_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2.Result', 'Add_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2.Value', 'Add_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1.Result', 'SetControlVector2D_3_2.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_2.Value', 'SetControlVector2D_3_2.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1.Value', 'Remap_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1.Result', 'Add_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1.Value', 'Add_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1.Result', 'SetControlVector2D_3_2_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1.Value', 'Remap_1_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1.Result', 'Add_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1.Value', 'Add_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1.Result', 'SetControlVector2D_3_2_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1.Value', 'Remap_1_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1.Result', 'Add_1_2_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1_1.Value', 'Add_1_2_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1_1.Value', 'Remap_1_2_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1_1.Result', 'Add_1_2_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2.ExecuteContext', 'SetControlVector2D_3_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2_1_1.ExecuteContext', 'SetControlVector2D_3_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_16.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_16.Result', 'Clamp.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3.Value', 'Add.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8.Result', 'Add.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1.Result', 'Add_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2.Result', 'Add_17.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3.Result', 'Add_17_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4.Result', 'Add_17_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1.Result', 'Add_17_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5.Result', 'Add_17_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add.Result', 'Add_17_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17.Result', 'Add_17_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1.Result', 'Add_17_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1.Result', 'Add_17_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1.Result', 'SetCurveValue_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_2.Result', 'Add_17_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_9.Result', 'Add_17_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_2.Result', 'Add_17_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_2.Result', 'Add_17_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_2.Result', 'Add_17_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_2.Value', 'Add_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_6.Result', 'Add_9.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1_1.Result', 'Add_17_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2_1.Result', 'Add_17_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3_1.Result', 'Add_17_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4_1.Result', 'Add_17_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5_1.Result', 'Add_17_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1_1.Result', 'SetCurveValue_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.B', 'SequenceAggregate_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.B', 'SequenceAggregate_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.B', 'SequenceAggregate_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.A', 'SetCurveValue.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.A', 'SetCurveValue_22.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.A', 'SetCurveValue_24.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.B', 'SequenceAggregate_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.A', 'SetCurveValue_1_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1.A', 'SetCurveValue_35.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('InverseExecution.ExecuteContext', 'SequenceAggregate_2_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.A', 'ArrayIterator.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.A', 'SetControlVector2D_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.B', 'SetControlVector2D_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3.Result', 'Add_11_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1.Result', 'Clamp_12_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2.Result', 'Add_11_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1.Result', 'Clamp_12_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1.Result', 'Add_11_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1.Result', 'Add_11_3_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20.Result', 'Add_11_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1.Result', 'Clamp_12_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1_1.Result', 'Add_11_3_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11.Result', 'Add_11_3_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'Add_11_3_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1_1.Result', 'Clamp_12_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3.Result', 'Add_11_3_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2.Result', 'Clamp_12_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1.Result', 'Add_11_3_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1.Result', 'Clamp_12_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1.Result', 'Add_11_3_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1_1.Result', 'Add_11_3_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20_1.Result', 'Add_11_3_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1.Result', 'Clamp_12_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1_1.Result', 'Add_11_3_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11_1.Result', 'Add_11_3_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'Add_11_3_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1_1.Result', 'Clamp_12_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1.Value', 'Multiply_22_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Value', 'Multiply_22_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1.Result', 'Multiply_22_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1_1.Result', 'Add_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22.Result', 'Add_18.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18.Result', 'Add_18_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1_1.Result', 'Add_18_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1.Result', 'Clamp_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2.Result', 'Add_18_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23.Result', 'Add_18_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24.Result', 'Add_18_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2.Result', 'Add_18_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1.Result', 'Clamp_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2_1.Result', 'Add_18_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23_1.Result', 'Add_18_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1.Result', 'Add_18_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1_1.Result', 'Add_18_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1_1.Result', 'Clamp_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('BeginExecution.ExecuteContext', 'SequenceAggregate_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_15.Result', 'SetCurveValue_27_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8.FloatValue', 'SetCurveValue_28_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2.FloatValue', 'SetCurveValue_28_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2.FloatValue', 'SetCurveValue_28_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2.FloatValue', 'SetCurveValue_28_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_1.FloatValue', 'SetCurveValue_28_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1.FloatValue', 'SetCurveValue_28_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_1.FloatValue', 'SetCurveValue_28_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2_1.FloatValue', 'SetCurveValue_28_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1_1.FloatValue', 'SetCurveValue_28_3_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_1_1.ExecuteContext', 'SetCurveValue_28_1_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1_1.FloatValue', 'SetCurveValue_28_1_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2.ExecuteContext', 'SetCurveValue_28_3_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_1_1.ExecuteContext', 'SetCurveValue_28_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_3.FloatValue', 'SetCurveValue_28_3_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_3.ExecuteContext', 'SetCurveValue_28_1_2_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_3.FloatValue', 'SetCurveValue_28_1_2_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_1.ExecuteContext', 'SetCurveValue_28_3_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_3.ExecuteContext', 'SetCurveValue_28_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_1_1.ExecuteContext', 'SetCurveValue_33.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2_1.ExecuteContext', 'SetCurveValue_32_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_3.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_30.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_1_2.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_3.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_31.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_31.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_32.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_AlphaInterp_22_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_AlphaInterp_22_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'Multiply_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_18.Result', 'Add_13.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'Add_13.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_SetCurveValue_76_1_1_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp_22_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_SetCurveValue_76_1_1_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp_22_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2.FloatValue', 'RigUnit_SetCurveValue_48.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2.ExecuteContext', 'RigUnit_SetCurveValue_48.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_48.ExecuteContext', 'SetCurveValue_1_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_1.FloatValue', 'RigUnit_SetCurveValue_26.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_26.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_26.ExecuteContext', 'SetCurveValue_1_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'RigUnit_SetCurveValue_98.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2.ExecuteContext', 'RigUnit_SetCurveValue_98.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_98.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_99.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_99.ExecuteContext', 'SetCurveValue_4.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'RigUnit_SetCurveValue_99.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_21.FloatValue', 'RigUnit_SetCurveValue_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.X', 'RigUnit_SetCurveValue_73.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.Y', 'RigUnit_SetCurveValue_73_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73.ExecuteContext', 'RigUnit_SetCurveValue_73_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1.ExecuteContext', 'RigUnit_SetCurveValue_73_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.Y', 'RigUnit_AlphaInterp_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.X', 'RigUnit_AlphaInterp_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_74.FloatValue', 'RigUnit_AlphaInterp_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_72.ExecuteContext', 'RigUnit_SetCurveValue_72_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_74.FloatValue', 'RigUnit_AlphaInterp_15_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1.ExecuteContext', 'RigUnit_SetCurveValue_72.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_50.ExecuteContext', 'RigUnit_SetCurveValue_50_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_52.FloatValue', 'RigUnit_SetCurveValue_50_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_52.FloatValue', 'RigUnit_AlphaInterp_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_72_1.ExecuteContext', 'RigUnit_SetCurveValue_50.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_3.ExecuteContext', 'RigUnit_SetCurveValue_73_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_2.ExecuteContext', 'RigUnit_SetCurveValue_73_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.X', 'RigUnit_SetCurveValue_73_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.X', 'RigUnit_AlphaInterp_12_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.Y', 'RigUnit_SetCurveValue_73_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.Y', 'RigUnit_AlphaInterp_11_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_50_1.ExecuteContext', 'RigUnit_SetCurveValue_73_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_3_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_73_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2_1_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.X', 'RigUnit_SetCurveValue_73_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.X', 'RigUnit_AlphaInterp_12_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.Y', 'RigUnit_SetCurveValue_73_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.Y', 'RigUnit_AlphaInterp_11_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_73_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_19.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2_2.ExecuteContext', 'RigUnit_SetCurveValue_73.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_4.Transform.Translation', 'AimItem.Primary.Target')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_4_1.Transform.Translation', 'AimItem_1.Primary.Target')
	blueprint.get_controller_by_name('RigVMModel').add_link('AimItem.ExecuteContext', 'AimItem_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17.FloatValue', 'RigUnit_SetCurveValue_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17.FloatValue', 'MathFloatGreater.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.Item', 'SetControlVisibility.Item')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.ExecuteContext', 'SetControlVisibility.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3.Transform.Translation', 'DebugLineItemSpace.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_1.Transform.Translation', 'DebugLineItemSpace.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('DebugLineItemSpace.ExecuteContext', 'DebugLineItemSpace_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_2.Transform.Translation', 'DebugLineItemSpace_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_1_1.Transform.Translation', 'DebugLineItemSpace_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.Completed', 'SequenceExecution_6.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceExecution_6.A', 'Branch.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Branch.True', 'DebugLineItemSpace.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionItems.Collection', 'CollectionLoop.Collection')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_15.ExecuteContext', 'VariableNode.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatGreater.Result', 'VariableNode.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode.ExecuteContext', 'CollectionLoop.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode_1.Value', 'SetControlVisibility.bVisible')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode_1.Value', 'Branch.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_19.ExecuteContext', 'AimItem.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('AimItem_1.ExecuteContext', 'RigUnit_SetCurveValue_15.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8.Vector.X', 'MathFloatAdd.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_2.Vector.X', 'MathFloatAdd.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8.Vector.Y', 'MathFloatAdd_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_2.Vector.Y', 'MathFloatAdd_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd.Result', 'MathFloatLerp.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp.Result', 'RigUnit_AlphaInterp_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1.FloatValue', 'MathFloatLerp.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_1.Result', 'MathFloatLerp_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_19_2.Result', 'MathFloatLerp_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1.FloatValue', 'MathFloatLerp_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1.Result', 'RigUnit_AlphaInterp_27.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8_1_1.Vector.X', 'MathFloatAdd_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8_1_1.Vector.Y', 'MathFloatAdd_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3_1.Vector.X', 'MathFloatAdd_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3_1.Vector.Y', 'MathFloatAdd_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_2_1.Result', 'MathFloatLerp_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1_1.FloatValue', 'MathFloatLerp_2.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1_1.FloatValue', 'MathFloatLerp_1_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_1_1_1.Result', 'MathFloatLerp_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1_1.Result', 'RigUnit_AlphaInterp_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp.Result', 'RigUnit_AlphaInterp_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1.Result', 'RigUnit_AlphaInterp_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_2.Result', 'RigUnit_AlphaInterp_26_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1_1.Result', 'RigUnit_AlphaInterp_28_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_2.Result', 'RigUnit_AlphaInterp_8_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_5.Transform.Rotation', 'MathQuaternionToRotator.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Pitch', 'MathFloatRemap.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap.Result', 'MathFloatLerp.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Roll', 'MathFloatRemap_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Roll', 'MathFloatRemap_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1.Result', 'MathFloatAdd_19_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_1.Result', 'MathFloatAdd_19_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_5_1.Transform.Rotation', 'MathQuaternionToRotator_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Pitch', 'MathFloatRemap_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Roll', 'MathFloatRemap_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Roll', 'MathFloatRemap_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_2.Result', 'MathFloatAdd_19_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_1_1.Result', 'MathFloatAdd_19_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_2.Result', 'MathFloatLerp_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_19_2_1.Result', 'MathFloatLerp_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVisibility.ExecuteContext', 'SetCurveValue_1_1_1_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetTransform.ExecuteContext', 'RigUnit_SetTransform_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12_1.FloatValue', 'MathTransformLerp_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12_1.FloatValue', 'MathTransformLerp_1_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathTransformLerp_1_1.Result', 'RigUnit_SetTransform_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathTransformLerp_1.Result', 'RigUnit_SetTransform.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetTransform_3.Transform', 'MathTransformLerp_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetTransform_3.Transform', 'MathTransformLerp_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent_1.Transform', 'MathTransformLerp_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent_1_1.Transform', 'MathTransformLerp_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.ExecuteContext', 'RigUnit_SetTransform.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'Clamp_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_18.Result', 'SetCurveValue_22_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'Clamp_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_19.Result', 'SetCurveValue_22_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_19.Result', 'SetCurveValue_22_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'SetCurveValue_22_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_13.Result', 'SetCurveValue_22.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_13.Result', 'SetCurveValue_23.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'SetCurveValue_23_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_106.FloatValue', 'MathTransformLerp_2.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent.Transform', 'MathTransformLerp_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetTransform_2.Transform', 'MathTransformLerp_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent.Transform', 'SetTransform.Value')
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3', True)
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3_1', True)
	blueprint.set_preview_mesh(unreal.load_object(name='/Game/'+ch_folder+'/'+ch_name+'.'+ch_name, outer=None))
create_control_rig('Characters/Miguel/Face', 'Miguel_head_MH_VRND')
