import unreal
def create_control_rig(ch_folder,ch_name):

	unreal.load_module('ControlRigDeveloper')
	factory = unreal.ControlRigBlueprintFactory
	blueprint = factory.create_new_control_rig_asset(desired_package_path = '/Game/'+ch_folder+'/'+ch_name+'_CtrlRig')
	library = blueprint.get_local_function_library()
	library_controller = blueprint.get_controller(library)
	hierarchy = blueprint.hierarchy
	hierarchy_controller = hierarchy.get_controller()
	hierarchy_controller.add_curve('CTRL_expressions_browDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browLateralR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_browRaiseOuterR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_earUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeBlinkR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLidPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeWidenR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeSquintInnerR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeCheekRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeFaceScrunchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeUpperLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeRelaxR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLowerLidDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookDownR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookLeftR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightL', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeLookRightR', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyePupilNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyeParallelLookDirection', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesUpOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_eyelashesDownOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleL', 1.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperL', 1.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseWrinkleUpperR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateL', 1.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilDilateR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNostrilCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_noseNasolabialDeepenR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekSuckR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCheekBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsBlowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthRight', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRaiseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStretchLipsCloseR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthDimpleR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDepressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthPressDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPurseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTowardsDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthFunnelDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTogetherDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipBiteR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsTightenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthSharpCornerPullR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyUOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDC', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDINR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthStickyDOUTR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyLPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsStickyRPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPushDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsPullDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThinDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLipsThickDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerSharpenDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerRounderDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipTowardsTeethR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthUpperLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollInR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthLowerLipRollOutR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerUpR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerDownR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerWideR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_mouthCornerNarrowR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueOut', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueIn', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueRollRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipLeft', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueTipRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueWide', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tongueNarrow', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_tonguePress', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpen', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawLeft', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawRight', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawFwd', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawBack', -0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawClenchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseDR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinRaiseUR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawChinCompressR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_jawOpenExtreme', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckStretchR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh1', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh2', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh3', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckSwallowPh4', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractL', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckMastoidContractR', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricDown', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckDigastricUp', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatExhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_neckThroatInhale', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethFwdD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_teethBackD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_skullUnified', 0.000000)
	hierarchy_controller.add_curve('CTRL_rigLogic_OffOn', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_L', 0.200000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_L', 0.200000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsDown_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_L', 0.300000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_L', 0.300000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_browsLateral_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_browsRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_L', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseInner_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseOuter_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_cheekRaiseUpper_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_L', 1.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_L', 1.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_noseWrinkler_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm3_smile_R', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm3_color_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm3_normal_head_wm13_lips_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_mouthStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_UR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DL', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_purse_DR', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_jawOpen', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_jawOpen', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_cm1_color_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_wm1_normal_head_wm1_chinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_L', 0.000000)
	hierarchy_controller.add_curve('head_cm2_color_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_wm2_normal_head_wm2_neckStretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_down_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_lateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raiseOuter_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__brow_raise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Bdown_Blateral__browLower_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown__browInnerRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__BraiseIn_Bdown_Blateral_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Ewiden_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_Eblink_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_INR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Braise_ElookDown_OUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ear_up_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_faceScrunch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__EcheekRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkle_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_wrinkleFull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsDilate_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nostrilsCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__nose_nasolabialDeepener_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_suck_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__cheek_blow_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Cblow_MlipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBlow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_up', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_down', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRaise_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipDepress_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerPull_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_stretch_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MstretchLipsClose_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_dimple_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_press_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_funnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards__pucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel__oh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Jopen__puckerJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Jopen__ohJawOpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MlowerLipDepress_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_MupperLipRaise_MlowerLipDepress__funnelWide_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpress_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlipsTogether_Mpress_Jopen__mouthSuck_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerDepress_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_NSwrinkle_McornerDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsBite_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipBite_MupperLipBite_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards__cornerPullPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mpurse_Mtowards_Mfunnel__cornerPullOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MsharpCornerPull_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_UOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DC', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DINR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_sticky_DOUTR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_L_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsSticky_R_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPush_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsPull_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThin_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lipsThick_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerSharpen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornerRounder_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_EcheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JlowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_MupperLipRaise_MlowerLipDepress__ee_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MsharpCornerPull_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSdepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mtighten__puckerTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mfunnel_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mfunnel_Mtowards_Mtighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mpurse_Mtowards_Mfunnel_Mtighten__ohTighten_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards__mouthStretchPucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mpurse_Mtowards_Mfunnel__mouthStretchOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards__dimplePucker_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mfunnel_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mfunnel_Mtowards_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mdimple_Mpurse_Mtowards_Mfunnel__dimpleOh_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_Mdimple_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_Mdimple_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_NSwrinkle_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Mstretch_MlowerLipDepress_MupperLipRaise_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__McornerPull_Mstretch_MupperLipRaise_MlowerLipDepress_JopenExtreme_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipTowardsTeeth_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftLeft', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipShiftRight', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_upperLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollIn_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_lowerLipRollOut_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersUp_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersDown_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersWide_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__mouth_cornersNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_open', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_left', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_right', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_fwd', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_back', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_Jopen_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jleft_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_UR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DL', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__Jright_MlipsTogether_Jopen_DR', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_clench_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_lowerChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_JupperChinRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_MupperLipRaise_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__JlowerChinRaise_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_chinCompress_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__jaw_openExtreme_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_stretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__NKstretch_Mstretch_Jopen_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph1', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph2', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph3', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_swallow_ph4', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_L', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_mastoidContract_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricDown', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_digastricUp', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatExhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__neck_throatInhale', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_fwd_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_back_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideLeft_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_sideRight_cor', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__skull_unified', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_wide', 0.000000)
	hierarchy_controller.add_curve('teeth_lod0_mesh__tongue_narrow', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilWide_L', 0.000000)
	hierarchy_controller.add_curve('eyeLeft_lod0_mesh__eye_pupilNarrow_L', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilWide_R', 0.000000)
	hierarchy_controller.add_curve('eyeRight_lod0_mesh__eye_pupilNarrow_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__body_neckFemaleAverage_cor', 0.000000)
	hierarchy_controller.add_curve('Default', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookInLeft', -0.000000)
	hierarchy_controller.add_curve('EyeLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeWideLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeLookOutRight', -0.000000)
	hierarchy_controller.add_curve('EyeLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeWideRight', -0.000000)
	hierarchy_controller.add_curve('JawForward', -0.000000)
	hierarchy_controller.add_curve('JawLeft', -0.000000)
	hierarchy_controller.add_curve('JawRight', 0.000000)
	hierarchy_controller.add_curve('JawOpen', 0.000000)
	hierarchy_controller.add_curve('MouthClose', 0.000000)
	hierarchy_controller.add_curve('MouthFunnel', 0.000000)
	hierarchy_controller.add_curve('MouthPucker', 0.000000)
	hierarchy_controller.add_curve('MouthLeft', 0.000000)
	hierarchy_controller.add_curve('MouthRight', -0.000000)
	hierarchy_controller.add_curve('MouthSmileLeft', 0.000000)
	hierarchy_controller.add_curve('MouthSmileRight', 0.000000)
	hierarchy_controller.add_curve('MouthFrownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthFrownRight', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleLeft', 0.000000)
	hierarchy_controller.add_curve('MouthDimpleRight', 0.000000)
	hierarchy_controller.add_curve('MouthStretchLeft', 0.000000)
	hierarchy_controller.add_curve('MouthStretchRight', 0.000000)
	hierarchy_controller.add_curve('MouthRollLower', 0.000000)
	hierarchy_controller.add_curve('MouthRollUpper', 0.000000)
	hierarchy_controller.add_curve('MouthShrugLower', 0.000000)
	hierarchy_controller.add_curve('MouthShrugUpper', 0.000000)
	hierarchy_controller.add_curve('MouthPressLeft', 0.000000)
	hierarchy_controller.add_curve('MouthPressRight', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownLeft', 0.000000)
	hierarchy_controller.add_curve('MouthLowerDownRight', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpLeft', 0.000000)
	hierarchy_controller.add_curve('MouthUpperUpRight', 0.000000)
	hierarchy_controller.add_curve('BrowDownLeft', 0.000000)
	hierarchy_controller.add_curve('BrowDownRight', 0.000000)
	hierarchy_controller.add_curve('BrowInnerUp', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpLeft', 0.000000)
	hierarchy_controller.add_curve('BrowOuterUpRight', 0.000000)
	hierarchy_controller.add_curve('CheekPuff', 0.000000)
	hierarchy_controller.add_curve('CheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('CheekSquintRight', 0.000000)
	hierarchy_controller.add_curve('NoseSneerLeft', 1.000000)
	hierarchy_controller.add_curve('NoseSneerRight', 0.000000)
	hierarchy_controller.add_curve('TongueOut', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_INL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_OUTL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_relax_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_R', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnUp_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnDown_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_turnRight_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltLeft_D', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_U', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_M', 0.000000)
	hierarchy_controller.add_curve('head_lod0_mesh__head_tiltRight_D', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_blink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElidPress_Eblink_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_widen_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_squintInner_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_cheekRaise_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EsquintInner_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EfaceScrunch_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_upperLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidUp_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lowerLidDown_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookUp_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookDown_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__eye_lookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_R', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookUp_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookLeft_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_ElookRight_Eblink_L', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__ElookDown_Ewiden_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnUpD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnDownD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTurnRightD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltLeftD', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightU', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightM', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_headTiltRightD', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__EcheekRaise_EsquintInner_L', 0.000000)
	hierarchy_controller.add_curve('CTRL_expressions_lookAtSwitch', 0.000000)
	hierarchy_controller.add_curve('blendParent1', 0.000000)
	hierarchy_controller.add_curve('HeadYaw', 0.000000)
	hierarchy_controller.add_curve('HeadPitch', 0.000000)
	hierarchy_controller.add_curve('HeadRoll', 0.000000)
	hierarchy_controller.add_curve('LeftEyeYaw', 0.000000)
	hierarchy_controller.add_curve('LeftEyePitch', 0.000000)
	hierarchy_controller.add_curve('LeftEyeRoll', 0.000000)
	hierarchy_controller.add_curve('RightEyeYaw', 0.000000)
	hierarchy_controller.add_curve('RightEyePitch', 0.000000)
	hierarchy_controller.add_curve('RightEyeRoll', 0.000000)
	hierarchy_controller.add_curve('Pose_0', 0.000000)
	hierarchy_controller.add_curve('Pose_1', 0.000000)
	hierarchy_controller.add_curve('Pose_2', 0.000000)
	hierarchy_controller.add_curve('Pose_3', 0.000000)
	hierarchy_controller.add_curve('Pose_4', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownLeft', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintLeft', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookDownRight', -0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookInRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookOutRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkLookUpRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkSquintRight', 0.000000)
	hierarchy_controller.add_curve('EyeBlinkCheekSquintRight', 0.000000)
	control_settings_facial_board = unreal.RigControlSettings()
	control_settings_facial_board.animation_type = unreal.RigControlAnimationType.PROXY_CONTROL
	control_settings_facial_board.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_facial_board.display_name = 'None'
	control_settings_facial_board.draw_limits = True
	control_settings_facial_board.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_facial_board.shape_name = 'RoundedSquare_Thin'
	control_settings_facial_board.shape_visible = True
	control_settings_facial_board.is_transient_control = False
	control_settings_facial_board.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_facial_board.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_facial_board.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('Facial_Board', '', control_settings_facial_board, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,20.000000],rotation=[0.000000,0.000000,90.000035],scale=[2.500000,4.000000,1.000000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[30.929428,0.000000,146.966346],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_browGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_brow_raiseIn_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[0.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_brow_raise_in = unreal.RigControlSettings()
	control_settings_ctrl_c_brow_raise_in.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_brow_raise_in.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_brow_raise_in.display_name = 'None'
	control_settings_ctrl_c_brow_raise_in.draw_limits = True
	control_settings_ctrl_c_brow_raise_in.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_brow_raise_in.shape_name = 'Default'
	control_settings_ctrl_c_brow_raise_in.shape_visible = True
	control_settings_ctrl_c_brow_raise_in.is_transient_control = False
	control_settings_ctrl_c_brow_raise_in.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_brow_raise_in.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_brow_raise_in.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_brow_raise_in.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_brow_raiseIn', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_brow_raiseIn_GRP'), control_settings_ctrl_c_brow_raise_in, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_brow_raiseIn'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_down.display_name = 'None'
	control_settings_ctrl_l_brow_down.draw_limits = True
	control_settings_ctrl_l_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_down.shape_name = 'Default'
	control_settings_ctrl_l_brow_down.shape_visible = True
	control_settings_ctrl_l_brow_down.is_transient_control = False
	control_settings_ctrl_l_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_down_GRP'), control_settings_ctrl_l_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_l_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_brow_raise_out.display_name = 'None'
	control_settings_ctrl_l_brow_raise_out.draw_limits = True
	control_settings_ctrl_l_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_l_brow_raise_out.shape_visible = True
	control_settings_ctrl_l_brow_raise_out.is_transient_control = False
	control_settings_ctrl_l_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_brow_raiseOut_GRP'), control_settings_ctrl_l_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_down_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-3.000000,0.000000,-42.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_down = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_down.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_down.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_down.display_name = 'None'
	control_settings_ctrl_r_brow_down.draw_limits = True
	control_settings_ctrl_r_brow_down.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_down.shape_name = 'Default'
	control_settings_ctrl_r_brow_down.shape_visible = True
	control_settings_ctrl_r_brow_down.is_transient_control = False
	control_settings_ctrl_r_brow_down.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_down.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_down.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_down.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_down', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_down_GRP'), control_settings_ctrl_r_brow_down, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,64.002396,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[-10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_down'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_brow_raiseOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_browGUI'), unreal.Transform(location=[-6.000000,0.000000,-43.184608],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_brow_raise_out = unreal.RigControlSettings()
	control_settings_ctrl_r_brow_raise_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_brow_raise_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_brow_raise_out.display_name = 'None'
	control_settings_ctrl_r_brow_raise_out.draw_limits = True
	control_settings_ctrl_r_brow_raise_out.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_brow_raise_out.shape_name = 'Default'
	control_settings_ctrl_r_brow_raise_out.shape_visible = True
	control_settings_ctrl_r_brow_raise_out.is_transient_control = False
	control_settings_ctrl_r_brow_raise_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_brow_raise_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_brow_raise_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_brow_raise_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_brow_raiseOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_brow_raiseOut_GRP'), control_settings_ctrl_r_brow_raise_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.Transform(location=[0.000000,0.000000,25.981400],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_brow_raiseOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_eyeGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[0.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_c_eye = unreal.RigControlSettings()
	control_settings_ctrl_c_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_eye.display_name = 'None'
	control_settings_ctrl_c_eye.draw_limits = True
	control_settings_ctrl_c_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_eye.shape_name = 'Default'
	control_settings_ctrl_c_eye.shape_visible = True
	control_settings_ctrl_c_eye.is_transient_control = False
	control_settings_ctrl_c_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_eye_GRP'), control_settings_ctrl_c_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_r_eye = unreal.RigControlSettings()
	control_settings_ctrl_r_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_r_eye.display_name = 'None'
	control_settings_ctrl_r_eye.draw_limits = True
	control_settings_ctrl_r_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye.shape_name = 'Default'
	control_settings_ctrl_r_eye.shape_visible = True
	control_settings_ctrl_r_eye.is_transient_control = False
	control_settings_ctrl_r_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_r_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_r_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_R_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_GRP'), control_settings_ctrl_r_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[5.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[1.500000,1.500000,1.500000]), False)
	control_settings_ctrl_l_eye = unreal.RigControlSettings()
	control_settings_ctrl_l_eye.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_l_eye.display_name = 'None'
	control_settings_ctrl_l_eye.draw_limits = True
	control_settings_ctrl_l_eye.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye.shape_name = 'Default'
	control_settings_ctrl_l_eye.shape_visible = True
	control_settings_ctrl_l_eye.is_transient_control = False
	control_settings_ctrl_l_eye.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_l_eye.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_l_eye.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_L_eye', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_GRP'), control_settings_ctrl_l_eye, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_r_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_blink.display_name = 'None'
	control_settings_ctrl_r_eye_blink.draw_limits = True
	control_settings_ctrl_r_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_blink.shape_name = 'Default'
	control_settings_ctrl_r_eye_blink.shape_visible = True
	control_settings_ctrl_r_eye_blink.is_transient_control = False
	control_settings_ctrl_r_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_r_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_blink_GRP'), control_settings_ctrl_r_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999931,180.000000,89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_blink_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[8.000000,0.000000,28.815392],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_l_eye_blink = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_blink.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_blink.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_blink.display_name = 'None'
	control_settings_ctrl_l_eye_blink.draw_limits = True
	control_settings_ctrl_l_eye_blink.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_blink.shape_name = 'Default'
	control_settings_ctrl_l_eye_blink.shape_visible = True
	control_settings_ctrl_l_eye_blink.is_transient_control = False
	control_settings_ctrl_l_eye_blink.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_blink.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_l_eye_blink.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_blink.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_blink', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_blink_GRP'), control_settings_ctrl_l_eye_blink, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.030000,0.030000,0.030000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000095,180.000000,90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_blink'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_r_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_r_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_r_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_r_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_r_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_cheekRaise_GRP'), control_settings_ctrl_r_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_cheekRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[10.000000,0.000000,27.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_cheek_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_cheek_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_cheek_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_cheek_raise.display_name = 'None'
	control_settings_ctrl_l_eye_cheek_raise.draw_limits = True
	control_settings_ctrl_l_eye_cheek_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_cheek_raise.shape_name = 'Default'
	control_settings_ctrl_l_eye_cheek_raise.shape_visible = True
	control_settings_ctrl_l_eye_cheek_raise.is_transient_control = False
	control_settings_ctrl_l_eye_cheek_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_cheek_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_cheek_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_cheek_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_cheekRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_cheekRaise_GRP'), control_settings_ctrl_l_eye_cheek_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_cheekRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[-6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_r_eye_squint_inner.draw_limits = True
	control_settings_ctrl_r_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_r_eye_squint_inner.shape_visible = True
	control_settings_ctrl_r_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_r_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eye_squintInner_GRP'), control_settings_ctrl_r_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-59.999820,-0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eye_squintInner_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeGUI'), unreal.Transform(location=[6.000000,0.000000,25.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_eye_squint_inner = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_squint_inner.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_squint_inner.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_eye_squint_inner.display_name = 'None'
	control_settings_ctrl_l_eye_squint_inner.draw_limits = True
	control_settings_ctrl_l_eye_squint_inner.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_squint_inner.shape_name = 'Default'
	control_settings_ctrl_l_eye_squint_inner.shape_visible = True
	control_settings_ctrl_l_eye_squint_inner.is_transient_control = False
	control_settings_ctrl_l_eye_squint_inner.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_eye_squint_inner.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_eye_squint_inner.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_eye_squint_inner.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_eye_squintInner', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eye_squintInner_GRP'), control_settings_ctrl_l_eye_squint_inner, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[59.999820,0.000000,-89.999814],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eye_squintInner'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_noseGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_R_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[-2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_nose = unreal.RigControlSettings()
	control_settings_ctrl_r_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_nose.display_name = 'None'
	control_settings_ctrl_r_nose.draw_limits = True
	control_settings_ctrl_r_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_nose.shape_name = 'Default'
	control_settings_ctrl_r_nose.shape_visible = True
	control_settings_ctrl_r_nose.is_transient_control = False
	control_settings_ctrl_r_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_nose_GRP'), control_settings_ctrl_r_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_nose_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_noseGUI'), unreal.Transform(location=[2.000000,0.000000,22.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_nose = unreal.RigControlSettings()
	control_settings_ctrl_l_nose.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_nose.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_nose.display_name = 'None'
	control_settings_ctrl_l_nose.draw_limits = True
	control_settings_ctrl_l_nose.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_nose.shape_name = 'Default'
	control_settings_ctrl_l_nose.shape_visible = True
	control_settings_ctrl_l_nose.is_transient_control = False
	control_settings_ctrl_l_nose.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_nose.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_nose.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_nose.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_nose', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_nose_GRP'), control_settings_ctrl_l_nose, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000026,0.000000,-89.999965],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_nose'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_mouthGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,18.815392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_u = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_u.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_u.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_u.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_u.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseU_GRP'), control_settings_ctrl_c_jaw_chin_raise_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_r_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_r_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_r_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_r_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_upperLipRaise_GRP'), control_settings_ctrl_r_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[9.999931,0.000000,-89.999990],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_upperLipRaise_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[2.000000,0.000000,18.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_upper_lip_raise = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_upper_lip_raise.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_upper_lip_raise.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_upper_lip_raise.display_name = 'None'
	control_settings_ctrl_l_mouth_upper_lip_raise.draw_limits = True
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_name = 'Default'
	control_settings_ctrl_l_mouth_upper_lip_raise.shape_visible = True
	control_settings_ctrl_l_mouth_upper_lip_raise.is_transient_control = False
	control_settings_ctrl_l_mouth_upper_lip_raise.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_upper_lip_raise.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_upper_lip_raise.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_upperLipRaise', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_upperLipRaise_GRP'), control_settings_ctrl_l_mouth_upper_lip_raise, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-10.000095,0.000000,-90.000004],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_upperLipRaise'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_r_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_r_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerPull_GRP'), control_settings_ctrl_r_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[29.999888,0.000000,-90.000020],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerPull_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.000000,0.000000,17.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_pull = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_pull.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_pull.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_pull.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_pull.draw_limits = True
	control_settings_ctrl_l_mouth_corner_pull.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_pull.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_pull.shape_visible = True
	control_settings_ctrl_l_mouth_corner_pull.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_pull.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_pull.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_pull.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_pull.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerPull', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerPull_GRP'), control_settings_ctrl_l_mouth_corner_pull, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-30.000068,0.000000,-90.000068],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerPull'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_dimple.display_name = 'None'
	control_settings_ctrl_r_mouth_dimple.draw_limits = True
	control_settings_ctrl_r_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_r_mouth_dimple.shape_visible = True
	control_settings_ctrl_r_mouth_dimple.is_transient_control = False
	control_settings_ctrl_r_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_dimple_GRP'), control_settings_ctrl_r_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[80.000126,-0.000000,-90.000271],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_dimple_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[6.000000,0.000000,16.315392],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_dimple = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_dimple.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_dimple.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_dimple.display_name = 'None'
	control_settings_ctrl_l_mouth_dimple.draw_limits = True
	control_settings_ctrl_l_mouth_dimple.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_dimple.shape_name = 'Default'
	control_settings_ctrl_l_mouth_dimple.shape_visible = True
	control_settings_ctrl_l_mouth_dimple.is_transient_control = False
	control_settings_ctrl_l_mouth_dimple.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_dimple.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_dimple.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_dimple.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_dimple', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_dimple_GRP'), control_settings_ctrl_l_mouth_dimple, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-80.000241,0.000000,-90.000156],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_dimple'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_r_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_r_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_cornerDepress_GRP'), control_settings_ctrl_r_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[50.000133,180.000000,89.999994],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_cornerDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[4.500000,0.000000,15.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_corner_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_corner_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_corner_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_corner_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_corner_depress.draw_limits = True
	control_settings_ctrl_l_mouth_corner_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_corner_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_corner_depress.shape_visible = True
	control_settings_ctrl_l_mouth_corner_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_corner_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_corner_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_corner_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_corner_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_cornerDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_cornerDepress_GRP'), control_settings_ctrl_l_mouth_corner_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-49.999783,180.000000,90.000009],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_cornerDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_stretch.display_name = 'None'
	control_settings_ctrl_r_mouth_stretch.draw_limits = True
	control_settings_ctrl_r_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_r_mouth_stretch.shape_visible = True
	control_settings_ctrl_r_mouth_stretch.is_transient_control = False
	control_settings_ctrl_r_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_stretch_GRP'), control_settings_ctrl_r_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[20.000196,180.000000,89.999995],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_stretch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[3.000000,0.000000,14.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_stretch = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_stretch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_stretch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_stretch.display_name = 'None'
	control_settings_ctrl_l_mouth_stretch.draw_limits = True
	control_settings_ctrl_l_mouth_stretch.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_stretch.shape_name = 'Default'
	control_settings_ctrl_l_mouth_stretch.shape_visible = True
	control_settings_ctrl_l_mouth_stretch.is_transient_control = False
	control_settings_ctrl_l_mouth_stretch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_stretch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_stretch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_stretch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_stretch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_stretch_GRP'), control_settings_ctrl_l_mouth_stretch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-19.999856,180.000000,89.999935],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_stretch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_r_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_r_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_r_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_r_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_lowerLipDepress_GRP'), control_settings_ctrl_r_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000259,180.000000,90.000018],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_lowerLipDepress_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[1.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_lower_lip_depress = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_lower_lip_depress.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_lower_lip_depress.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_lower_lip_depress.display_name = 'None'
	control_settings_ctrl_l_mouth_lower_lip_depress.draw_limits = True
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_name = 'Default'
	control_settings_ctrl_l_mouth_lower_lip_depress.shape_visible = True
	control_settings_ctrl_l_mouth_lower_lip_depress.is_transient_control = False
	control_settings_ctrl_l_mouth_lower_lip_depress.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_lower_lip_depress.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_lower_lip_depress.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_lowerLipDepress', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_lowerLipDepress_GRP'), control_settings_ctrl_l_mouth_lower_lip_depress, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999767,180.000000,89.999975],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_lowerLipDepress'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_ChinRaiseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,10.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_chin_raise_d = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_chin_raise_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_chin_raise_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_chin_raise_d.display_name = 'None'
	control_settings_ctrl_c_jaw_chin_raise_d.draw_limits = True
	control_settings_ctrl_c_jaw_chin_raise_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.shape_name = 'Default'
	control_settings_ctrl_c_jaw_chin_raise_d.shape_visible = True
	control_settings_ctrl_c_jaw_chin_raise_d.is_transient_control = False
	control_settings_ctrl_c_jaw_chin_raise_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_chin_raise_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_chin_raise_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_ChinRaiseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_ChinRaiseD_GRP'), control_settings_ctrl_c_jaw_chin_raise_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_ChinRaiseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_suckBlow_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[-10.000000,0.000000,13.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_suck_blow = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_suck_blow.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_suck_blow.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_suck_blow.display_name = 'None'
	control_settings_ctrl_c_mouth_suck_blow.draw_limits = True
	control_settings_ctrl_c_mouth_suck_blow.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_suck_blow.shape_name = 'Default'
	control_settings_ctrl_c_mouth_suck_blow.shape_visible = True
	control_settings_ctrl_c_mouth_suck_blow.is_transient_control = False
	control_settings_ctrl_c_mouth_suck_blow.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_suck_blow.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_suck_blow.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_suck_blow.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_suckBlow', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_suckBlow_GRP'), control_settings_ctrl_c_mouth_suck_blow, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_suckBlow'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_mouthGUI'), unreal.Transform(location=[0.000000,0.000000,16.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth.display_name = 'None'
	control_settings_ctrl_c_mouth.draw_limits = True
	control_settings_ctrl_c_mouth.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth.shape_name = 'Default'
	control_settings_ctrl_c_mouth.shape_visible = True
	control_settings_ctrl_c_mouth.is_transient_control = False
	control_settings_ctrl_c_mouth.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_mouth.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_GRP'), control_settings_ctrl_c_mouth, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-90.000000,-165.963757,75.963757],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_jawGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_jaw_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[0.000000,0.000000,7.000000],rotation=[0.000000,0.000000,0.000000],scale=[2.000000,4.000000,2.000000]), False)
	control_settings_ctrl_c_jaw = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_jaw.display_name = 'None'
	control_settings_ctrl_c_jaw.draw_limits = True
	control_settings_ctrl_c_jaw.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw.shape_name = 'Default'
	control_settings_ctrl_c_jaw.shape_visible = True
	control_settings_ctrl_c_jaw.is_transient_control = False
	control_settings_ctrl_c_jaw.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000))
	control_settings_ctrl_c_jaw.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_jaw.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_jaw', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_GRP'), control_settings_ctrl_c_jaw, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.040000,0.020000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, 0.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,-180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollU_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,8.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_u = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_u.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_u.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_u.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_u.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_u.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_u.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_u.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_u.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_u.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_u.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollU', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollU_GRP'), control_settings_ctrl_c_mouth_lips_roll_u, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollU'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_lipsRollD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-10.000000,0.000000,3.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_lips_roll_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_lips_roll_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_lips_roll_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_lips_roll_d.display_name = 'None'
	control_settings_ctrl_c_mouth_lips_roll_d.draw_limits = True
	control_settings_ctrl_c_mouth_lips_roll_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_lips_roll_d.shape_visible = True
	control_settings_ctrl_c_mouth_lips_roll_d.is_transient_control = False
	control_settings_ctrl_c_mouth_lips_roll_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_lips_roll_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_lips_roll_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_lipsRollD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_lipsRollD_GRP'), control_settings_ctrl_c_mouth_lips_roll_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_lipsRollD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_purseD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-7.500000,0.000000,4.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_purse_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_purse_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_purse_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_purse_d.display_name = 'None'
	control_settings_ctrl_c_mouth_purse_d.draw_limits = True
	control_settings_ctrl_c_mouth_purse_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_purse_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_purse_d.shape_visible = True
	control_settings_ctrl_c_mouth_purse_d.is_transient_control = False
	control_settings_ctrl_c_mouth_purse_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_purse_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_purse_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_purse_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_purseD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_purseD_GRP'), control_settings_ctrl_c_mouth_purse_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_purseD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_funnelD_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[-5.000000,0.000000,4.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_funnel_d = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_funnel_d.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_funnel_d.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_funnel_d.display_name = 'None'
	control_settings_ctrl_c_mouth_funnel_d.draw_limits = True
	control_settings_ctrl_c_mouth_funnel_d.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_funnel_d.shape_name = 'Default'
	control_settings_ctrl_c_mouth_funnel_d.shape_visible = True
	control_settings_ctrl_c_mouth_funnel_d.is_transient_control = False
	control_settings_ctrl_c_mouth_funnel_d.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_funnel_d.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_funnel_d.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_funnel_d.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_funnelD', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_funnelD_GRP'), control_settings_ctrl_c_mouth_funnel_d, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_funnelD'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_jaw_fwdBack_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[3.500000,0.000000,5.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_c_jaw_fwd_back = unreal.RigControlSettings()
	control_settings_ctrl_c_jaw_fwd_back.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_jaw_fwd_back.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_jaw_fwd_back.display_name = 'None'
	control_settings_ctrl_c_jaw_fwd_back.draw_limits = True
	control_settings_ctrl_c_jaw_fwd_back.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_jaw_fwd_back.shape_name = 'Default'
	control_settings_ctrl_c_jaw_fwd_back.shape_visible = True
	control_settings_ctrl_c_jaw_fwd_back.is_transient_control = False
	control_settings_ctrl_c_jaw_fwd_back.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_jaw_fwd_back.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_jaw_fwd_back.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_jaw_fwd_back.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_jaw_fwdBack', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_jaw_fwdBack_GRP'), control_settings_ctrl_c_jaw_fwd_back, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-0.000324,-0.000000,-90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_jaw_fwdBack'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_mouth_close_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[5.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,3.000000,3.000000]), False)
	control_settings_ctrl_c_mouth_close = unreal.RigControlSettings()
	control_settings_ctrl_c_mouth_close.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_mouth_close.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_mouth_close.display_name = 'None'
	control_settings_ctrl_c_mouth_close.draw_limits = True
	control_settings_ctrl_c_mouth_close.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_mouth_close.shape_name = 'Default'
	control_settings_ctrl_c_mouth_close.shape_visible = True
	control_settings_ctrl_c_mouth_close.is_transient_control = False
	control_settings_ctrl_c_mouth_close.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_mouth_close.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_mouth_close.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_mouth_close.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_mouth_close', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_mouth_close_GRP'), control_settings_ctrl_c_mouth_close, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000324,180.000000,90.000035],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_mouth_close'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[7.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_r_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_r_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_r_mouth_press.display_name = 'None'
	control_settings_ctrl_r_mouth_press.draw_limits = True
	control_settings_ctrl_r_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_r_mouth_press.shape_name = 'Default'
	control_settings_ctrl_r_mouth_press.shape_visible = True
	control_settings_ctrl_r_mouth_press.is_transient_control = False
	control_settings_ctrl_r_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_r_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_r_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_r_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_R_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_mouth_press_GRP'), control_settings_ctrl_r_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[-9.999603,180.000000,89.999961],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_mouth_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_jawGUI'), unreal.Transform(location=[9.500000,0.000000,6.000000],rotation=[0.000000,0.000000,0.000000],scale=[3.000000,2.000000,3.000000]), False)
	control_settings_ctrl_l_mouth_press = unreal.RigControlSettings()
	control_settings_ctrl_l_mouth_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_mouth_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_l_mouth_press.display_name = 'None'
	control_settings_ctrl_l_mouth_press.draw_limits = True
	control_settings_ctrl_l_mouth_press.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_l_mouth_press.shape_name = 'Default'
	control_settings_ctrl_l_mouth_press.shape_visible = True
	control_settings_ctrl_l_mouth_press.is_transient_control = False
	control_settings_ctrl_l_mouth_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_l_mouth_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_l_mouth_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_l_mouth_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_L_mouth_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_mouth_press_GRP'), control_settings_ctrl_l_mouth_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,0.000000],scale=[0.020000,0.030000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[10.000423,180.000000,90.000033],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_mouth_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_tongueGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[1.500000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_C_tongue_press_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[5.000000,0.000000,9.000000],rotation=[-0.000115,90.000115,-90.000229],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_press = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_press.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_press.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_press.display_name = 'None'
	control_settings_ctrl_c_tongue_press.draw_limits = True
	control_settings_ctrl_c_tongue_press.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_press.shape_name = 'Default'
	control_settings_ctrl_c_tongue_press.shape_visible = True
	control_settings_ctrl_c_tongue_press.is_transient_control = False
	control_settings_ctrl_c_tongue_press.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_press.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_c_tongue_press.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_press.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_press', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_press_GRP'), control_settings_ctrl_c_tongue_press, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_press'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_roll_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[6.500000,0.000000,9.000000],rotation=[0.000081,-0.000081,-89.999873],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_roll = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_roll.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_roll.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue_roll.display_name = 'None'
	control_settings_ctrl_c_tongue_roll.draw_limits = True
	control_settings_ctrl_c_tongue_roll.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_roll.shape_name = 'Default'
	control_settings_ctrl_c_tongue_roll.shape_visible = True
	control_settings_ctrl_c_tongue_roll.is_transient_control = False
	control_settings_ctrl_c_tongue_roll.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_roll.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue_roll.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue_roll.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue_roll', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_roll_GRP'), control_settings_ctrl_c_tongue_roll, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_roll'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_tip_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[9.000000,0.000000,9.000000],rotation=[-0.000081,-0.000081,-90.000035],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_tip = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_tip.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_tip.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue_tip.display_name = 'None'
	control_settings_ctrl_c_tongue_tip.draw_limits = True
	control_settings_ctrl_c_tongue_tip.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_tip.shape_name = 'Default'
	control_settings_ctrl_c_tongue_tip.shape_visible = True
	control_settings_ctrl_c_tongue_tip.is_transient_control = False
	control_settings_ctrl_c_tongue_tip.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_tip.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue_tip.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue_tip.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue_tip', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_tip_GRP'), control_settings_ctrl_c_tongue_tip, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_tip'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[3.500000,0.000000,9.000000],rotation=[-0.000243,-0.000081,-90.000035],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue.control_type = unreal.RigControlType.VECTOR2D
	control_settings_ctrl_c_tongue.display_name = 'None'
	control_settings_ctrl_c_tongue.draw_limits = True
	control_settings_ctrl_c_tongue.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue.shape_name = 'Default'
	control_settings_ctrl_c_tongue.shape_visible = True
	control_settings_ctrl_c_tongue.is_transient_control = False
	control_settings_ctrl_c_tongue.limit_enabled = [unreal.RigControlLimitEnabled(True, True), unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue.minimum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000))
	control_settings_ctrl_c_tongue.maximum_value = unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000))
	control_settings_ctrl_c_tongue.primary_axis = unreal.RigControlAxis.Z
	hierarchy_controller.add_control('CTRL_C_tongue', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_GRP'), control_settings_ctrl_c_tongue, unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(-1.000000, -1.000000)), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(1.000000, 1.000000)), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue'), unreal.RigHierarchy.make_control_value_from_vector2d(unreal.Vector2D(0.000000, 0.000000)), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_narrowWide_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[5.000000,0.000000,10.500000],rotation=[-0.000081,89.999873,179.999919],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_narrow_wide = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_narrow_wide.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_narrow_wide.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_narrow_wide.display_name = 'None'
	control_settings_ctrl_c_tongue_narrow_wide.draw_limits = True
	control_settings_ctrl_c_tongue_narrow_wide.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_narrow_wide.shape_name = 'Default'
	control_settings_ctrl_c_tongue_narrow_wide.shape_visible = True
	control_settings_ctrl_c_tongue_narrow_wide.is_transient_control = False
	control_settings_ctrl_c_tongue_narrow_wide.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_narrow_wide.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_tongue_narrow_wide.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_narrow_wide.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_narrowWide', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_narrowWide_GRP'), control_settings_ctrl_c_tongue_narrow_wide, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_narrowWide'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_C_tongue_inOut_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_tongueGUI'), unreal.Transform(location=[2.000000,0.000000,9.000000],rotation=[-0.000057,90.000000,-90.000229],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_tongue_in_out = unreal.RigControlSettings()
	control_settings_ctrl_c_tongue_in_out.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_tongue_in_out.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_c_tongue_in_out.display_name = 'None'
	control_settings_ctrl_c_tongue_in_out.draw_limits = True
	control_settings_ctrl_c_tongue_in_out.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_c_tongue_in_out.shape_name = 'Default'
	control_settings_ctrl_c_tongue_in_out.shape_visible = True
	control_settings_ctrl_c_tongue_in_out.is_transient_control = False
	control_settings_ctrl_c_tongue_in_out.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_c_tongue_in_out.minimum_value = unreal.RigHierarchy.make_control_value_from_float(-1.000000)
	control_settings_ctrl_c_tongue_in_out.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_c_tongue_in_out.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_C_tongue_inOut', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_C_tongue_inOut_GRP'), control_settings_ctrl_c_tongue_in_out, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.040000,0.040000,0.040000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(-1.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_tongue_inOut'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_switchesGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='Facial_Board'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,3.000000,1.000000]), False)
	hierarchy_controller.add_null('CTRL_lookAtSwitch_GRP', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_switchesGUI'), unreal.Transform(location=[8.000000,0.000000,38.000000],rotation=[0.000081,-90.000035,0.000081],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_look_at_switch = unreal.RigControlSettings()
	control_settings_ctrl_look_at_switch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_look_at_switch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_look_at_switch.display_name = 'None'
	control_settings_ctrl_look_at_switch.draw_limits = True
	control_settings_ctrl_look_at_switch.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_look_at_switch.shape_name = 'Default'
	control_settings_ctrl_look_at_switch.shape_visible = True
	control_settings_ctrl_look_at_switch.is_transient_control = False
	control_settings_ctrl_look_at_switch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_look_at_switch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_look_at_switch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_look_at_switch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_lookAtSwitch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_lookAtSwitch_GRP'), control_settings_ctrl_look_at_switch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.100000,0.020000,0.050000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_lookAtSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('GRP_eyeControls', '', unreal.Transform(location=[17.737194,7.487751,140.274658],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_c_eyes_aim = unreal.RigControlSettings()
	control_settings_ctrl_c_eyes_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_c_eyes_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_c_eyes_aim.display_name = 'None'
	control_settings_ctrl_c_eyes_aim.draw_limits = True
	control_settings_ctrl_c_eyes_aim.shape_color = unreal.LinearColor(1.000000, 0.000000, 0.000000, 1.000000)
	control_settings_ctrl_c_eyes_aim.shape_name = 'RoundedSquare_Thick'
	control_settings_ctrl_c_eyes_aim.shape_visible = True
	control_settings_ctrl_c_eyes_aim.is_transient_control = False
	control_settings_ctrl_c_eyes_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_c_eyes_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_c_eyes_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_c_eyes_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_C_eyesAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='GRP_eyeControls'), control_settings_ctrl_c_eyes_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[90.000000,180.000000,-90.000000],scale=[1.200000,0.500000,0.300000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[-17.732119,22.512249,31.120455],rotation=[90.000000,180.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_L_eyeAim_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[-0.013297,0.000000,3.408712],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_l_eye_aim = unreal.RigControlSettings()
	control_settings_ctrl_l_eye_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_l_eye_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_l_eye_aim.display_name = 'None'
	control_settings_ctrl_l_eye_aim.draw_limits = True
	control_settings_ctrl_l_eye_aim.shape_color = unreal.LinearColor(1.000000, 0.964687, 0.000000, 1.000000)
	control_settings_ctrl_l_eye_aim.shape_name = 'Circle_Thick'
	control_settings_ctrl_l_eye_aim.shape_visible = True
	control_settings_ctrl_l_eye_aim.is_transient_control = False
	control_settings_ctrl_l_eye_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_l_eye_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_l_eye_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_l_eye_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_L_eyeAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_L_eyeAim_space'), control_settings_ctrl_l_eye_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[-0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,90.000035],scale=[0.300000,0.300000,0.100000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.Transform(location=[0.006729,0.000000,0.063249],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_L_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[-0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_R_eyeAim_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), unreal.Transform(location=[0.013297,0.000000,-3.408712],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False)
	control_settings_ctrl_r_eye_aim = unreal.RigControlSettings()
	control_settings_ctrl_r_eye_aim.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_r_eye_aim.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_ctrl_r_eye_aim.display_name = 'None'
	control_settings_ctrl_r_eye_aim.draw_limits = True
	control_settings_ctrl_r_eye_aim.shape_color = unreal.LinearColor(1.000000, 0.964687, 0.000000, 1.000000)
	control_settings_ctrl_r_eye_aim.shape_name = 'Circle_Thick'
	control_settings_ctrl_r_eye_aim.shape_visible = True
	control_settings_ctrl_r_eye_aim.is_transient_control = False
	control_settings_ctrl_r_eye_aim.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_ctrl_r_eye_aim.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_r_eye_aim.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_ctrl_r_eye_aim.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('CTRL_R_eyeAim', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_R_eyeAim_space'), control_settings_ctrl_r_eye_aim, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,-0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,90.000035],scale=[0.300000,0.300000,0.100000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.Transform(location=[-0.006729,0.000000,-0.063249],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_R_eyeAim'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,-0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	control_settings_frm_convergence_gui = unreal.RigControlSettings()
	control_settings_frm_convergence_gui.animation_type = unreal.RigControlAnimationType.PROXY_CONTROL
	control_settings_frm_convergence_gui.control_type = unreal.RigControlType.EULER_TRANSFORM
	control_settings_frm_convergence_gui.display_name = 'None'
	control_settings_frm_convergence_gui.draw_limits = True
	control_settings_frm_convergence_gui.shape_color = unreal.LinearColor(0.000000, 0.000000, 0.000000, 1.000000)
	control_settings_frm_convergence_gui.shape_name = 'convergence_3L'
	control_settings_frm_convergence_gui.shape_visible = True
	control_settings_frm_convergence_gui.is_transient_control = False
	control_settings_frm_convergence_gui.limit_enabled = [unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False), unreal.RigControlLimitEnabled(False, False)]
	control_settings_frm_convergence_gui.minimum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_frm_convergence_gui.maximum_value = unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]))
	control_settings_frm_convergence_gui.primary_axis = unreal.RigControlAxis.X
	hierarchy_controller.add_control('FRM_convergenceGUI', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_C_eyesAim'), control_settings_frm_convergence_gui, unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[-0.000000,-0.000001,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[90.000000,0.000055,-179.999783],scale=[1.000000,1.000000,1.000000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[-4.360413,-0.000001,0.000027],rotation=[0.000000,0.000000,-0.000000],scale=[1.200000,1.200000,1.200000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.RigHierarchy.make_control_value_from_euler_transform(unreal.EulerTransform(location=[-0.000000,-0.000001,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000])), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_null('CTRL_convergenceSwitch_space', unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='FRM_convergenceGUI'), unreal.Transform(location=[-0.440002,0.000000,-1.000010],rotation=[0.000000,-180.000000,-89.999711],scale=[2.000000,2.000000,2.000000]), False)
	control_settings_ctrl_convergence_switch = unreal.RigControlSettings()
	control_settings_ctrl_convergence_switch.animation_type = unreal.RigControlAnimationType.ANIMATION_CONTROL
	control_settings_ctrl_convergence_switch.control_type = unreal.RigControlType.FLOAT
	control_settings_ctrl_convergence_switch.display_name = 'None'
	control_settings_ctrl_convergence_switch.draw_limits = True
	control_settings_ctrl_convergence_switch.shape_color = unreal.LinearColor(1.000000, 1.000000, 0.000000, 0.000000)
	control_settings_ctrl_convergence_switch.shape_name = 'Default'
	control_settings_ctrl_convergence_switch.shape_visible = True
	control_settings_ctrl_convergence_switch.is_transient_control = False
	control_settings_ctrl_convergence_switch.limit_enabled = [unreal.RigControlLimitEnabled(True, True)]
	control_settings_ctrl_convergence_switch.minimum_value = unreal.RigHierarchy.make_control_value_from_float(0.000000)
	control_settings_ctrl_convergence_switch.maximum_value = unreal.RigHierarchy.make_control_value_from_float(1.000000)
	control_settings_ctrl_convergence_switch.primary_axis = unreal.RigControlAxis.Y
	hierarchy_controller.add_control('CTRL_convergenceSwitch', unreal.RigElementKey(type=unreal.RigElementType.NULL, name='CTRL_convergenceSwitch_space'), control_settings_ctrl_convergence_switch, unreal.RigHierarchy.make_control_value_from_float(0.000000))
	hierarchy.set_control_shape_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[0.020000,0.020000,0.020000]), True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.MINIMUM)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(1.000000), unreal.RigControlValueType.MAXIMUM)
	hierarchy.set_control_offset_transform(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.Transform(location=[0.000000,-0.000001,-0.000000],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), True, True)
	hierarchy.set_control_value(unreal.RigElementKey(type=unreal.RigElementType.CONTROL, name='CTRL_convergenceSwitch'), unreal.RigHierarchy.make_control_value_from_float(0.000000), unreal.RigControlValueType.CURRENT)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_INR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_Eblink_OUTR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_INL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_INR', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_OUTL', 0.000000)
	hierarchy_controller.add_curve('cartilage_lod0_mesh__Braise_ElookDown_OUTR', 0.000000)
	hierarchy_controller.add_bone('root', '', unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('pelvis', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='root'), unreal.Transform(location=[-0.000000,2.280866,97.896782],rotation=[86.366893,-90.000000,-90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='pelvis'), unreal.Transform(location=[3.677053,-0.000000,-0.000000],rotation=[-0.000000,14.457322,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_01'), unreal.Transform(location=[6.795057,-0.000000,0.000000],rotation=[0.000000,-3.464470,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_03', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_02'), unreal.Transform(location=[7.238228,0.000000,0.000000],rotation=[-0.000000,-10.946079,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_03'), unreal.Transform(location=[8.603500,-0.004876,0.000000],rotation=[0.000000,-5.866984,0.000450],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_05', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_04'), unreal.Transform(location=[19.439800,0.000000,-0.000000],rotation=[-0.000005,-0.681389,-0.000449],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_01', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[11.887766,-0.000000,0.000000],rotation=[0.000000,23.928404,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('neck_02', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_01'), unreal.Transform(location=[5.110260,0.000000,-0.000000],rotation=[-0.000000,-1.913529,-0.000098],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('head', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_02'), unreal.Transform(location=[4.912971,0.000000,0.000000],rotation=[0.000020,-11.880169,0.000096],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_FacialRoot', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='head'), unreal.Transform(location=[4.539614,-1.292612,-0.000001],rotation=[-90.000000,0.000000,90.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.033159,-9.120307,11.241559],rotation=[0.000000,-0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.111538,-8.632834,11.377698],rotation=[-10.000001,10.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Hair1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.191992,-8.643562,11.391563],rotation=[10.000001,-10.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.024571,-10.632588,10.118773],rotation=[0.000000,0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020072,-12.156291,8.540941],rotation=[0.000000,0.000000,45.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.012764,-13.725125,5.655601],rotation=[0.000000,0.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.006436,-14.409169,1.555831],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Hair6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.012903,-13.366991,-2.992088],rotation=[0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.882738,-8.665192,10.183965],rotation=[-23.999999,24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.988724,-8.702345,10.214046],rotation=[23.999999,-24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.868986,-10.351617,8.818857],rotation=[-23.999999,24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.938937,-10.397866,8.829982],rotation=[23.999999,-24.999999,-37.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.123147,-11.601115,7.030155],rotation=[-20.000000,32.000000,36.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.154619,-11.641753,7.024999],rotation=[20.000000,-32.000000,36.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.037686,-12.729738,4.967597],rotation=[-15.999999,35.000000,28.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.034410,-12.752872,4.949427],rotation=[15.999999,-35.000000,28.999998],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.462377,-13.125817,1.779668],rotation=[-5.000000,34.999998,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.411909,-13.121728,1.753451],rotation=[5.000000,-34.999998,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.556622,-12.530653,-1.749729],rotation=[7.000000,32.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.498546,-12.557862,-1.787995],rotation=[-7.000000,-32.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.799356,-7.104973,9.037388],rotation=[31.000000,-13.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.913898,-7.139815,9.033218],rotation=[-31.000000,13.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.477154,-8.484173,7.015952],rotation=[27.000000,-16.999999,38.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.555805,-8.534161,6.998523],rotation=[-27.000000,16.999999,38.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.091416,-9.432432,4.419511],rotation=[17.000001,-21.000000,23.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.122130,-9.478121,4.380607],rotation=[-17.000001,21.000000,23.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.269088,-10.149133,1.169526],rotation=[11.000000,-22.000000,11.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.245151,-10.189685,1.118460],rotation=[-11.000000,22.000000,11.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.371854,-9.315550,-1.126072],rotation=[4.000000,-21.999999,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.331873,-9.366305,-1.190954],rotation=[-4.000000,21.999999,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Temple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.825635,-4.721194,7.729728],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Temple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.891916,-4.742426,7.675189],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.352862,-4.400757,8.823400],rotation=[12.000001,-5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.452101,-4.408408,8.784590],rotation=[-12.000001,5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.753538,-3.728731,7.901552],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.821705,-3.745118,7.840795],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.807117,-5.865160,7.633657],rotation=[12.000001,-5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.904788,-5.893574,7.597838],rotation=[-12.000001,5.000000,35.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Temple4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.259077,-4.908216,6.490633],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Temple4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.338111,-4.935334,6.436494],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.525741,-5.597568,5.551270],rotation=[12.000000,-5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.600992,-5.632124,5.494573],rotation=[-12.000000,5.000000,21.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.067300,-6.775639,2.513887],rotation=[8.000000,-7.000000,16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.115940,-6.822471,2.441777],rotation=[-8.000000,7.000000,16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.005116,-6.559712,-0.803244],rotation=[-1.000000,-8.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.991968,-6.616871,-0.900174],rotation=[0.999999,8.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_HairC4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[8.094373,-4.034313,-0.181646],rotation=[-1.000000,5.000000,-3.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_HairC4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.111160,-4.100608,-0.376424],rotation=[0.999996,-5.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.050089,-2.645748,7.080392],rotation=[11.999999,2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.084443,-2.659190,7.004072],rotation=[-11.999999,-2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.605927,-3.130383,4.879639],rotation=[9.000001,2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.651030,-3.156768,4.778645],rotation=[-9.000001,-2.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.989627,-3.231361,2.738831],rotation=[4.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-8.042659,-3.263240,2.516061],rotation=[-4.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.288127,-0.527408,6.784258],rotation=[10.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.286848,-0.527157,6.697066],rotation=[-10.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.578488,-0.684030,5.104172],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.562095,-0.699776,4.987884],rotation=[0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Sideburn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.718945,-0.839628,3.427123],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Sideburn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.732023,-0.885435,3.214532],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_ForeheadSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.049164,-6.796334,12.236732],rotation=[-0.000002,-0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.014448,-6.791122,11.990355],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.137918,-6.794342,12.011873],rotation=[11.999998,-7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.734799,-7.510923,11.941590],rotation=[-0.000002,-0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.829956,-7.512693,11.951542],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.669811,-6.106448,12.445195],rotation=[-0.000003,-0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.777681,-6.103161,12.449026],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.558033,-7.486259,11.847287],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.660117,-7.487206,11.842149],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.423858,-6.125346,12.350146],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.542125,-6.121401,12.361465],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.914536,-7.397292,11.452380],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.035239,-7.408222,11.469148],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadSkin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.666940,-6.147152,12.013764],rotation=[-12.000002,7.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadSkin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.797022,-6.139826,12.023891],rotation=[12.000001,-7.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMidSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.143532,-6.244084,11.084763],rotation=[-22.000002,14.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMidSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.274692,-6.237947,11.086510],rotation=[21.999998,-14.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.473537,-5.712158,9.938304],rotation=[-29.000001,31.999999,-28.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.599298,-5.708497,9.929138],rotation=[28.999999,-31.999999,-27.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Skull', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.146559,-3.787936,2.459196],rotation=[0.000000,-0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.070308,-4.219746,11.956030],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.017354,-1.449006,0.801602],rotation=[-0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.729242,-1.463894,0.784796],rotation=[-0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.699450,-1.461572,0.787169],rotation=[-0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.021567,-0.134181,1.077228],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.713316,-0.142309,1.075022],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.713873,-0.144624,1.133650],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.026005,0.881206,0.972089],rotation=[-0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.649868,0.913236,0.893278],rotation=[-0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.623672,0.919360,0.886065],rotation=[-0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.017672,-2.134486,0.607640],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.755743,-2.143139,0.568355],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.727226,-2.141160,0.579441],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.018104,-1.112938,0.894409],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.722598,-1.130807,0.890897],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.690036,-1.125949,0.880507],rotation=[0.000000,-0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.019457,-0.776038,0.973285],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.719524,-0.797562,0.982106],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.684897,-0.789798,0.971544],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.023277,0.428940,1.067693],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.695685,0.441064,1.035315],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.654873,0.457306,1.047279],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.024691,0.665611,1.023990],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.677755,0.689960,0.973030],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.633799,0.708194,0.987215],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.027885,1.267807,0.850161],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[0.565618,1.304939,0.731696],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Forehead6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Forehead'), unreal.Transform(location=[-0.516658,1.324955,0.756181],rotation=[0.000000,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadIn', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.844351,-4.172100,11.598560],rotation=[-8.000000,-0.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.859110,-0.800393,1.222163],rotation=[-0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.910962,0.473775,1.226057],rotation=[-4.000000,-6.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.395230,1.162174,0.658821],rotation=[12.000000,-18.000001,30.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.610529,-0.894834,1.068884],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadInB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.467791,0.330425,1.167964],rotation=[-0.000000,-0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.048966,-1.456229,1.023931],rotation=[-0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.125682,-0.461103,1.266396],rotation=[-0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.140832,-0.135400,1.291906],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-1.174425,0.716608,1.128303],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.292161,-1.485868,1.006693],rotation=[-0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.385962,-0.489555,1.289020],rotation=[-0.000000,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.403910,-0.159123,1.317883],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.425977,0.741393,1.081917],rotation=[4.000000,2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.702143,-1.534849,0.884143],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.568436,-0.568838,1.147492],rotation=[-14.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.531459,-0.248627,1.204851],rotation=[-0.000000,0.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.435624,0.570781,1.068617],rotation=[-0.000000,0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[-0.730497,1.387414,0.488894],rotation=[17.000001,-28.000001,28.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadIn14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadIn'), unreal.Transform(location=[0.381126,0.931674,0.766850],rotation=[6.000000,-6.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadIn', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.828141,-4.122396,11.589052],rotation=[8.000000,0.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.737833,-0.834751,1.251069],rotation=[0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.796561,0.449952,1.279384],rotation=[4.000000,6.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.272588,1.164737,0.711919],rotation=[-12.000000,18.000001,30.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.740616,-0.917072,1.098179],rotation=[14.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadInB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.582483,0.320989,1.197716],rotation=[0.000000,-0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.927822,-1.496979,1.046493],rotation=[-0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.009603,-0.495679,1.305966],rotation=[-0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.026109,-0.167919,1.335628],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.158030,-1.525547,1.057776],rotation=[-0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[1.066128,0.691396,1.185722],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.261524,-0.518274,1.321212],rotation=[-0.000000,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.282432,-0.184872,1.355350],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.309722,0.733139,1.142557],rotation=[-4.000000,-2.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.841238,-1.567453,0.927216],rotation=[14.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.694598,-0.588208,1.172146],rotation=[14.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.547290,0.567016,1.103222],rotation=[-0.000000,-0.000000,23.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.652133,-0.265082,1.221635],rotation=[-0.000000,-0.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[0.625754,1.373417,0.536880],rotation=[-17.000001,28.000001,28.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadIn14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadIn'), unreal.Transform(location=[-0.489507,0.938860,0.799390],rotation=[-6.000000,6.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.380565,-4.737338,10.735550],rotation=[-19.999999,4.000000,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.138865,-0.264904,1.105596],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadMid2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.104741,0.812480,1.369914],rotation=[-7.000000,5.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.201501,-0.891370,1.061823],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.463459,0.057116,1.327125],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.520689,0.362632,1.412537],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[-0.624795,1.109863,1.362715],rotation=[-7.000000,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.838935,-0.791638,0.785880],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.584842,0.058600,1.058609],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.523563,0.321971,1.169599],rotation=[-7.000000,5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadMid22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadMid'), unreal.Transform(location=[0.353795,1.005625,1.274134],rotation=[-7.000000,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.379190,-4.676110,10.654889],rotation=[19.999999,-4.000000,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.229519,-0.279873,1.236999],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadMid2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.034533,0.813123,1.474138],rotation=[7.000000,-5.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.109876,-0.912638,1.185520],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.384692,0.045809,1.440562],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.448648,0.354643,1.516061],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[0.559081,1.110963,1.473843],rotation=[7.000000,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.938763,-0.815255,0.920848],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.661193,0.053323,1.149464],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.593094,0.322570,1.248027],rotation=[7.000000,-5.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadMid22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadMid'), unreal.Transform(location=[-0.424134,1.008044,1.365072],rotation=[7.000000,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOut', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.770576,-4.297495,9.803448],rotation=[-27.999999,14.000000,-18.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.241537,-0.253811,1.021405],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.465122,0.950042,1.288429],rotation=[-12.000000,2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.069151,-0.044736,0.472039],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ForeheadOutB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.749422,1.079654,0.802373],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.179506,-0.534078,0.951663],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.347317,0.276003,1.162522],rotation=[-5.000000,4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut25', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.384184,0.509664,1.247863],rotation=[-12.000000,2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut26', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[-0.577983,1.495437,1.117081],rotation=[-12.000000,2.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut27', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.163055,-0.299872,0.398842],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut28', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.931030,0.443581,0.662864],rotation=[-10.000000,10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut29', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.441769,0.815020,0.975250],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut30', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[0.187872,1.692419,0.792248],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut31', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.556306,1.100371,0.257937],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ForeheadOut32', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_ForeheadOut'), unreal.Transform(location=[1.149578,1.861611,0.230024],rotation=[-12.000000,10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOut', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.838775,-4.211833,9.777843],rotation=[27.999999,-14.000000,-18.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.220922,-0.307730,1.055924],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.455430,0.910840,1.296808],rotation=[12.000000,-2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.097684,-0.120766,0.512334],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ForeheadOutB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.757651,1.024066,0.804082],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.152244,-0.594928,1.005899],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.334556,0.233481,1.174577],rotation=[5.000000,-4.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut25', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.371019,0.469052,1.261158],rotation=[12.000000,-2.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut26', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[0.577966,1.463534,1.134057],rotation=[12.000000,-2.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut27', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.190748,-0.381311,0.439132],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut28', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.948224,0.382245,0.679005],rotation=[10.000000,-10.000000,-7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut29', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.456418,0.769195,0.985182],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut30', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-0.201552,1.659210,0.803309],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut31', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.565912,1.013369,0.248681],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ForeheadOut32', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_ForeheadOut'), unreal.Transform(location=[-1.164890,1.788316,0.239121],rotation=[12.000000,-10.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackU0', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.765560,-2.636326,11.580383],rotation=[3.000000,-17.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackU0', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.795762,-2.631791,11.588289],rotation=[-3.000000,17.000000,13.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.632018,-3.277878,11.576002],rotation=[-10.000001,7.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[-1.119402,0.356969,0.086710],rotation=[9.000000,-12.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[0.004421,0.095821,0.173162],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackUpper'), unreal.Transform(location=[1.267461,0.236679,-0.159082],rotation=[-10.000000,7.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.667179,-3.257243,11.555912],rotation=[10.000001,-7.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[1.122204,0.341015,0.116433],rotation=[-9.000000,12.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[0.005827,0.086880,0.185942],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackUpper'), unreal.Transform(location=[-1.270527,0.240231,-0.170569],rotation=[10.000000,-7.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.600863,-2.430639,10.151261],rotation=[-30.000001,25.000001,4.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.640156,-2.428574,10.102605],rotation=[30.000001,-25.000001,4.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.562237,-3.149674,11.115275],rotation=[-17.000001,10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[-0.906961,0.503868,-0.260338],rotation=[24.000000,-21.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[-0.022793,0.041485,0.090869],rotation=[10.000000,-1.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperFurrow3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperFurrow'), unreal.Transform(location=[1.180850,0.118063,-0.016744],rotation=[-8.000000,3.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.536476,-3.171897,11.117773],rotation=[17.000001,-10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[0.902219,0.471876,-0.271971],rotation=[-24.000000,21.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[0.022897,0.039445,0.084973],rotation=[-10.000000,1.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperFurrow3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperFurrow'), unreal.Transform(location=[-1.203094,0.118907,-0.002688],rotation=[8.000000,-3.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413845,-2.188019,9.697194],rotation=[0.000000,0.000000,-26.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[-0.694530,0.226607,1.636400],rotation=[14.000000,-10.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[0.167421,0.052687,1.822048],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperB'), unreal.Transform(location=[1.113088,0.079781,1.422747],rotation=[-19.000000,6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,-26.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[0.717982,0.213092,1.645526],rotation=[-14.000000,10.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[-0.139417,0.058316,1.825905],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperB'), unreal.Transform(location=[-1.101173,0.097074,1.443620],rotation=[19.000000,-6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,-17.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[-0.680295,0.176838,1.579588],rotation=[14.000000,-10.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA1'), unreal.Transform(location=[0.000000,-0.000000,-0.000000],rotation=[0.000001,0.000005,-0.000017],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[0.175672,0.036464,1.814505],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA2'), unreal.Transform(location=[-0.000000,0.000000,-0.000000],rotation=[-0.000000,0.000000,-0.000011],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA'), unreal.Transform(location=[1.070481,0.128906,1.396506],rotation=[-19.000000,6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidUpperA3'), unreal.Transform(location=[-0.000000,0.000000,0.000000],rotation=[-0.000018,-0.000004,0.000030],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,-17.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[0.708846,0.185056,1.575403],rotation=[-14.000000,10.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA1'), unreal.Transform(location=[0.000000,0.000000,-0.000000],rotation=[-0.000012,-0.000005,-0.000005],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[-0.136060,0.030537,1.821347],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA2'), unreal.Transform(location=[0.000000,-0.000000,0.000000],rotation=[-0.000000,0.000000,-0.000011],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA'), unreal.Transform(location=[-1.054629,0.126110,1.425339],rotation=[19.000000,-6.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesUpperA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidUpperA3'), unreal.Transform(location=[-0.000000,-0.000000,0.000000],rotation=[0.000009,0.000003,0.000025],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Eye', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeParallel', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Eye'), unreal.Transform(location=[-0.000000,-0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Pupil', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeParallel'), unreal.Transform(location=[0.093620,0.048643,1.345957],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Eye', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeParallel', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Eye'), unreal.Transform(location=[0.000000,0.000000,0.000000],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Pupil', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeParallel'), unreal.Transform(location=[-0.079874,0.052018,1.355275],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.418181,-2.181764,9.704404],rotation=[0.000000,0.000000,33.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[-0.673963,-0.242509,1.530385],rotation=[9.000001,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[0.176938,-0.171735,1.653140],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerA'), unreal.Transform(location=[1.024033,-0.115866,1.300080],rotation=[-21.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,33.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[0.646772,-0.220074,1.564548],rotation=[-9.000001,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[-0.189706,-0.149687,1.681779],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerA'), unreal.Transform(location=[-1.037660,-0.096326,1.327259],rotation=[21.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.405971,-2.200267,9.706111],rotation=[0.000000,0.000000,37.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[-0.650481,-0.144908,1.754963],rotation=[9.000001,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[0.217215,-0.019803,1.805955],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelidLowerB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyelidLowerB'), unreal.Transform(location=[1.108674,0.132669,1.466089],rotation=[-21.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.398480,-2.225747,9.684753],rotation=[0.000000,0.000000,38.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[0.622124,-0.151611,1.767591],rotation=[-9.000001,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[-0.238252,-0.030242,1.814974],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelidLowerB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyelidLowerB'), unreal.Transform(location=[-1.126797,0.117724,1.469238],rotation=[21.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.952294,-1.791856,10.924731],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerInner'), unreal.Transform(location=[0.145393,-0.244307,0.057806],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerInner'), unreal.Transform(location=[0.254430,0.154533,0.061558],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.925360,-1.782082,10.910858],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerInner'), unreal.Transform(location=[-0.167500,-0.269582,0.062751],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerInner'), unreal.Transform(location=[-0.273654,0.148479,0.054857],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.906773,-1.988998,10.283381],rotation=[-45.000001,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter'), unreal.Transform(location=[-0.138843,-0.178321,0.172909],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyelashesCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter1'), unreal.Transform(location=[-0.000000,-0.000000,0.000000],rotation=[-0.000017,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyeCornerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyeCornerOuter'), unreal.Transform(location=[-0.019378,0.121487,0.050772],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.911734,-2.018491,10.202393],rotation=[44.999995,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter'), unreal.Transform(location=[0.199978,-0.181229,0.226828],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyelashesCornerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter1'), unreal.Transform(location=[0.000000,0.000000,-0.000000],rotation=[-0.000013,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyeCornerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyeCornerOuter'), unreal.Transform(location=[0.071845,0.130585,0.100269],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyeCornerO1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.253812,-1.961912,10.064713],rotation=[-30.000000,25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyeCornerO1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.255300,-1.999494,10.041357],rotation=[30.000000,-25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyeCornerO2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.654426,-1.627458,9.606414],rotation=[-30.000000,25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyeCornerO2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-5.677504,-1.653805,9.554767],rotation=[30.000000,-25.000001,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.713024,-0.840701,10.573846],rotation=[-15.999999,3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.245888,0.068911,0.252862],rotation=[23.000000,3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_EyesackLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[1.205296,-0.092881,0.148531],rotation=[-10.000000,-12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.675271,-0.210267,0.141328],rotation=[23.000000,3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-1.660145,0.258739,0.245552],rotation=[23.000000,3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-0.627729,-0.092020,0.412931],rotation=[23.000000,3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[-0.505600,0.601348,0.399129],rotation=[23.000000,3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[0.327193,-0.104763,0.413485],rotation=[-10.000000,-12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[0.651938,0.640870,0.375692],rotation=[-10.000000,-12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[1.631263,-0.576031,-0.087703],rotation=[-10.000000,-12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_EyesackL8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_EyesackLower'), unreal.Transform(location=[2.049636,0.223619,-0.118371],rotation=[-10.000000,-12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.794748,-0.840959,10.638367],rotation=[15.999999,-3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.271465,0.064535,0.176795],rotation=[-23.000000,-3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_EyesackLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-1.183550,-0.118038,0.037287],rotation=[10.000000,12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.706480,-0.214424,0.051827],rotation=[-23.000000,-3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[1.686250,0.245577,0.169001],rotation=[-23.000000,-3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[0.650784,-0.110618,0.305321],rotation=[-23.000000,-3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[0.533368,0.587377,0.308827],rotation=[-23.000000,-3.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-0.306095,-0.123221,0.311973],rotation=[10.000000,12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-0.635287,0.625795,0.274407],rotation=[10.000000,12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-1.594676,-0.606957,-0.214568],rotation=[10.000000,12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_EyesackL8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_EyesackLower'), unreal.Transform(location=[-2.020173,0.200801,-0.253368],rotation=[10.000000,12.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.333174,0.125672,10.479629],rotation=[-7.000000,24.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[-0.567499,-0.122353,0.989212],rotation=[-6.000000,-3.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[-0.344547,0.862258,1.179144],rotation=[-7.000000,17.000001,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[0.692568,0.001812,0.884852],rotation=[-6.000000,-3.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekInner4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekInner'), unreal.Transform(location=[0.729117,1.277648,0.973915],rotation=[-7.000000,17.000001,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.222261,0.119150,10.429067],rotation=[7.000000,-24.000001,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[0.427705,-0.178850,1.062914],rotation=[6.000000,3.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[0.201321,0.826269,1.268885],rotation=[7.000000,-17.000001,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[-0.829150,-0.053330,0.926874],rotation=[6.000000,3.000000,6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekInner4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekInner'), unreal.Transform(location=[-0.859085,1.246650,1.025940],rotation=[7.000000,-17.000001,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.347276,0.395527,8.822697],rotation=[-43.000000,-18.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[-0.926489,-0.456887,1.625207],rotation=[-5.000000,5.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[0.118710,1.558208,1.746431],rotation=[-4.000000,6.000000,9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekOuter'), unreal.Transform(location=[1.402550,-0.501760,1.592257],rotation=[-8.000000,-25.000000,-4.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.275688,0.462269,8.865573],rotation=[43.000000,18.000000,14.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[0.774274,-0.503864,1.631940],rotation=[5.000000,-5.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[-0.271347,1.524702,1.735536],rotation=[4.000000,-6.000000,9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekOuter'), unreal.Transform(location=[-1.558282,-0.541878,1.565276],rotation=[8.000000,25.000000,-4.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.373089,-2.038490,8.838681],rotation=[24.999998,3.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.408897,-2.052711,8.758998],rotation=[-25.000003,-3.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[5.962323,-2.198256,9.523190],rotation=[32.999999,9.000000,34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.006080,-2.203272,9.461221],rotation=[-32.999999,-9.000000,34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.120361,-1.255306,9.154920],rotation=[40.000000,-2.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.139295,-1.273827,9.078353],rotation=[-40.000000,2.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.443374,-2.790036,8.786530],rotation=[24.999998,3.000000,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.502463,-2.794725,8.722017],rotation=[-24.999998,-2.999999,32.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[6.789050,-1.201647,8.128102],rotation=[24.999997,3.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekOuter4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-6.796961,-1.206984,8.039683],rotation=[-24.999997,-3.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.036286,-2.887415,12.838525],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.042010,-3.219605,12.975525],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.542163,-3.175702,12.874319],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseBridge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.630497,-3.157890,12.896536],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.027389,-2.449873,12.734016],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.375920,-2.394604,12.610229],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseBridge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.431353,-2.385483,12.609844],rotation=[0.000000,0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.295524,-2.043694,11.462800],rotation=[-34.000002,16.000001,-4.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NoseBridge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.313265,-2.069346,11.515692],rotation=[34.000002,-16.000001,-4.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.017162,-1.458030,13.160910],rotation=[0.000000,-0.000000,-25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.142863,-0.882145,12.271339],rotation=[-32.000002,22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NoseUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.190766,-0.892595,12.270308],rotation=[32.000002,-22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020521,-1.945753,12.855709],rotation=[0.000000,0.000000,-25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.020060,-0.726119,13.615433],rotation=[0.000000,0.000000,-25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.487881,-1.835460,12.675377],rotation=[-32.000001,17.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.525366,-1.826052,12.664895],rotation=[32.000001,-17.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.527455,-0.643354,13.428705],rotation=[-32.000001,17.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.563151,-0.636156,13.407881],rotation=[32.000001,-17.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.903140,-1.518656,12.197135],rotation=[-32.000002,22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.942731,-1.520411,12.193996],rotation=[32.000002,-22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[0.965554,-0.397651,12.921325],rotation=[-32.000002,22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.015606,-0.400379,12.921773],rotation=[32.000002,-22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.472355,-0.984509,11.673601],rotation=[-32.000002,22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.524023,-0.996210,11.669513],rotation=[32.000002,-22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.471892,0.009872,12.297441],rotation=[-32.000002,22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.522875,0.010841,12.297585],rotation=[32.000002,-22.000001,-33.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.882313,2.689765,11.358991],rotation=[-20.000000,50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.913630,2.683735,11.308617],rotation=[20.000000,-50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.593081,3.010931,11.477571],rotation=[-20.000000,50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.631541,3.005585,11.463255],rotation=[20.000000,-50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.819751,1.624125,11.313176],rotation=[-20.000000,50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.855065,1.612538,11.279463],rotation=[20.000000,-50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.857308,2.924005,10.517005],rotation=[-20.000000,50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.902640,2.906817,10.448875],rotation=[20.000000,-50.000002,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.907908,5.133372,9.856497],rotation=[-44.000001,-7.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.259027,-1.007190,0.956240],rotation=[4.000000,-7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialBulge3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.106390,0.978021,0.800002],rotation=[2.000000,8.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.451671,-2.017701,0.964091],rotation=[0.784928,-21.666181,-12.615831],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.248021,-1.435781,0.821407],rotation=[1.221214,-19.714046,-12.581653],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.807059,-1.074954,0.825879],rotation=[1.221214,-19.714046,-12.581653],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[0.122368,-0.640464,0.932155],rotation=[2.733736,-12.875129,-12.345363],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.858091,-0.297713,0.872074],rotation=[4.000000,-7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.456293,-0.164556,0.814156],rotation=[4.000000,-7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[0.242395,0.424718,0.852028],rotation=[1.748395,-4.003817,-1.394027],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.850513,0.487430,0.794514],rotation=[1.925375,3.998347,-1.137107],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.452828,0.390718,0.668016],rotation=[2.079540,13.002540,-0.821831],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-0.160548,1.979812,0.585425],rotation=[2.000000,8.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.276036,1.621087,0.602488],rotation=[2.131799,17.004903,-0.674714],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_NasolabialBulge'), unreal.Transform(location=[-1.883111,1.178129,0.583229],rotation=[2.204944,25.010310,-0.371327],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.827245,5.233538,9.844851],rotation=[44.000001,7.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.106977,-1.116712,1.011607],rotation=[-4.000000,7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialBulge3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.057078,0.897697,0.816467],rotation=[-2.000000,-8.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.309111,-2.128542,1.019461],rotation=[-0.784928,21.666181,-12.615831],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.154402,-1.538661,0.882653],rotation=[-1.221214,19.714046,-12.581653],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.720700,-1.168398,0.910102],rotation=[-1.221214,19.714046,-12.581653],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.275567,-0.744193,0.958688],rotation=[-2.733736,12.875129,-12.345363],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.733501,-0.401337,0.945419],rotation=[-4.000000,7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.352726,-0.247975,0.912092],rotation=[-4.000000,7.000000,-12.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[-0.394771,0.334070,0.842061],rotation=[-1.748395,4.003817,-1.394027],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.716705,0.414642,0.885388],rotation=[-1.925375,-3.998347,-1.137107],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.341300,0.316769,0.763060],rotation=[-2.079540,-13.002540,-0.821831],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[0.009202,1.897136,0.601573],rotation=[-2.000000,-8.000000,-1.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.122477,1.557534,0.689230],rotation=[-2.131799,-17.004903,-0.674714],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_NasolabialBulge'), unreal.Transform(location=[1.764303,1.098544,0.666876],rotation=[-2.204944,-25.010310,-0.371327],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NasolabialFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.026995,3.027643,11.667237],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NasolabialFurrow', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.022156,3.052690,11.672624],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.822844,1.967366,11.699637],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.841286,1.982840,11.682119],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.534791,2.386108,11.694986],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.550960,2.411462,11.696086],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.346493,2.716160,11.853817],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.361760,2.737689,11.850284],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.344666,2.643308,11.584841],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.370032,2.646828,11.574570],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.026995,3.027643,11.667237],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.022157,3.052690,11.672624],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.813685,3.314464,11.885127],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.823141,3.339710,11.891356],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.820732,3.382672,11.340997],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.872312,3.367833,11.312444],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.503671,3.712313,11.545468],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.523334,3.717309,11.530234],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NasolabialF9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.272875,3.957629,11.749976],rotation=[-12.000000,43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NasolabialF9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.298091,3.973070,11.750532],rotation=[12.000000,-43.999999,-9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.970805,4.488954,8.264635],rotation=[-50.000002,-12.000001,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.550834,0.627424,0.901599],rotation=[10.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_CheekLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[1.060930,0.183790,0.735063],rotation=[-10.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.813400,-0.952428,1.232315],rotation=[10.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[-0.641732,1.685331,0.673338],rotation=[10.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[0.632606,-1.582325,1.296364],rotation=[-10.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_CheekL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_CheekLower'), unreal.Transform(location=[1.021131,1.401729,0.427047],rotation=[-10.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.853147,4.717748,8.354966],rotation=[50.000002,12.000001,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.285060,0.400312,0.901459],rotation=[-10.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_CheekLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-1.296287,-0.037405,0.694633],rotation=[10.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.544297,-1.185019,1.242185],rotation=[-10.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[0.385930,1.453639,0.649342],rotation=[-10.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-0.873834,-1.803905,1.276219],rotation=[10.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_CheekL4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_CheekLower'), unreal.Transform(location=[-1.250762,1.162336,0.374616],rotation=[10.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.557025,0.093728,1.002680],rotation=[-0.000002,3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[-0.000003,0.000011,0.000005],rotation=[0.000000,0.000002,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[2.001148,-3.087622,-0.849304],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[1.795845,-0.360989,-1.458185],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Ear4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Ear'), unreal.Transform(location=[0.708332,2.326802,1.226807],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.519202,0.055603,0.770582],rotation=[-0.000002,-3.000000,-3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[0.000005,0.000011,0.000006],rotation=[0.000000,0.000000,0.000003],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-1.994922,-3.102561,-1.017456],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-1.715864,-0.423390,-1.664055],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Ear4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Ear'), unreal.Transform(location=[-0.682188,2.331955,1.191363],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Nose', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.063852,-0.377706,12.711123],rotation=[0.000000,0.000000,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[0.030910,3.167040,-0.332517],rotation=[0.000000,0.000000,14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[0.614871,-0.336370,-0.055961],rotation=[19.999999,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[-0.617898,-0.343499,-0.059113],rotation=[-19.999999,-0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseL1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[-0.005966,-0.087728,0.692155],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseL2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseLower'), unreal.Transform(location=[0.010593,0.530295,-0.036232],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NoseTip', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[-0.058782,2.294767,0.736000],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.092508,-1.112394,0.533563],rotation=[0.000000,-0.000000,-20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.084555,-0.251113,0.885316],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.084959,0.584952,0.687990],rotation=[0.000000,-0.000000,20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[0.989320,-1.100244,0.010318],rotation=[-32.218746,13.437534,-23.754779],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-0.807518,-1.109395,0.012400],rotation=[32.218746,-13.437534,-23.754779],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[1.206565,-0.332955,0.222726],rotation=[-43.228701,3.394467,3.289431],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-1.030055,-0.338211,0.220925],rotation=[43.228701,-3.394467,3.289431],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[1.298238,0.305564,0.046400],rotation=[-43.228702,3.394467,14.289432],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NoseTip3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_NoseTip'), unreal.Transform(location=[-1.116965,0.304305,0.041530],rotation=[43.228702,-3.394467,14.289432],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Nostril', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[1.553310,2.262727,-0.343793],rotation=[15.000000,-0.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.413446,0.492833,0.959799],rotation=[30.000000,7.000000,9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NostrilThickness2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.027138,0.399335,0.079152],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.219485,-1.635535,0.607515],rotation=[8.000000,0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.099232,-1.397578,-0.525907],rotation=[-3.000000,20.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.430542,-0.788836,-1.170697],rotation=[-18.000000,34.999999,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.084560,-1.008381,0.830370],rotation=[8.000000,0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.066543,-0.967039,-0.408858],rotation=[-3.000000,10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.099505,-0.296064,1.018215],rotation=[8.000000,0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.456925,-0.155187,-0.269302],rotation=[-11.000000,-7.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.189065,-0.107485,-1.178873],rotation=[-18.000001,0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.008451,0.378720,0.917986],rotation=[19.000000,-2.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.345724,0.355537,-0.017944],rotation=[-11.000000,-7.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.030492,0.531755,-0.995254],rotation=[-33.999999,-12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.540438,0.830726,-0.298651],rotation=[-33.999999,-12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[0.598041,0.619038,-1.568046],rotation=[-18.000000,34.999999,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Nostril14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Nostril'), unreal.Transform(location=[-0.176920,1.411042,-0.600945],rotation=[-33.999999,-12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Nostril', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Nose'), unreal.Transform(location=[-1.438257,2.227441,-0.313071],rotation=[-15.000000,0.000000,2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.382181,0.527974,0.921949],rotation=[-30.000000,-7.000000,9.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NostrilThickness2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.009086,0.418191,0.025419],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.197284,-1.599736,0.569271],rotation=[-8.000000,-0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.126969,-1.352035,-0.561291],rotation=[3.000000,-20.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.448049,-0.732531,-1.202099],rotation=[18.000000,-34.999999,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.053051,-0.982291,0.789116],rotation=[-8.000000,-0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.090307,-0.929243,-0.452971],rotation=[3.000000,-10.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.137783,-0.262833,0.978823],rotation=[-8.000000,-0.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.481142,-0.115353,-0.317901],rotation=[11.000000,7.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.227245,-0.050532,-1.215990],rotation=[18.000001,-0.000000,3.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.028348,0.412819,0.873182],rotation=[-19.000000,2.000000,-6.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.375689,0.388416,-0.066116],rotation=[11.000000,7.000000,-2.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.006556,0.598912,-1.035369],rotation=[33.999999,12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.533370,0.857136,-0.356156],rotation=[33.999999,12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[-0.598543,0.679138,-1.603885],rotation=[18.000000,-34.999999,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Nostril14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Nostril'), unreal.Transform(location=[0.155830,1.457202,-0.645564],rotation=[33.999999,12.000000,7.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.013002,3.742748,13.253771],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.442545,3.630000,12.861488],rotation=[-13.000000,8.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.473054,3.639477,12.866731],rotation=[13.000000,-8.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.756758,4.046250,12.170062],rotation=[-18.000001,15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.782953,4.064076,12.172291],rotation=[18.000001,-15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipUpperSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.017587,3.504282,13.206855],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipUpperSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.008522,3.994260,13.368892],rotation=[0.000000,0.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.442545,3.630000,12.861488],rotation=[-13.000000,8.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.473054,3.639477,12.866731],rotation=[13.000000,-8.000000,-8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.912344,3.827958,12.006708],rotation=[-18.000001,15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.935362,3.847088,12.010654],rotation=[18.000001,-15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpperOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.571938,4.415174,12.356134],rotation=[-18.000001,15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpperOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.599708,4.431924,12.354559],rotation=[18.000001,-15.000000,-12.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.212695,3.287071,11.552702],rotation=[-10.000000,3.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.250799,3.291423,11.538758],rotation=[10.000000,-3.000000,-5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.082798,4.034750,9.426772],rotation=[25.000000,5.000000,25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.087463,4.053823,9.413995],rotation=[-25.000000,-5.000000,25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_MouthUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.012715,5.084702,9.744472],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[0.006230,-0.640536,3.122031],rotation=[0.000000,-0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.000250,0.134699,0.761263],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.009738,0.781695,0.071664],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.009163,0.189655,-0.474932],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.443446,-0.544993,0.662033],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.452361,-0.545608,0.662621],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.458119,0.308514,0.613337],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.468966,0.311336,0.614017],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.368593,0.762875,0.040522],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.386796,0.767600,0.040313],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.315425,0.376831,-0.501954],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.335737,0.374864,-0.510366],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[0.355116,-0.485293,-0.428035],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipUpper'), unreal.Transform(location=[-0.376854,-0.485026,-0.425287],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[1.353805,-0.505711,2.743377],rotation=[-17.999999,6.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.049848,0.022642,0.727615],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.148697,0.645168,0.091321],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.163290,0.109012,-0.402363],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.607055,-0.630297,0.722741],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.548147,0.211545,0.696566],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.484190,-0.524019,0.533830],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.371888,0.353637,0.448093],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.529460,0.677358,0.146517],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.218195,0.636513,-0.017488],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.505217,0.321561,-0.371861],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[-0.480658,-0.525505,-0.331722],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.157568,0.261697,-0.459115],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpper'), unreal.Transform(location=[0.244820,-0.565517,-0.425309],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-1.303908,-0.556452,2.772213],rotation=[17.999999,-6.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.005746,0.085731,0.690587],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.077472,0.697440,0.068299],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.085178,0.154415,-0.434790],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.541476,-0.584627,0.697831],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.483086,0.266071,0.667600],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.547232,-0.470211,0.507164],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.426057,0.421619,0.413039],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.457369,0.725654,0.124772],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.286257,0.689580,-0.041521],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.426873,0.367547,-0.403446],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[0.408617,-0.481274,-0.353930],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.236726,0.312631,-0.495646],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpper'), unreal.Transform(location=[-0.318004,-0.519161,-0.465946],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[2.105419,-0.305265,2.227000],rotation=[-24.999999,14.999999,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.141296,0.260389,0.481145],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.070995,0.545594,0.034408],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipUpperOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.091249,-0.042937,-0.407239],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.374473,-0.390481,0.578349],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.055777,0.398174,0.424243],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.456917,0.390163,0.079855],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.194499,0.567746,-0.000487],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.240407,0.463964,-0.235550],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.189369,0.153719,-0.394984],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[-0.157870,-0.648230,-0.305877],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.260200,0.036518,-0.597390],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipUpper24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipUpperOuter'), unreal.Transform(location=[0.395750,-0.706211,-0.573832],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-2.104735,-0.375453,2.232441],rotation=[24.999999,-14.999999,-14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.171905,0.343642,0.448835],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.044220,0.626601,0.013671],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipUpperOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.059385,0.034240,-0.447455],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.403066,-0.309509,0.557943],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.029364,0.481661,0.392256],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.494003,0.489904,0.057573],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.166908,0.646188,-0.019477],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.269272,0.560546,-0.251302],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.155484,0.231235,-0.433158],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[0.124514,-0.576755,-0.345023],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.288555,0.126697,-0.624242],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipUpper24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipUpperOuter'), unreal.Transform(location=[-0.414078,-0.625023,-0.609743],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[2.768567,0.230495,1.511634],rotation=[-23.999999,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.469695,-0.007182,0.438412],rotation=[10.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.085667,-0.338636,-0.858768],rotation=[30.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[-0.157867,0.482487,-0.788016],rotation=[30.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[-0.202733,0.023724,0.209895],rotation=[30.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.094244,-0.129536,0.528505],rotation=[30.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipCorner'), unreal.Transform(location=[0.078613,0.342169,0.329665],rotation=[30.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthUpper'), unreal.Transform(location=[-2.811140,0.265603,1.435577],rotation=[23.999999,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.429992,-0.006750,0.491988],rotation=[-10.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.017589,-0.338877,-0.820618],rotation=[-30.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.278297,0.492032,-0.772856],rotation=[-30.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[0.243857,0.046665,0.273649],rotation=[-30.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.046972,-0.128174,0.581262],rotation=[-30.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipCorner3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipCorner'), unreal.Transform(location=[-0.043973,0.357702,0.374126],rotation=[-30.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_JawBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.094857,3.724925,4.600528],rotation=[9.999998,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_JawBulge', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.072085,3.673355,4.486579],rotation=[-10.000002,-0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_JawRecess', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.644286,0.757383,3.794497],rotation=[-2.000002,4.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_JawRecess', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.625273,0.709486,3.602383],rotation=[1.999998,-4.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Masseter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[7.192195,1.562613,5.828002],rotation=[12.999998,-0.000000,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Masseter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-7.157660,1.545630,5.740077],rotation=[-13.000002,-0.000000,8.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.027121,10.115823,7.839449],rotation=[-0.000000,-0.000000,60.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.823996,9.977787,7.930054],rotation=[-5.000000,-10.000000,64.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.830903,9.947587,7.913379],rotation=[5.000000,10.000000,64.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[1.480203,10.665219,6.715779],rotation=[-5.000000,-10.000000,45.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-1.511693,10.673009,6.687852],rotation=[5.000000,10.000000,45.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.027483,8.878856,6.043551],rotation=[-32.000000,-30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_UnderChin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.020330,8.867870,5.957551],rotation=[32.000000,30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.540494,9.718608,8.001256],rotation=[-24.999999,-17.000000,55.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.534410,9.679490,7.961505],rotation=[24.999999,17.000000,55.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[2.558770,10.259743,6.192676],rotation=[-25.000000,-20.000000,55.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-2.555630,10.232899,6.103255],rotation=[25.000000,20.000000,55.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.998776,7.990646,6.888538],rotation=[-32.000000,-30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.966019,7.965706,6.827340],rotation=[32.000000,30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_UnderChin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[4.703594,8.369734,4.921206],rotation=[-32.000000,-30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_UnderChin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-4.727925,8.372499,4.843509],rotation=[32.000000,30.000001,60.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TeethUpper', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.070086,3.938396,9.689064],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LowerLipRotation', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.106004,2.493807,3.760324],rotation=[0.000000,0.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.096256,-2.064916,9.753130],rotation=[-0.000000,-0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.622365,-1.992162,9.566444],rotation=[-15.000000,4.000000,-29.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-1.462740,-1.973078,9.569289],rotation=[15.000000,-4.000000,-29.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.538260,-2.060037,8.909203],rotation=[-28.000001,9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuterSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.378888,-2.027863,8.906798],rotation=[28.000001,-9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipLowerSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.093314,-2.441935,9.640980],rotation=[0.000000,-0.000000,-25.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_LipLowerSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.095958,-1.925819,10.151191],rotation=[0.000000,-0.000000,-49.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.622735,-1.991645,9.566193],rotation=[-15.000000,4.000000,-29.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerSkin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-1.462315,-1.972927,9.569023],rotation=[15.000000,-4.000000,-29.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.450759,-2.327913,8.866776],rotation=[-28.000001,9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.281548,-2.289020,8.861204],rotation=[28.000001,-9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.532151,-1.756083,9.070287],rotation=[-28.000001,9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.374234,-1.733840,9.065587],rotation=[28.000001,-9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLowerOuterSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[3.106863,-2.032287,8.360006],rotation=[-28.000001,9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLowerOuterSkin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.951121,-1.990702,8.359674],rotation=[28.000001,-9.000001,-36.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[1.023496,-0.763130,7.959714],rotation=[-6.000000,8.000000,-44.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-0.817189,-0.753438,7.959770],rotation=[6.000000,-8.000000,-44.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_MouthInteriorLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[2.975052,-0.558423,6.828101],rotation=[20.000000,-13.000000,-59.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_MouthInteriorLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[-2.721976,-0.524897,6.830769],rotation=[-20.000000,13.000000,-59.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_MouthLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.099653,-1.779329,6.286786],rotation=[0.000000,-0.000000,-40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[0.018676,0.927297,2.987470],rotation=[0.000000,0.000000,10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.023221,0.035062,0.594432],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.026725,-0.888870,0.062074],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.022480,-0.352729,-0.632478],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.493844,0.708023,0.076629],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.551855,0.729008,0.078770],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.487519,-0.297564,0.557178],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.537910,-0.295864,0.565863],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.370762,-0.894729,0.036859],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.429308,-0.896451,0.038195],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.297290,-0.540440,-0.576080],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.346575,-0.540540,-0.586825],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[0.300051,0.092380,-0.742960],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LipLower'), unreal.Transform(location=[-0.341473,0.094352,-0.750069],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[1.078453,0.811891,2.624862],rotation=[-14.508090,-4.609970,11.324475],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.251168,0.022292,0.656825],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.054488,-0.822331,0.167319],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.018455,-0.277491,-0.432990],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.022029,0.787767,0.390564],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.105983,-0.280001,0.715343],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.753600,0.688513,0.301270],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.578844,-0.287486,0.460724],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.203513,-0.849807,0.215338],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.399528,-0.761647,0.059063],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.236510,-0.478785,-0.364772],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[-0.227650,0.145763,-0.500243],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.385690,-0.396733,-0.469963],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLower'), unreal.Transform(location=[0.388144,0.189852,-0.557765],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[-1.148230,0.838834,2.647905],rotation=[14.508090,4.609970,11.324475],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.213160,0.012789,0.644563],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.015887,-0.835966,0.135917],rotation=[0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.067661,-0.292925,-0.495164],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.049365,0.773558,0.348034],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.150129,-0.294296,0.700474],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.731070,0.689870,0.248607],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.537350,-0.290243,0.440121],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.239466,-0.868700,0.183229],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.354277,-0.772043,0.025586],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.279275,-0.498910,-0.424298],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[0.281803,0.129438,-0.555951],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.329301,-0.406450,-0.534667],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower15', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLower'), unreal.Transform(location=[-0.326583,0.185898,-0.617783],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[1.949724,0.627932,2.212951],rotation=[-26.338478,-6.665358,12.335844],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.130796,-0.030133,0.415327],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.003183,-0.545254,0.045130],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_LipLowerOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.052259,-0.086239,-0.508415],rotation=[-0.000000,-0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.364153,0.525262,0.355357],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.056117,-0.226755,0.403739],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.503105,-0.288492,0.117503],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.183784,-0.581014,0.115001],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.301441,-0.480759,-0.120344],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.144087,-0.255118,-0.455160],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[-0.103023,0.296517,-0.519918],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.330320,-0.164914,-0.637611],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_LipLower24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_LipLowerOuter'), unreal.Transform(location=[0.429111,0.306575,-0.729581],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_MouthLower'), unreal.Transform(location=[-1.946256,0.760044,2.156281],rotation=[26.338478,6.665358,12.335844],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.142956,-0.141438,0.468694],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.005792,-0.664479,0.090667],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_LipLowerOuter3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.065034,-0.199325,-0.497450],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower16', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.394942,0.421939,0.381474],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower17', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.045138,-0.346266,0.465697],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower18', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.516399,-0.393331,0.172979],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower19', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.184792,-0.702382,0.161075],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower20', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.300348,-0.590187,-0.073714],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower21', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.151515,-0.371861,-0.439812],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower22', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[0.121452,0.184774,-0.511257],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower23', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.310052,-0.267446,-0.618659],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_LipLower24', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_LipLowerOuter'), unreal.Transform(location=[-0.391259,0.209448,-0.729354],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TeethLower', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_LowerLipRotation'), unreal.Transform(location=[0.087983,-1.179970,6.729836],rotation=[0.000000,-0.000000,-40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_TeethLower'), unreal.Transform(location=[-0.026548,-0.736444,-2.551240],rotation=[0.000040,-0.000048,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue1'), unreal.Transform(location=[-0.002067,0.129972,1.306401],rotation=[-0.000221,-0.000091,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueUpper2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[0.056322,-0.527918,-0.145556],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_TongueSide2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[1.992647,0.022840,0.224340],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_TongueSide2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[-1.881195,0.014488,0.219138],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue2'), unreal.Transform(location=[-0.006132,0.112857,1.289313],rotation=[-0.000137,0.000000,14.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueUpper3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[0.061101,-0.457027,0.160904],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_TongueLower3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[0.066199,1.001775,0.343199],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_TongueSide3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[1.646001,0.107247,0.236942],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_TongueSide3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[-1.531311,0.101490,0.226307],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Tongue4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Tongue3'), unreal.Transform(location=[-0.002310,0.113235,1.325803],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Jaw', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-0.106004,2.493806,3.760324],rotation=[0.000000,0.000000,40.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.081441,1.632786,10.166421],rotation=[-0.000000,-0.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.638990,0.894536,10.562457],rotation=[-10.000000,-5.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.493905,0.941576,10.586389],rotation=[10.000000,5.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.852537,2.274011,9.075299],rotation=[-5.000000,-5.000000,44.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.658318,2.281438,9.063170],rotation=[5.000000,5.000000,44.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[5.490551,0.834768,5.059165],rotation=[18.999999,-3.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.281973,0.744197,1.314774],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.443589,0.533437,-1.817165],rotation=[0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.567571,-0.136083,0.828482],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.037352,1.266529,1.285653],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.697589,-0.661193,-2.195211],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Jawline6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_L_Jawline'), unreal.Transform(location=[0.089309,1.196838,-2.022438],rotation=[0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-5.060840,0.909450,5.050311],rotation=[-18.999999,3.000000,-16.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.485564,0.659898,1.200825],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Jawline2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.634660,0.462271,-1.937484],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.752769,-0.240839,0.700689],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.229435,1.188125,1.182535],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.887709,-0.747028,-2.319711],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Jawline6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_R_Jawline'), unreal.Transform(location=[-0.260047,1.126648,-2.130257],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_ChinSide', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.431707,-0.695486,8.824276],rotation=[-44.000000,6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_ChinSide', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-3.323472,-0.651199,8.796700],rotation=[44.000000,-6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.520700,-1.498570,8.292990],rotation=[-42.999999,-29.999999,-0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-3.395395,-1.446697,8.284363],rotation=[42.999999,29.999999,-0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[4.567484,-0.543843,7.624368],rotation=[-42.999999,-29.999999,-0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-4.414152,-0.506029,7.549024],rotation=[42.999999,29.999999,-0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.449100,-0.948021,9.718821],rotation=[-44.000000,6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.293345,-0.932960,9.719523],rotation=[44.000000,-6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_ChinS4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[3.122597,0.551285,9.633476],rotation=[-44.000000,6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_ChinS4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.969248,0.561370,9.608232],rotation=[44.000000,-6.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.093396,-1.693417,10.540043],rotation=[-0.000000,-0.000000,-49.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.473255,-1.477920,10.188037],rotation=[-15.000000,8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.300832,-1.453879,10.170110],rotation=[15.000000,-8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.093502,-1.001768,11.178454],rotation=[-0.000000,-0.000000,-35.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.716552,-0.858293,10.662747],rotation=[-16.999999,5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.561719,-0.852218,10.663096],rotation=[16.999999,-5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.090383,0.011255,11.358418],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.771025,0.085258,10.896675],rotation=[-16.999999,5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.617237,0.099687,10.907136],rotation=[16.999999,-5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.711766,-1.633725,10.481596],rotation=[0.000000,-0.000000,-49.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.535569,-1.623566,10.489176],rotation=[0.000000,-0.000000,-49.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.835941,-0.981268,11.106390],rotation=[0.000000,-0.000000,-35.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.662780,-0.988623,11.126016],rotation=[0.000000,-0.000000,-35.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Chin3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.091588,-0.392882,11.357751],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_Chin4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.091650,0.438740,11.239013],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.058728,-1.677530,10.203396],rotation=[-15.000000,8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.884228,-1.648247,10.195740],rotation=[15.000000,-8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.215845,-1.284518,10.694471],rotation=[-15.000000,8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.037476,-1.268223,10.677694],rotation=[15.000000,-8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.040430,-1.147436,10.920864],rotation=[-16.999999,5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.870893,-1.151462,10.926446],rotation=[16.999999,-5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.151277,-0.561074,11.181102],rotation=[-16.999999,5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-0.981687,-0.553963,11.193314],rotation=[16.999999,-5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.047393,-1.538620,9.596814],rotation=[-15.000000,8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.886933,-1.515647,9.588615],rotation=[15.000000,-8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.232509,-1.101189,9.833210],rotation=[-15.000000,8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.068013,-1.078142,9.823056],rotation=[15.000000,-8.000000,-50.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.153255,-0.952063,10.078677],rotation=[-16.999999,5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.998586,-0.938982,10.074227],rotation=[16.999999,-5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[2.383906,-0.436409,10.223260],rotation=[-16.999999,5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-2.238338,-0.429349,10.229180],rotation=[16.999999,-5.999999,-34.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.436130,-0.332097,11.088904],rotation=[-16.999999,5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin13', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.272135,-0.321077,11.098670],rotation=[16.999999,-5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_Chin14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[1.590718,0.480565,10.887348],rotation=[-16.999999,5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_Chin14', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[-1.428775,0.498955,10.894156],rotation=[16.999999,-5.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Chin', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Jaw'), unreal.Transform(location=[0.044573,-0.194676,9.558805],rotation=[-0.000000,-0.000000,-30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('EyeAim_R', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000001,0.000024,0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_L', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000001,0.000024,0.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_R_inv', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[-3.403637,-2.214551,9.677375],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('EyeAim_L_inv', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_FacialRoot'), unreal.Transform(location=[3.413787,-2.187954,9.697227],rotation=[0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.USER)
	hierarchy_controller.add_bone('FACIAL_C_Neck2Root', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_02'), unreal.Transform(location=[-0.342149,2.550485,-0.000005],rotation=[-90.000000,-0.229488,78.349326],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_AdamsApple', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.032243,1.972358,3.811386],rotation=[-0.000000,0.000000,30.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_AdamsA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.026861,1.266942,4.007867],rotation=[-0.000000,0.000000,20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_AdamsA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.038624,2.713449,3.674319],rotation=[-0.000000,0.000000,20.000001],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.285868,1.798656,3.067580],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.308984,1.783419,2.922633],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.535538,0.743245,1.549974],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.554211,0.778607,1.383781],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[6.120483,-1.354031,-0.945527],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.342130,-1.325648,-0.972740],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.969666,-1.181810,-0.217207],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.041418,-1.136351,-0.309958],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.560339,0.326825,3.345129],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.575195,0.310403,3.252887],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[2.005767,2.714481,3.125034],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-2.026772,2.699590,2.936221],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.934858,-1.506958,1.267737],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.008788,-1.496911,1.208839],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[3.989357,2.130828,2.077622],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-3.965191,2.170059,1.820628],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[6.176070,-2.804094,-1.139305],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.465837,-2.774743,-1.157889],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.965942,0.082207,-0.712916],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-6.097777,0.122689,-0.770223],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.250590,0.890333,0.901795],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.350729,0.955981,0.804990],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.211922,-2.406914,0.264592],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.243229,-2.403838,0.200938],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckA9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.879281,-0.231765,-0.450591],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckA9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-4.961844,-0.163792,-0.565733],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.162567,-4.260538,-7.930252],rotation=[-0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.019356,-3.738114,-4.719928],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckBackA', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.459776,-3.688279,-4.857711],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.167043,-5.842956,-8.081673],rotation=[-0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-0.170062,-3.524352,-7.872452],rotation=[-0.000000,0.000000,-10.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[5.133842,-4.424729,-4.727829],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackA1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.507118,-4.371310,-4.830544],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[4.961009,-2.464689,-4.729115],rotation=[-25.000001,5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackA2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck2Root'), unreal.Transform(location=[-5.527438,-2.431979,-4.944385],rotation=[25.000001,-5.000000,25.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_Neck1Root', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='neck_01'), unreal.Transform(location=[0.471016,2.859724,-0.000001],rotation=[-90.000000,0.104422,76.101887],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.042903,-0.059255,4.030278],rotation=[-0.000000,-0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.157362,0.118136,3.390049],rotation=[-26.000000,-16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.152792,0.207130,3.074128],rotation=[26.000000,16.000000,19.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.391109,-2.956341,0.012493],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.568109,-2.881396,-0.113878],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.406207,-1.114670,1.155920],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.499527,-1.029345,1.046241],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.992068,-2.031062,-0.205727],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.062154,-1.942697,-0.333761],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.043393,-1.210262,4.362237],rotation=[0.000000,-0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.037570,0.777521,3.860673],rotation=[0.000000,-0.000000,18.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[2.360987,1.348245,3.521344],rotation=[-24.999999,-15.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB3', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-2.407702,1.439583,3.340215],rotation=[24.999999,15.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.724781,-1.543001,3.148616],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB4', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.682730,-1.505322,2.810780],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.542679,0.026954,1.967573],rotation=[-44.000000,-26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB5', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.472156,0.179526,1.547218],rotation=[44.000000,26.000000,27.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.248007,-3.928643,0.159124],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB6', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.499808,-3.874941,0.084767],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.929208,-1.611687,-0.711226],rotation=[-59.999999,-41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB7', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-7.011338,-1.526600,-0.966497],rotation=[59.999999,41.999998,43.999997],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[3.705304,0.540248,1.796368],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB8', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-3.768771,0.609698,1.723121],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.300303,-2.111555,1.376746],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB9', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.406764,-2.029171,1.267528],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.591716,-0.053582,0.946717],rotation=[-44.000003,-26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB10', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.652212,0.023123,0.850320],rotation=[44.000003,26.000001,27.000002],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[4.873095,-3.102911,0.015046],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB11', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-4.951925,-3.019499,-0.113247],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.269853,-0.956277,-0.429331],rotation=[-60.000002,-42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckB12', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.326140,-0.871260,-0.546007],rotation=[60.000002,42.000000,43.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.193476,-5.125470,-7.192270],rotation=[-0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.681829,-4.384252,-4.238776],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_NeckBackB', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.186957,-4.434003,-4.441344],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.172959,-7.165555,-7.058084],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_C_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-0.154288,-3.899396,-7.619439],rotation=[0.000000,-0.000000,5.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[5.049770,-6.178170,-4.019462],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackB1', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-5.618234,-6.166412,-4.231828],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_L_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[6.385571,-3.336989,-4.490564],rotation=[-22.999999,-9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('FACIAL_R_12IPV_NeckBackB2', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='FACIAL_C_Neck1Root'), unreal.Transform(location=[-6.824986,-3.441578,-4.701010],rotation=[22.999999,9.999999,19.999999],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516269,-1.314766,-1.427904],rotation=[-80.831221,-153.124391,163.263597],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[17.809523,0.000000,-0.000000],rotation=[-46.029601,4.358518,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_l'), unreal.Transform(location=[0.000000,-0.000000,-0.000000],rotation=[-0.000000,-0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[0.220349,-0.051737,5.804066],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[3.255006,8.509158,-1.063038],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[6.410149,0.544406,-4.761752],rotation=[48.194143,0.000000,180.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_l'), unreal.Transform(location=[1.467736,-7.644437,0.385938],rotation=[-0.000000,0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[11.813392,0.443878,6.281840],rotation=[3.110290,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_l'), unreal.Transform(location=[9.985832,-7.578162,-1.993106],rotation=[-3.110290,-175.708435,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[5.516220,-1.314811,1.427873],rotation=[-80.831221,26.875609,163.263597],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-17.809626,-0.000003,0.000438],rotation=[-46.029601,4.358518,-4.337345],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_correctiveRoot_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_r'), unreal.Transform(location=[0.000000,-0.000000,0.000000],rotation=[-0.000000,0.000000,0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-0.353314,0.044167,-5.993515],rotation=[-0.000000,0.000000,-0.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_fwd_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-3.387981,-8.516726,0.873696],rotation=[1.952005,-11.877574,98.945174],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_in_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-6.551142,-0.546132,4.556988],rotation=[48.194143,-0.000000,180.000000],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('upperarm_bck_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='upperarm_correctiveRoot_r'), unreal.Transform(location=[-1.599581,7.637699,-0.576368],rotation=[-0.000000,0.000000,-71.338606],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_out_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-12.041718,-0.442301,-6.316576],rotation=[3.110290,4.291571,-0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_scap_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='clavicle_r'), unreal.Transform(location=[-10.214471,7.567725,1.957083],rotation=[-3.110290,-175.708435,0.180530],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.242896,7.684768,-9.310202],rotation=[-82.006463,-112.633667,123.200882],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('clavicle_pec_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.237822,7.915499,9.635503],rotation=[-82.005484,67.346541,123.220872],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_l', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.961815,-4.626293,-15.443479],rotation=[-71.622023,-118.209498,130.384723],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	hierarchy_controller.add_bone('spine_04_latissimus_r', unreal.RigElementKey(type=unreal.RigElementType.BONE, name='spine_05'), unreal.Transform(location=[-9.967104,-4.627012,15.454673],rotation=[-84.725074,-23.824684,-145.976708],scale=[1.000000,1.000000,1.000000]), False, unreal.RigBoneType.IMPORTED)
	blueprint.add_member_variable('eyes_aim_rig', 'bool', False, False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 992.000000), 'RigUnit_GetControlFloat_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2.Control', 'CTRL_L_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 992.000000), 'SetCurveValue_1_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2.Curve', 'BrowDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4393.000000, 992.000000), 'SetCurveValue_1_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_1.Curve', 'BrowDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4761.000000, 992.000000), 'RigUnit_GetControlFloat_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_1.Control', 'CTRL_R_brow_down')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, 1248.000000), 'RigUnit_GetControlFloat_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2.Control', 'CTRL_C_brow_raiseIn')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5152.000000, 1632.000000), 'Add_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 1632.000000), 'RigUnit_GetControlFloat_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4960.000000, 1632.000000), 'Clamp_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_3.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_3.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4720.000000, 1632.000000), 'RigUnit_SetCurveValue_40_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 1856.000000), 'RigUnit_GetControlFloat_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-5152.000000, 1856.000000), 'Add_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_4.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4944.000000, 1856.000000), 'Clamp_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_4.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_4.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4720.000000, 1872.000000), 'RigUnit_SetCurveValue_40_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1360.000000), 'RigUnit_SetCurveValue_40_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1472.000000), 'RigUnit_SetCurveValue_40_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5145.000000, 1248.000000), 'SetCurveValue_1_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2.Curve', 'BrowInnerUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5520.000000, 2096.000000), 'RigUnit_GetControlFloat_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1.Control', 'CTRL_L_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 2304.000000), 'RigUnit_SetCurveValue_40_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2.Curve', 'CTRL_expressions_browRaiseOuterL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 2112.000000), 'SetCurveValue_1_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1.Curve', 'BrowOuterUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4704.000000, 2096.000000), 'RigUnit_GetControlFloat_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_2_2_1_1_1_1.Control', 'CTRL_R_brow_raiseOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4336.000000, 2304.000000), 'RigUnit_SetCurveValue_40_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_40_1_2_2_2_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4336.000000, 2112.000000), 'SetCurveValue_1_1_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_2_2_2_1_1.Curve', 'BrowOuterUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1376.000000), 'GetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue.Curve', 'CTRL_expressions_browLateralL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2462.000000, 1470.000000), 'Add_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2264.000000, 1495.000000), 'Clamp_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2012.000000, 1491.000000), 'SetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4.Curve', 'head_cm2_color_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2041.000000, 1648.000000), 'SetCurveValue_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5.Curve', 'head_wm2_normal_head_wm2_browsLateral_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1577.000000, 1344.000000), 'GetCurveValue_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_1.Curve', 'CTRL_expressions_browLateralR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1182.000000, 1439.000000), 'Add_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_5_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-983.000000, 1464.000000), 'Clamp_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_5_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_5_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-731.000000, 1460.000000), 'SetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_4_1.Curve', 'head_cm2_color_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-761.000000, 1616.000000), 'SetCurveValue_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_5_1.Curve', 'head_wm2_normal_head_wm2_browsLateral_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 1872.000000), 'GetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2537.000000, 1696.000000), 'Multiply_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 2752.000000), 'GetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2784.000000), 'SetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 2960.000000), 'SetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 1856.000000), 'GetCurveValue_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 1680.000000), 'Multiply_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_3_1.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1753.000000, 2752.000000), 'GetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1.Curve', 'CTRL_expressions_browRaiseInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1323.000000, 2789.000000), 'SetCurveValue_6_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_1.Curve', 'head_cm1_color_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1335.000000, 2963.000000), 'SetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2857.000000, 2288.000000), 'GetCurveValue_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2.Curve', 'CTRL_expressions_browDownL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2473.000000, 2288.000000), 'Add_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2249.000000, 2304.000000), 'Clamp_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2352.000000), 'SetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8.Curve', 'head_cm2_color_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1993.000000, 2528.000000), 'SetCurveValue_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9.Curve', 'head_wm2_normal_head_wm2_browsDown_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2521.000000, 2080.000000), 'Multiply_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1529.000000, 2288.000000), 'GetCurveValue_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_1.Curve', 'CTRL_expressions_browDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1145.000000, 2288.000000), 'Add_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_6_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_6_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-921.000000, 2304.000000), 'Clamp_6_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_6_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_6_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2352.000000), 'SetCurveValue_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_8_1.Curve', 'head_cm2_color_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-665.000000, 2528.000000), 'SetCurveValue_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_9_1.Curve', 'head_wm2_normal_head_wm2_browsDown_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1241.000000, 2080.000000), 'Multiply_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_4_1.B', '0.200000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2281.000000, 1888.000000), 'SetCurveValue_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_10.Curve', 'head_cm2_color_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2272.000000, 2045.000000), 'SetCurveValue_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_11.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 1872.000000), 'SetCurveValue_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_12.Curve', 'head_cm2_color_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1001.000000, 2064.000000), 'SetCurveValue_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_13.Curve', 'head_wm2_normal_head_wm2_noseWrinkler_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2793.000000, 3184.000000), 'GetCurveValue_2_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3.Curve', 'CTRL_expressions_browRaiseInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3216.000000), 'SetCurveValue_6_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2377.000000, 3392.000000), 'SetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1769.000000, 3168.000000), 'GetCurveValue_2_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_1.Curve', 'CTRL_expressions_browRaiseOuterR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3200.000000), 'SetCurveValue_6_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_6_2_1.Curve', 'head_cm1_color_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1353.000000, 3392.000000), 'SetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_7_2_1.Curve', 'head_wm1_normal_head_wm1_browsRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browConnect', unreal.Vector2D(-5577.000000, 928.000000), unreal.Vector2D(1632.000000, 1712.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_0')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('browMultipliersConnect', unreal.Vector2D(-2921.000000, 1280.000000), unreal.Vector2D(2704.000000, 2272.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -6015.000000), 'RigUnit_GetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5871.000000), 'SetCurveValue')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -6015.000000), 'RigUnit_GetControlFloat_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -5871.000000), 'SetCurveValue_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5183.000000), 'SetCurveValue_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5497.000000, -5327.000000), 'RigUnit_GetControlFloat_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3.Control', 'CTRL_L_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5183.000000), 'SetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5130.000000, -5327.000000), 'SetCurveValue_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2.Curve', 'EyeSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4363.000000, -5327.000000), 'SetCurveValue_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1.Curve', 'EyeSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4730.000000, -5327.000000), 'RigUnit_GetControlFloat_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1.Control', 'CTRL_R_eye_squintInner')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5551.000000), 'SetCurveValue_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14.Curve', 'CTRL_expressions_eyeWidenL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -5711.000000), 'SetCurveValue_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5567.000000), 'SetCurveValue_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_14_1.Curve', 'CTRL_expressions_eyeWidenR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -5711.000000), 'SetCurveValue_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_3_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4815.000000), 'SetCurveValue_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_2_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5496.000000, -4959.000000), 'RigUnit_GetControlFloat_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_3_1.Control', 'CTRL_L_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4815.000000), 'SetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_3_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5129.000000, -4959.000000), 'SetCurveValue_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_2_1.Curve', 'CheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -4959.000000), 'SetCurveValue_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_1.Curve', 'CheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -4959.000000), 'RigUnit_GetControlFloat_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_1_1_1.Control', 'CTRL_R_eye_cheekRaise')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5599.000000), 'RigUnit_GetControlVector2D')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -6031.000000), 'SetCurveValue_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5871.000000), 'SetCurveValue_16')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1893.000000, -5834.000000), 'SetCurveValue_16_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5631.000000), 'RigUnit_GetControlVector2D_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1892.000000, -6004.000000), 'SetCurveValue_15_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5695.000000), 'SetCurveValue_15_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5525.000000), 'SetCurveValue_16_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5487.000000), 'SetCurveValue_16_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_1_1.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5657.000000), 'SetCurveValue_15_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5359.000000), 'SetCurveValue_15_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -5189.000000), 'SetCurveValue_16_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5321.000000), 'SetCurveValue_15_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_1.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -5151.000000), 'SetCurveValue_16_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_1.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3145.000000, -5039.000000), 'SetCurveValue_15_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3146.000000, -4869.000000), 'SetCurveValue_16_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1896.000000, -5001.000000), 'SetCurveValue_15_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_15_2_1_2_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1897.000000, -4831.000000), 'SetCurveValue_16_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_16_2_1_2_1.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-3913.000000, -5343.000000), 'RigUnit_GetControlVector2D_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5967.000000), 'Clamp')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5695.000000), 'Add_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5519.000000), 'Multiply')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3337.000000, -5647.000000), 'Clamp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3529.000000, -5279.000000), 'Add_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3353.000000, -5279.000000), 'Clamp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5039.000000), 'Add_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -4879.000000), 'Multiply_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3369.000000, -4959.000000), 'Clamp_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5951.000000), 'Add_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_8.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5951.000000), 'Clamp_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_8.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_8.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5679.000000), 'Add_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5503.000000), 'Multiply_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2137.000000, -5631.000000), 'Clamp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2329.000000, -5263.000000), 'Add_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2153.000000, -5263.000000), 'Clamp_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_2_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -5023.000000), 'Add_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_7_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2361.000000, -4863.000000), 'Multiply_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-2169.000000, -4943.000000), 'Clamp_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_7_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_7_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-2665.000000, -5343.000000), 'RigUnit_GetControlVector2D_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2_1.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4351.000000), 'GetCurveValue_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4239.000000), 'GetCurveValue_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4127.000000), 'GetCurveValue_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -4015.000000), 'GetCurveValue_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3903.000000), 'GetCurveValue_3_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3791.000000), 'GetCurveValue_3_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4233.000000, -3679.000000), 'GetCurveValue_3_1_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3337.000000, -4159.000000), 'SetCurveValue_17')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5337.000000, -5839.000000), 'Clamp_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4649.000000, -5535.000000), 'Clamp_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -4303.000000), 'GetCurveValue_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4622.000000, -4370.000000), 'SetCurveValue_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1.Curve', 'EyeBlinkLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5449.000000, -4415.000000), 'GetCurveValue_4_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4239.000000), 'Multiply_8')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -4095.000000), 'Multiply_8_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3951.000000), 'Multiply_8_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3807.000000), 'Multiply_8_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3663.000000), 'Multiply_8_4')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3881.000000, -3519.000000), 'Multiply_8_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4383.000000), 'Multiply_7')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5492.000000, -4044.000000), 'GetCurveValue_4_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1.Curve', 'CTRL_expressions_eyeLookRightL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -4111.000000), 'SetCurveValue_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1.Curve', 'EyeBlinkLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -4156.000000), 'GetCurveValue_4_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4969.000000, -4127.000000), 'Multiply_7_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3791.000000), 'GetCurveValue_4_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1.Curve', 'CTRL_expressions_eyeLookLeftL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3855.000000), 'SetCurveValue_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1.Curve', 'EyeBlinkLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3900.000000), 'GetCurveValue_4_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3855.000000), 'Multiply_7_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3535.000000), 'GetCurveValue_4_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1.Curve', 'CTRL_expressions_eyeLookUpL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3599.000000), 'SetCurveValue_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1.Curve', 'EyeBlinkLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3644.000000), 'GetCurveValue_4_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3599.000000), 'Multiply_7_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3359.000000), 'Multiply_7_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5486.000000, -3282.000000), 'GetCurveValue_4_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4638.000000, -3346.000000), 'SetCurveValue_17_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1.Curve', 'EyeBlinkSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5465.000000, -3391.000000), 'GetCurveValue_4_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4985.000000, -3103.000000), 'Multiply_7_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5481.000000, -3023.000000), 'GetCurveValue_4_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4633.000000, -3087.000000), 'SetCurveValue_17_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5460.000000, -3132.000000), 'GetCurveValue_4_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_1_1_1_1_1.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4383.000000), 'GetCurveValue_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4271.000000), 'GetCurveValue_3_1_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_6.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4159.000000), 'GetCurveValue_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_1_1.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -4047.000000), 'GetCurveValue_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_2_1.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3935.000000), 'GetCurveValue_3_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_3_1.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3823.000000), 'GetCurveValue_3_1_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_4_1.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-1689.000000, -3711.000000), 'GetCurveValue_3_1_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_3_1_5_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-793.000000, -4191.000000), 'SetCurveValue_17_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4335.000000), 'GetCurveValue_4_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_2.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2078.000000, -4402.000000), 'SetCurveValue_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_2.Curve', 'EyeBlinkLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -4447.000000), 'GetCurveValue_4_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4271.000000), 'Multiply_8_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -4127.000000), 'Multiply_8_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_1_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3983.000000), 'Multiply_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_2_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3839.000000), 'Multiply_8_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_3_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3695.000000), 'Multiply_8_4_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_4_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_4_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1337.000000, -3551.000000), 'Multiply_8_5_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_8_5_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_8_5_1.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4415.000000), 'Multiply_7_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2948.000000, -4076.000000), 'GetCurveValue_4_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_2.Curve', 'CTRL_expressions_eyeLookRightR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -4143.000000), 'SetCurveValue_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_2.Curve', 'EyeBlinkLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -4143.000000), 'Multiply_7_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3823.000000), 'GetCurveValue_4_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_2.Curve', 'CTRL_expressions_eyeLookLeftR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3887.000000), 'SetCurveValue_17_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_2.Curve', 'EyeBlinkLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3903.000000), 'Multiply_7_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3567.000000), 'GetCurveValue_4_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookUpR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3631.000000), 'SetCurveValue_17_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_2.Curve', 'EyeBlinkLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2425.000000, -3631.000000), 'Multiply_7_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3391.000000), 'Multiply_7_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2942.000000, -3314.000000), 'GetCurveValue_4_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2094.000000, -3378.000000), 'SetCurveValue_17_1_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_2.Curve', 'EyeBlinkSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-2409.000000, -3135.000000), 'Multiply_7_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_7_1_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_7_1_1_1_1_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3055.000000), 'GetCurveValue_4_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2089.000000, -3119.000000), 'SetCurveValue_17_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_17_1_1_1_1_1_1_1_1.Curve', 'EyeBlinkCheekSquintRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -4191.000000), 'GetCurveValue_4_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_1.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3935.000000), 'GetCurveValue_4_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2937.000000, -3679.000000), 'GetCurveValue_4_2_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_3.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2921.000000, -3423.000000), 'GetCurveValue_4_2_2_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_4.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-2905.000000, -3167.000000), 'GetCurveValue_4_2_2_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_2_2_5.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeConnect', unreal.Vector2D(-5561.000000, -6095.000000), unreal.Vector2D(4954.000000, 3221.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_3')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1392.000000), 'Add_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 1392.000000), 'Clamp_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1392.000000), 'SetCurveValue_18')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18.Curve', 'head_cm1_color_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1504.000000), 'SetCurveValue_19')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19.Curve', 'head_wm1_normal_head_wm1_blink_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(838.000000, 1680.000000), 'Add_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 1680.000000), 'Clamp_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1680.000000), 'SetCurveValue_20')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20.Curve', 'head_cm1_color_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 1792.000000), 'SetCurveValue_21')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21.Curve', 'head_wm1_normal_head_wm1_squintInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2144.000000), 'SetCurveValue_21_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2032.000000), 'Clamp_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2032.000000), 'SetCurveValue_20_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2464.000000), 'SetCurveValue_21_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 2368.000000), 'Clamp_12_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2352.000000), 'SetCurveValue_20_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 3104.000000), 'SetCurveValue_21_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1.Curve', 'head_wm3_normal_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1046.000000, 2992.000000), 'Clamp_12_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2992.000000), 'SetCurveValue_20_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1.Curve', 'head_cm3_color_head_wm3_smile_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3408.000000), 'SetCurveValue_21_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(1062.000000, 3296.000000), 'Clamp_12_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3296.000000), 'SetCurveValue_20_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1.Curve', 'head_cm3_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3632.000000), 'SetCurveValue_21_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3520.000000), 'SetCurveValue_20_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1.Curve', 'head_wm3_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1392.000000), 'GetCurveValue_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4.Curve', 'CTRL_expressions_eyeLookDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1680.000000), 'GetCurveValue_4_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3.Curve', 'CTRL_expressions_eyeBlinkL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1680.000000), 'Multiply_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 1840.000000), 'Multiply_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 1840.000000), 'GetCurveValue_4_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1.Curve', 'CTRL_expressions_eyeSquintInnerL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2048.000000), 'Multiply_9_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2048.000000), 'GetCurveValue_4_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1.Curve', 'CTRL_expressions_eyeCheekRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2752.000000), 'SetCurveValue_21_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1318.000000, 2640.000000), 'SetCurveValue_20_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2224.000000), 'Multiply_9_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2224.000000), 'GetCurveValue_4_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2864.000000), 'Multiply_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3040.000000), 'Multiply_9_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3040.000000), 'GetCurveValue_4_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3248.000000), 'Multiply_11')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 3456.000000), 'GetCurveValue_4_3_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 3456.000000), 'Multiply_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3920.000000), 'SetCurveValue_21_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1334.000000, 3808.000000), 'SetCurveValue_20_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1360.000000), 'Add_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_10_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 1360.000000), 'Clamp_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_11_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_11_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1360.000000), 'SetCurveValue_18_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_18_1.Curve', 'head_cm1_color_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1472.000000), 'SetCurveValue_19_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_19_1.Curve', 'head_wm1_normal_head_wm1_blink_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2454.000000, 1648.000000), 'Add_11_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 1648.000000), 'Clamp_12_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1648.000000), 'SetCurveValue_20_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_2.Curve', 'head_cm1_color_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 1760.000000), 'SetCurveValue_21_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_2.Curve', 'head_wm1_normal_head_wm1_squintInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2112.000000), 'SetCurveValue_21_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_2.Curve', 'head_wm3_normal_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2000.000000), 'Clamp_12_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2000.000000), 'SetCurveValue_20_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_2.Curve', 'head_cm3_color_head_wm3_cheekRaiseInner_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2432.000000), 'SetCurveValue_21_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_3.Curve', 'head_wm3_normal_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 2368.000000), 'Clamp_12_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2320.000000), 'SetCurveValue_20_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_3.Curve', 'head_cm3_color_head_wm3_cheekRaiseOuter_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 3072.000000), 'SetCurveValue_21_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_2.Curve', 'head_wm3_normal_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2662.000000, 2960.000000), 'Clamp_12_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_2.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2960.000000), 'SetCurveValue_20_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_2.Curve', 'head_cm3_color_head_wm3_smile_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3376.000000), 'SetCurveValue_21_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(2678.000000, 3264.000000), 'Clamp_12_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_12_1_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_12_1_1_1_1_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3264.000000), 'SetCurveValue_20_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_2.Curve', 'head_cm3_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3600.000000), 'SetCurveValue_21_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3488.000000), 'SetCurveValue_20_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_2.Curve', 'head_wm3_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1360.000000), 'GetCurveValue_4_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_4.Curve', 'CTRL_expressions_eyeLookDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1648.000000), 'GetCurveValue_4_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_2.Curve', 'CTRL_expressions_eyeBlinkR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1648.000000), 'Multiply_9_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_2.B', '0.300000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 1808.000000), 'Multiply_9_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 1808.000000), 'GetCurveValue_4_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_2.Curve', 'CTRL_expressions_eyeSquintInnerR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2016.000000), 'Multiply_9_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2016.000000), 'GetCurveValue_4_3_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2.Curve', 'CTRL_expressions_eyeCheekRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2720.000000), 'SetCurveValue_21_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_2_1.Curve', 'head_wm3_normal_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2934.000000, 2608.000000), 'SetCurveValue_20_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_2_1.Curve', 'head_cm3_color_head_wm3_cheekRaiseUpper_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2192.000000), 'Multiply_9_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_2.B', '0.800000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2192.000000), 'GetCurveValue_4_3_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_2.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2832.000000), 'Multiply_10_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_10_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_10_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3008.000000), 'Multiply_9_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_1_1_1.B', '0.400000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3008.000000), 'GetCurveValue_4_3_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_2.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3216.000000), 'Multiply_11_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_11_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_11_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 3424.000000), 'GetCurveValue_4_3_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_1_1_1_1.Curve', 'CTRL_expressions_neckStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 3424.000000), 'Multiply_12_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_12_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_12_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3888.000000), 'SetCurveValue_21_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_21_1_1_1_1_1_1_1.Curve', 'head_wm2_normal_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(2950.000000, 3776.000000), 'SetCurveValue_20_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_20_1_1_1_1_1_1_1.Curve', 'head_cm2_color_head_wm2_mouthStretch_R')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eyeMultipliersConnect', unreal.Vector2D(182.000000, 1296.000000), unreal.Vector2D(3264.000000, 2784.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_5')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2543.000000), 'SetCurveValue_22')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2367.000000), 'SetCurveValue_23')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23.Curve', 'CTRL_expressions_jawFwd')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5177.000000, -2239.000000), 'SetCurveValue_23_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_23_1.Curve', 'CTRL_expressions_jawBack')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5433.000000, -2255.000000), 'Multiply_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_13.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_13.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -2543.000000), 'RigUnit_GetControlFloat_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_4.Control', 'CTRL_C_jaw_fwdBack')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4362.000000, -2527.000000), 'SetCurveValue_22_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-4729.000000, -2095.000000), 'RigUnit_GetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_3.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4617.000000, -2287.000000), 'Multiply_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_14.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_14.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2415.000000), 'SetCurveValue_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1.Curve', 'CTRL_expressions_jawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4360.000000, -2127.000000), 'SetCurveValue_22_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1.Curve', 'CTRL_expressions_jawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, -2239.000000), 'SetCurveValue_22_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4344.000000, -1807.000000), 'SetCurveValue_22_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_1_1_1.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, -1919.000000), 'SetCurveValue_22_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_22_1_2_1.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jawConnect', unreal.Vector2D(-5593.000000, -2607.000000), unreal.Vector2D(1632.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_6')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5529.000000, -1359.000000), 'RigUnit_GetControlFloat_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_5.Control', 'CTRL_C_mouth_funnelD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5113.000000, -1359.000000), 'SetCurveValue_24')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_24.Curve', 'MouthFunnel')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5513.000000, -1119.000000), 'RigUnit_GetControlFloat_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_6.Control', 'CTRL_C_mouth_purseD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5129.000000, -1119.000000), 'Multiply_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_15.B', '0.750000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4713.000000, -1103.000000), 'Clamp_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_13.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_13.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -1103.000000), 'SetCurveValue_25')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25.Curve', 'CTRL_expressions_mouthFunnelDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -991.000000), 'SetCurveValue_25_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1.Curve', 'CTRL_expressions_mouthFunnelDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -879.000000), 'SetCurveValue_25_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1.Curve', 'CTRL_expressions_mouthFunnelUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -767.000000), 'SetCurveValue_25_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1.Curve', 'CTRL_expressions_mouthFunnelUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4921.000000, -1103.000000), 'Add_12')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_12.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_12.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -591.000000), 'SetCurveValue_25_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -479.000000), 'SetCurveValue_25_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -367.000000), 'SetCurveValue_25_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -255.000000), 'SetCurveValue_25_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5097.000000, -127.000000), 'Multiply_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_16.B', '0.410000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, -79.000000), 'SetCurveValue_25_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 32.000000), 'SetCurveValue_25_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 144.000000), 'SetCurveValue_25_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_2_1.Curve', 'CTRL_expressions_mouthLipsTowardsUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4473.000000, 256.000000), 'SetCurveValue_25_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_25_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsTowardsUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5193.000000, -863.000000), 'SetCurveValue_26')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_26.Curve', 'MouthPucker')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -1343.000000), 'RigUnit_GetControlFloat_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_7.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1327.000000), 'SetCurveValue_27')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-3792.000000, -1104.000000), 'Multiply_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_17.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, -1104.000000), 'SetCurveValue_27_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3563.000000, -1319.000000), 'Clamp_14')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_14.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_14.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-3584.000000, -1104.000000), 'Clamp_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_15.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_15.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3865.000000, -767.000000), 'RigUnit_GetControlFloat_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8.Control', 'CTRL_L_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3369.000000, -1215.000000), 'SetCurveValue_27_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_2.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, -992.000000), 'SetCurveValue_27_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_27_1_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -767.000000), 'SetCurveValue_28')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28.Curve', 'MouthSmileLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3449.000000, -655.000000), 'SetCurveValue_28_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1.Curve', 'CTRL_expressions_mouthCornerPullL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -655.000000), 'SetCurveValue_28_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_1.Curve', 'CTRL_expressions_mouthCornerPullR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3001.000000, -767.000000), 'RigUnit_GetControlFloat_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_1.Control', 'CTRL_R_mouth_cornerPull')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2585.000000, -767.000000), 'SetCurveValue_28_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_2.Curve', 'MouthSmileRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3849.000000, -479.000000), 'RigUnit_GetControlFloat_8_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2.Control', 'CTRL_L_mouth_cornerDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -479.000000), 'SetCurveValue_28_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3.Curve', 'MouthFrownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3433.000000, -367.000000), 'SetCurveValue_28_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2.Curve', 'CTRL_expressions_mouthCornerDepressL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2976.000000, -224.000000), 'RigUnit_GetControlFloat_8_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_1.Control', 'CTRL_R_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2560.000000, -224.000000), 'SetCurveValue_28_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_1.Curve', 'MouthFrownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2560.000000, -112.000000), 'SetCurveValue_28_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipDepressR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3808.000000, 64.000000), 'RigUnit_GetControlFloat_8_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2.Control', 'CTRL_L_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3392.000000, 64.000000), 'SetCurveValue_28_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2.Curve', 'MouthDimpleLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3392.000000, 176.000000), 'SetCurveValue_28_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2.Curve', 'CTRL_expressions_mouthDimpleL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2960.000000, 48.000000), 'RigUnit_GetControlFloat_8_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_1.Control', 'CTRL_R_mouth_dimple')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 48.000000), 'SetCurveValue_28_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_1.Curve', 'MouthDimpleRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 160.000000), 'SetCurveValue_28_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_1.Curve', 'CTRL_expressions_mouthDimpleR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3792.000000, 367.000000), 'RigUnit_GetControlFloat_8_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2.Control', 'CTRL_L_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, 367.000000), 'SetCurveValue_28_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2.Curve', 'MouthStretchLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3376.000000, 479.000000), 'SetCurveValue_28_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2.Curve', 'CTRL_expressions_mouthStretchL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2960.000000, 351.000000), 'RigUnit_GetControlFloat_8_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_2_2_1.Control', 'CTRL_R_mouth_stretch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 351.000000), 'SetCurveValue_28_3_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_2_2_1.Curve', 'MouthStretchRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2544.000000, 463.000000), 'SetCurveValue_28_1_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_2_2_1.Curve', 'CTRL_expressions_mouthStretchR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2016.000000, -736.000000), 'RigUnit_GetControlFloat_9')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9.Control', 'CTRL_C_mouth_lipsRollD')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2000.000000, -1216.000000), 'RigUnit_GetControlFloat_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_9_1.Control', 'CTRL_C_mouth_lipsRollU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1584.000000, -1216.000000), 'SetCurveValue_30')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_30.Curve', 'MouthRollUpper')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1647.000000, -498.000000), 'SetCurveValue_31')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_31.Curve', 'MouthRollLower')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1977.000000, -143.000000), 'RigUnit_GetControlFloat_10')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10.Control', 'CTRL_C_jaw_ChinRaiseD')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1550.000000, -121.000000), 'SetCurveValue_32')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, -15.000000), 'SetCurveValue_32_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1561.000000, 96.000000), 'SetCurveValue_32_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1.Curve', 'MouthShrugLower')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 560.000000), 'SetCurveValue_32_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_1.Curve', 'MouthShrugUpper')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1961.000000, 320.000000), 'RigUnit_GetControlFloat_10_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_10_1.Control', 'CTRL_C_jaw_ChinRaiseU')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1534.000000, 342.000000), 'SetCurveValue_32_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_2.Curve', 'CTRL_expressions_jawChinRaiseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1545.000000, 448.000000), 'SetCurveValue_32_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_2.Curve', 'CTRL_expressions_jawChinRaiseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1033.000000, -143.000000), 'RigUnit_GetControlFloat_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11.Control', 'CTRL_L_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-633.000000, -127.000000), 'SetCurveValue_32_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3.Curve', 'CTRL_expressions_mouthPressUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, -21.000000), 'SetCurveValue_32_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3.Curve', 'CTRL_expressions_mouthPressDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-644.000000, 90.000000), 'SetCurveValue_32_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2.Curve', 'MouthPressLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-1032.000000, 257.000000), 'RigUnit_GetControlFloat_11_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_1.Control', 'CTRL_R_mouth_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-632.000000, 273.000000), 'SetCurveValue_32_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_1.Curve', 'CTRL_expressions_mouthPressUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 379.000000), 'SetCurveValue_32_1_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_1.Curve', 'CTRL_expressions_mouthPressDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-643.000000, 491.000000), 'SetCurveValue_32_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_1_2_1.Curve', 'MouthPressRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(758.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_1_1.Control', 'CTRL_R_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1158.000000, -863.000000), 'SetCurveValue_32_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_1_1.Curve', 'CTRL_expressions_mouthUpperLipRaiseR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(1147.000000, -757.000000), 'SetCurveValue_32_1_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_1_1.Curve', 'MouthUpperUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-137.000000, -879.000000), 'RigUnit_GetControlFloat_11_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_11_2_2.Control', 'CTRL_L_mouth_upperLipRaise')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(262.000000, -863.000000), 'SetCurveValue_32_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_3_2_2.Curve', 'CTRL_expressions_mouthUpperLipRaiseL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(251.000000, -757.000000), 'SetCurveValue_32_1_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_32_1_3_2_2.Curve', 'MouthUpperUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(-73.000000, -431.000000), 'RigUnit_GetControlVector2D_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_4.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-98.000000, -248.000000), 'RigUnit_GetControlFloat_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_12.Control', 'CTRL_C_mouth_close')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(326.000000, -287.000000), 'Multiply_19')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_19.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_19.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_if_node('float', 'None', unreal.Vector2D(614.000000, -367.000000), 'If_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.Condition', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.True', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('If_4.False', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(278.000000, -479.000000), 'GetCurveValue_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_6.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(848.000000, -304.000000), 'SetCurveValue_33')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_33.Curve', 'MouthClose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(282.000000, -77.000000), 'SetCurveValue_34')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 32.000000), 'SetCurveValue_34_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 144.000000), 'SetCurveValue_34_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(278.000000, 256.000000), 'SetCurveValue_34_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_34_1_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthConnect', unreal.Vector2D(-5593.000000, -1423.000000), unreal.Vector2D(7198.000000, 2150.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_7')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-5481.000000, 2976.000000), 'RigUnit_GetControlFloat_13')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_13.Control', 'CTRL_C_mouth_suckBlow')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3008.000000), 'SetCurveValue_35')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35.Curve', 'CTRL_expressions_mouthCheekSuckL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3120.000000), 'SetCurveValue_35_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1.Curve', 'CTRL_expressions_mouthCheekSuckR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3344.000000), 'SetCurveValue_35_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1.Curve', 'CTRL_expressions_mouthCheekBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3232.000000), 'SetCurveValue_35_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2.Curve', 'CTRL_expressions_mouthCheekBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3568.000000), 'SetCurveValue_35_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1.Curve', 'CTRL_expressions_mouthLipsBlowR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3456.000000), 'SetCurveValue_35_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1.Curve', 'CTRL_expressions_mouthLipsBlowL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5081.000000, 3680.000000), 'SetCurveValue_35_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1.Curve', 'CheekPuff')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('cheekConnect', unreal.Vector2D(-5545.000000, 2912.000000), unreal.Vector2D(850.000000, 914.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4473.000000, 2992.000000), 'RigUnit_GetControlFloat_14')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14.Control', 'CTRL_L_nose')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4153.000000, 3216.000000), 'SetCurveValue_35_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2.Curve', 'CTRL_expressions_noseNostrilDilateL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4153.000000, 3104.000000), 'SetCurveValue_35_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1.Curve', 'CTRL_expressions_noseWrinkleL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4144.000000, 2992.000000), 'SetCurveValue_35_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1.Curve', 'NoseSneerLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3728.000000), 'SetCurveValue_35_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_2_1.Curve', 'CTRL_expressions_noseNostrilDilateR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3616.000000), 'SetCurveValue_35_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_2_1_1_1.Curve', 'CTRL_expressions_noseWrinkleR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4151.000000, 3504.000000), 'SetCurveValue_35_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_35_1_1_1_1_1_1.Curve', 'NoseSneerRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-4480.000000, 3504.000000), 'RigUnit_GetControlFloat_14_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_14_1.Control', 'CTRL_R_nose')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('noseConnect', unreal.Vector2D(-4537.000000, 2928.000000), unreal.Vector2D(896.000000, 1056.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_9')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4752.000000, 1408.000000), 'Clamp_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_16.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_16.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1424.000000), 'SetCurveValue_36')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36.Curve', 'head_cm1_color_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1536.000000), 'SetCurveValue_36_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1.Curve', 'head_cm1_color_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1648.000000), 'SetCurveValue_36_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1.Curve', 'head_cm1_color_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1760.000000), 'SetCurveValue_36_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1.Curve', 'head_cm1_color_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 2208.000000), 'SetCurveValue_36_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_1_1.Curve', 'head_wm1_normal_head_wm13_lips_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1872.000000), 'SetCurveValue_36_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_2.Curve', 'head_wm1_normal_head_wm13_lips_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 1984.000000), 'SetCurveValue_36_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_2.Curve', 'head_wm1_normal_head_wm13_lips_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4976.000000, 2096.000000), 'SetCurveValue_36_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_36_1_1_2.Curve', 'head_wm1_normal_head_wm13_lips_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2368.000000), 'Multiply_9_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(1862.000000, 2368.000000), 'GetCurveValue_4_3_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2416.000000), 'Multiply_9_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(246.000000, 2416.000000), 'GetCurveValue_4_3_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1392.000000), 'Multiply_9_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_9_1_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_9_1_1_2_1_1_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3936.000000, 1392.000000), 'GetCurveValue_4_3_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1.Curve', 'CTRL_expressions_mouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(614.000000, 2592.000000), 'Multiply_20')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(2230.000000, 2544.000000), 'Multiply_20_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_20_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_20_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3888.000000, 1712.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3888.000000, 1824.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3936.000000, 1504.000000), 'GetCurveValue_4_3_1_1_2_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_4_3_1_1_2_1_1_1_2.Curve', 'CTRL_expressions_mouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1536.000000), 'Multiply_22')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(4816.000000, 2432.000000), 'Clamp_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5088.000000, 2432.000000), 'SetCurveValue_37')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37.Curve', 'head_cm1_color_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5088.000000, 2544.000000), 'SetCurveValue_37_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_L')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2432.000000), 'Multiply_23')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2432.000000), 'GetCurveValue_7')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7.Curve', 'CTRL_expressions_jawChinRaiseDL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(6368.000000, 2432.000000), 'Clamp_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_17_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_17_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6640.000000, 2432.000000), 'SetCurveValue_37_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_2.Curve', 'head_cm1_color_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6640.000000, 2544.000000), 'SetCurveValue_37_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_1.Curve', 'head_wm1_normal_head_wm1_chinRaise_R')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2432.000000), 'Multiply_23_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_23_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_23_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2432.000000), 'GetCurveValue_7_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_1.Curve', 'CTRL_expressions_jawChinRaiseDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2576.000000), 'Multiply_24')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2592.000000), 'GetCurveValue_7_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2.Curve', 'CTRL_expressions_mouthLipsTogetherUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2592.000000), 'GetCurveValue_7_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1.Curve', 'CTRL_expressions_mouthLipsTogetherUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2576.000000), 'Multiply_24_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2720.000000), 'Multiply_24_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2736.000000), 'GetCurveValue_7_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2.Curve', 'CTRL_expressions_mouthLipsTogetherDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2736.000000), 'GetCurveValue_7_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_1_1.Curve', 'CTRL_expressions_mouthLipsTogetherDR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2720.000000), 'Multiply_24_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_1_1.B', '0.250000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 2896.000000), 'Multiply_24_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 2912.000000), 'GetCurveValue_7_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1.Curve', 'CTRL_expressions_mouthLipsPurseUL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 2896.000000), 'SetCurveValue_37_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3.Curve', 'head_cm1_color_head_wm1_purse_UL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3008.000000), 'SetCurveValue_37_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 2896.000000), 'SetCurveValue_37_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_1.Curve', 'head_cm1_color_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3008.000000), 'SetCurveValue_37_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_1.Curve', 'head_wm1_normal_head_wm1_purse_UR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 2896.000000), 'Multiply_24_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 2912.000000), 'GetCurveValue_7_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_1.Curve', 'CTRL_expressions_mouthLipsPurseUR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4336.000000, 3168.000000), 'Multiply_24_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 3184.000000), 'GetCurveValue_7_2_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2.Curve', 'CTRL_expressions_mouthLipsPurseDL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3168.000000), 'SetCurveValue_37_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2.Curve', 'head_cm1_color_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4592.000000, 3280.000000), 'SetCurveValue_37_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2.Curve', 'head_wm1_normal_head_wm1_purse_DL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(5888.000000, 3184.000000), 'Multiply_24_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_24_2_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_24_2_1_2_1.B', '0.528000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(5472.000000, 3200.000000), 'GetCurveValue_7_2_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_1.Curve', 'CTRL_expressions_mouthLipsPurseDR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3184.000000), 'SetCurveValue_37_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_1.Curve', 'head_cm1_color_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(6144.000000, 3296.000000), 'SetCurveValue_37_1_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_1.Curve', 'head_wm1_normal_head_wm1_purse_DR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(3920.000000, 3536.000000), 'GetCurveValue_7_2_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_7_2_2_1_2_2.Curve', 'CTRL_expressions_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4320.000000, 3536.000000), 'SetCurveValue_37_3_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_3_2_2.Curve', 'head_cm1_color_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4320.000000, 3648.000000), 'SetCurveValue_37_1_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_37_1_2_2_2.Curve', 'head_wm1_normal_head_wm1_jawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouthMultipliersConnect', unreal.Vector2D(3824.000000, 1328.000000), unreal.Vector2D(3010.000000, 2455.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_10')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-4585.000000, -5855.000000), 'Clamp_9_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_9_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_9_1.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-4649.000000, -5679.000000), 'Multiply_6')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_6.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_6.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Clamp::Execute(in Value,in Minimum,in Maximum,out Result)', unreal.Vector2D(-5449.000000, -5535.000000), 'Clamp_10')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Clamp_10.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Minimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Clamp_10.Maximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-5449.000000, -5679.000000), 'Multiply_5')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_5.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_5.B', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_InverseExecution', 'Execute', unreal.Vector2D(-6313.000000, 4480.000000), 'InverseExecution')
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_ITERATOR, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5465.000000, 4304.000000), 'ArrayIterator')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))', unreal.Vector2D(-5497.000000, 4240.000000), 'RerouteNode_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3.Value', '((Type=Curve,Name="Default"),(Type=Curve,Name="EyeSquintLeft"),(Type=Curve,Name="EyeSquintRight"),(Type=Curve,Name="MouthFunnel"),(Type=Curve,Name="MouthPucker"),(Type=Curve,Name="MouthSmileLeft"),(Type=Curve,Name="MouthSmileRight"),(Type=Curve,Name="MouthFrownLeft"),(Type=Curve,Name="MouthFrownRight"),(Type=Curve,Name="MouthDimpleLeft"),(Type=Curve,Name="MouthDimpleRight"),(Type=Curve,Name="MouthStretchLeft"),(Type=Curve,Name="MouthStretchRight"),(Type=Curve,Name="MouthRollLower"),(Type=Curve,Name="MouthRollUpper"),(Type=Curve,Name="MouthShrugLower"),(Type=Curve,Name="MouthShrugUpper"),(Type=Curve,Name="MouthPressLeft"),(Type=Curve,Name="MouthPressRight"),(Type=Curve,Name="MouthLowerDownLeft"),(Type=Curve,Name="MouthLowerDownRight"),(Type=Curve,Name="MouthUpperUpLeft"),(Type=Curve,Name="MouthUpperUpRight"),(Type=Curve,Name="BrowDownLeft"),(Type=Curve,Name="BrowDownRight"),(Type=Curve,Name="BrowInnerUp"),(Type=Curve,Name="BrowOuterUpLeft"),(Type=Curve,Name="BrowOuterUpRight"),(Type=Curve,Name="CheekPuff"),(Type=Curve,Name="CheekSquintLeft"),(Type=Curve,Name="CheekSquintRight"),(Type=Curve,Name="NoseSneerLeft"),(Type=Curve,Name="NoseSneerRight"),(Type=Curve,Name="MouthClose"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_array_node_from_object_path(unreal.RigVMOpCode.ARRAY_GET_AT_INDEX, 'FRigElementKey', '/Script/ControlRig.RigElementKey', unreal.Vector2D(-5145.000000, 4304.000000), 'ArrayGetAtIndex')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ArrayGetAtIndex.Index', '0')
	blueprint.get_controller_by_name('RigVMModel').add_free_reroute_node(True, 'TArray<FRigElementKey>', '/Script/ControlRig.RigElementKey', False, 'None', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))', unreal.Vector2D(-5177.000000, 4240.000000), 'RerouteNode_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RerouteNode_3_1.Value', '((Type=Control,Name="None"),(Type=Control,Name="CTRL_L_eye_squintInner"),(Type=Control,Name="CTRL_R_eye_squintInner"),(Type=Control,Name="CTRL_C_mouth_funnelD"),(Type=Control,Name="CTRL_C_mouth_purseD"),(Type=Control,Name="CTRL_L_mouth_cornerPull"),(Type=Control,Name="CTRL_R_mouth_cornerPull"),(Type=Control,Name="CTRL_L_mouth_cornerDepress"),(Type=Control,Name="CTRL_R_mouth_cornerDepress"),(Type=Control,Name="CTRL_L_mouth_dimple"),(Type=Control,Name="CTRL_R_mouth_dimple"),(Type=Control,Name="CTRL_L_mouth_stretch"),(Type=Control,Name="CTRL_R_mouth_stretch"),(Type=Control,Name="CTRL_C_mouth_lipsRollD"),(Type=Control,Name="CTRL_C_mouth_lipsRollU"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseD"),(Type=Control,Name="CTRL_C_jaw_ChinRaiseU"),(Type=Control,Name="CTRL_L_mouth_press"),(Type=Control,Name="CTRL_R_mouth_press"),(Type=Control,Name="CTRL_L_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_R_mouth_lowerLipDepress"),(Type=Control,Name="CTRL_L_mouth_upperLipRaise"),(Type=Control,Name="CTRL_R_mouth_upperLipRaise"),(Type=Control,Name="CTRL_L_brow_down"),(Type=Control,Name="CTRL_R_brow_down"),(Type=Control,Name="CTRL_C_brow_raiseIn"),(Type=Control,Name="CTRL_L_brow_raiseOut"),(Type=Control,Name="CTRL_R_brow_raiseOut"),(Type=Control,Name="CTRL_C_mouth_suckBlow"),(Type=Control,Name="CTRL_L_eye_cheekRaise"),(Type=Control,Name="CTRL_R_eye_cheekRaise"),(Type=Control,Name="CTRL_L_nose"),(Type=Control,Name="CTRL_R_nose"),(Type=Control,Name="CTRL_C_mouth_close"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.0', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.1', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.2', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.3', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.4', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.5', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.6', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.7', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.8', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.9', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.10', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.11', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.12', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.13', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.14', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.15', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.16', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.17', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.18', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.19', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.20', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.21', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.22', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.23', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.24', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.25', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.26', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.27', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.28', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.29', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.30', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.31', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.32', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RerouteNode_3_1.Value.33', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5225.000000, 4464.000000), 'GetCurveValue_8')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io FloatValue,io ExecuteContext)', unreal.Vector2D(-4857.000000, 4240.000000), 'SetControlFloat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Control', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlFloat.FloatValue', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4960.000000), 'GetCurveValue_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3.Curve', 'EyeLookDownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4960.000000), 'Remap')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5072.000000), 'GetCurveValue_2_1_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_4.Curve', 'EyeLookUpLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 5056.000000), 'Add_15')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_15.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_15.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 4992.000000), 'SetControlVector2D_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4736.000000), 'GetCurveValue_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1.Curve', 'EyeLookInLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 4736.000000), 'Remap_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 4848.000000), 'GetCurveValue_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1.Curve', 'EyeLookOutLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4953.000000, 4832.000000), 'Add_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4960.000000), 'GetCurveValue_2_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_3_1.Curve', 'EyeLookDownRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4960.000000), 'Remap_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 5072.000000), 'GetCurveValue_2_1_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_2_2.Curve', 'EyeLookUpRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 5056.000000), 'Add_2_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_2_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_2_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3609.000000, 4992.000000), 'SetControlVector2D_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4736.000000), 'GetCurveValue_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_1_1.Curve', 'EyeLookOutRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4073.000000, 4736.000000), 'Remap_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4377.000000, 4848.000000), 'GetCurveValue_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_1_1.Curve', 'EyeLookInRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3833.000000, 4832.000000), 'Add_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5520.000000), 'GetCurveValue_2_1_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_3_2.Curve', 'JawOpen')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5440.000000), 'SetControlVector2D_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Control', 'CTRL_C_jaw')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5296.000000), 'GetCurveValue_2_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2.Curve', 'JawLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5296.000000), 'Remap_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5408.000000), 'GetCurveValue_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2.Curve', 'JawRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5392.000000), 'Add_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye', unreal.Vector2D(-5561.000000, 4672.000000), unreal.Vector2D(2226.000000, 551.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_0_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 5776.000000), 'SetControlVector2D_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Control', 'CTRL_C_mouth')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5744.000000), 'GetCurveValue_2_2_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1.Curve', 'MouthRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 5744.000000), 'Remap_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 5856.000000), 'GetCurveValue_2_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1.Curve', 'MouthLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 5840.000000), 'Add_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-4729.000000, 6112.000000), 'SetControlVector2D_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Control', 'CTRL_L_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1.Curve', 'EyeWideLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-5193.000000, 6080.000000), 'Remap_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-5497.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1.Curve', 'EyeBlinkLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-4954.000000, 6176.000000), 'Add_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3577.000000, 6112.000000), 'SetControlVector2D_3_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6080.000000), 'GetCurveValue_2_2_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1.Curve', 'EyeWideRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4041.000000, 6080.000000), 'Remap_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4345.000000, 6192.000000), 'GetCurveValue_2_1_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_1_1_2_1_1_1.Curve', 'EyeBlinkRight')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3802.000000, 6176.000000), 'Add_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlValue::Execute(in Control,in Weight,io Vector,io ExecuteContext)', unreal.Vector2D(-3593.000000, 5440.000000), 'SetControlVector2D_3_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Control', 'CTRL_R_eye_blink')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVector2D_3_2_1_1_1_1.Vector', '(X=0.000000,Y=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVector2D_3_2_1_1_1_1.Vector', True)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetCurveValue', 'Execute', unreal.Vector2D(-4361.000000, 5408.000000), 'GetCurveValue_2_2_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetCurveValue_2_2_2_1_1_1_1.Curve', 'JawForward')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(-4057.000000, 5408.000000), 'Remap_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Remap_1_2_1_1_1_1.Value', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.SourceMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMinimum', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Remap_1_2_1_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3818.000000, 5504.000000), 'Add_1_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_1_2_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_1_2_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('jaw', unreal.Vector2D(-5561.000000, 5232.000000), unreal.Vector2D(2260.000000, 443.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_2')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('mouth', unreal.Vector2D(-5561.000000, 5680.000000), unreal.Vector2D(1112.000000, 325.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_4')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('eye blink, wide', unreal.Vector2D(-5561.000000, 6016.000000), unreal.Vector2D(2276.000000, 327.000000), unreal.LinearColor(1.000000, 0.307292, 0.307292, 1.000000), 'EdGraphNode_Comment_5_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3561.000000, -5903.000000), 'Add_16')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_16.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_16.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4303.000000), 'Add')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -4015.000000), 'Add_17')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3657.000000, -3743.000000), 'Add_17_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3465.000000, -3615.000000), 'Add_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3449.000000, -3951.000000), 'Add_17_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-3257.000000, -3807.000000), 'Add_17_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4319.000000), 'Add_9')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_9.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_9.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -4031.000000), 'Add_17_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1129.000000, -3759.000000), 'Add_17_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-937.000000, -3631.000000), 'Add_17_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-921.000000, -3967.000000), 'Add_17_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-729.000000, -3823.000000), 'Add_17_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_17_1_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_17_1_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6089.000000, -5487.000000), 'SequenceAggregate_2')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6217.000000, -2415.000000), 'SequenceAggregate_2_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6169.000000, -1183.000000), 'SequenceAggregate_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6121.000000, 1136.000000), 'SequenceAggregate_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-6025.000000, 2944.000000), 'SequenceAggregate_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5865.000000, 4448.000000), 'SequenceAggregate_2_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5849.000000, 4832.000000), 'SequenceAggregate_2_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5840.000000, 5316.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceAggregate', 'Execute', unreal.Vector2D(-5828.000000, 5758.000000), 'SequenceAggregate_2_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2048.000000), 'Add_11_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2176.000000), 'Add_11_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 2544.000000), 'Add_11_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 2416.000000), 'Add_11_3_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(854.000000, 2992.000000), 'Add_11_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(806.000000, 2864.000000), 'Add_11_3_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(870.000000, 3376.000000), 'Add_11_3_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(822.000000, 3248.000000), 'Add_11_3_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2016.000000), 'Add_11_3_3')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2144.000000), 'Add_11_3_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 2368.000000), 'Add_11_3_3_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 2496.000000), 'Add_11_3_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2422.000000, 2832.000000), 'Add_11_3_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2470.000000, 2960.000000), 'Add_11_3_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2438.000000, 3216.000000), 'Add_11_3_3_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_3_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_3_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(2486.000000, 3344.000000), 'Add_11_3_1_2_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_11_3_1_2_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_11_3_1_2_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4304.000000, 1760.000000), 'Multiply_22_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(4496.000000, 1760.000000), 'Multiply_22_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_22_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_22_1_1.B', '0.625000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4496.000000, 1424.000000), 'Add_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4672.000000, 1632.000000), 'Add_18_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4672.000000, 2656.000000), 'Add_18_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(4544.000000, 2432.000000), 'Add_18_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(6224.000000, 2640.000000), 'Add_18_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_1_1_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_1_1_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(6096.000000, 2432.000000), 'Add_18_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_18_2_1.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_18_2_1.B', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_BeginExecution', 'Execute', unreal.Vector2D(-6400.000000, -5488.000000), 'BeginExecution')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-3840.000000, -224.000000), 'RigUnit_GetControlFloat_8_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_1_1.Control', 'CTRL_L_mouth_lowerLipDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3424.000000, -224.000000), 'SetCurveValue_28_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_1_1.Curve', 'MouthFrownLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-3424.000000, -112.000000), 'SetCurveValue_28_1_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_1_1.Curve', 'CTRL_expressions_mouthLowerLipDepressL')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(-2992.000000, -480.000000), 'RigUnit_GetControlFloat_8_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_8_2_3.Control', 'CTRL_R_mouth_cornerDepress')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2576.000000, -480.000000), 'SetCurveValue_28_3_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_3_3.Curve', 'MouthFrownRight')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-2576.000000, -368.000000), 'SetCurveValue_28_1_2_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_28_1_2_3.Curve', 'CTRL_expressions_mouthCornerDepressR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1264.000000), 'RigUnit_SetCurveValue_76_1_2_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_3.Curve', 'CTRL_expressions_mouthUpperLipRollOutR')
	RigUnit_AlphaInterp_22_1_1_3_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_3.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_3.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_3.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_3.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1152.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_3.Curve', 'CTRL_expressions_mouthUpperLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -1040.000000), 'RigUnit_SetCurveValue_76_1_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_1_2.Curve', 'CTRL_expressions_mouthUpperLipRollOutL')
	RigUnit_AlphaInterp_22_1_1_1_2_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_2.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_2.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_2.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -912.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_1_2.Curve', 'CTRL_expressions_mouthUpperLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -480.000000), 'RigUnit_SetCurveValue_76_1_2_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_1_1_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutL')
	RigUnit_AlphaInterp_22_1_1_1_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_1_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_1_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -352.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_mouthLowerLipRollInL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -736.000000), 'RigUnit_SetCurveValue_76_1_2_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_2_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipRollOutR')
	RigUnit_AlphaInterp_22_1_1_2_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_2_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_22_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_2_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_22_1_1_2_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_22_1_1_2_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-1072.000000, -608.000000), 'RigUnit_SetCurveValue_76_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_76_1_1_1_1_2_1.Curve', 'CTRL_expressions_mouthLowerLipRollInR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Multiply::Execute(in A,in B,out Result)', unreal.Vector2D(-1680.000000, -896.000000), 'Multiply_18')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Multiply_18.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.A', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Multiply_18.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(-1472.000000, -905.952393), 'Add_13')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('Add_13.A', 'double', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_13.A', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('Add_13.B', '0.000000')
	RigUnit_AlphaInterp_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_76_1_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Value', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.Bias', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bMapRange', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.OutRange', '(Min=0.000000,Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bClampResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.ClampMin', '0.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.bInterpResult', 'False')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4384.000000, 1104.000000), 'RigUnit_SetCurveValue_26')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_26.Curve', 'CTRL_expressions_browDownR')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-5152.000000, 1104.000000), 'RigUnit_SetCurveValue_48')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_48.Curve', 'CTRL_expressions_browDownL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3328.000000), 'RigUnit_SetCurveValue_98')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_98.Curve', 'CTRL_expressions_noseWrinkleUpperL')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(-4160.000000, 3840.000000), 'RigUnit_SetCurveValue_99')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_99.Curve', 'CTRL_expressions_noseWrinkleUpperR')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(5008.000000, 5296.000000), 'RigUnit_GetControlFloat_21')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_21.Control', 'CTRL_C_tongue_press')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5440.000000, 5264.000000), 'RigUnit_SetCurveValue_19')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_19.Curve', 'CTRL_expressions_tonguePress')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(3984.000000, 5120.000000), 'RigUnit_GetControlFloat_52')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_52.Control', 'CTRL_C_tongue_narrowWide')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4416.000000, 5088.000000), 'RigUnit_SetCurveValue_50')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_50.Curve', 'CTRL_expressions_tongueNarrow')
	RigUnit_AlphaInterp_18_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_50.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_18')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_18.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_18.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_18.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(3968.000000, 4784.000000), 'RigUnit_GetControlFloat_74')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_74.Control', 'CTRL_C_tongue_inOut')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4384.000000, 4736.000000), 'RigUnit_SetCurveValue_72')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_72.Curve', 'CTRL_expressions_tongueIn')
	RigUnit_AlphaInterp_15_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_72.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4160.000000), 'RigUnit_SetCurveValue_73')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73.Curve', 'CTRL_expressions_tongueLeft')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(3936.000000, 4336.000000), 'RigUnit_GetControlVector2D_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_4_1.Control', 'CTRL_C_tongue')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4288.000000), 'RigUnit_SetCurveValue_73_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1.Curve', 'CTRL_expressions_tongueRight')
	RigUnit_AlphaInterp_12_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4544.000000), 'RigUnit_SetCurveValue_73_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1.Curve', 'CTRL_expressions_tongueDown')
	RigUnit_AlphaInterp_11_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4368.000000, 4416.000000), 'RigUnit_SetCurveValue_73_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2.Curve', 'CTRL_expressions_tongueUp')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Tongue Left/Right Up/Down', unreal.Vector2D(3872.000000, 4080.000000), unreal.Vector2D(976.000000, 1344.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_0_2')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4384.000000, 4864.000000), 'RigUnit_SetCurveValue_72_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_72_1.Curve', 'CTRL_expressions_tongueOut')
	RigUnit_AlphaInterp_15_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_72_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_15_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_15_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_15_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(4416.000000, 5216.000000), 'RigUnit_SetCurveValue_50_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_50_1.Curve', 'CTRL_expressions_tongueWide')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4112.000000), 'RigUnit_SetCurveValue_73_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_3.Curve', 'CTRL_expressions_tongueTipLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4240.000000), 'RigUnit_SetCurveValue_73_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_2.Curve', 'CTRL_expressions_tongueTipRight')
	RigUnit_AlphaInterp_12_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4496.000000), 'RigUnit_SetCurveValue_73_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1_1.Curve', 'CTRL_expressions_tongueTipDown')
	RigUnit_AlphaInterp_11_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4368.000000), 'RigUnit_SetCurveValue_73_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2_1.Curve', 'CTRL_expressions_tongueTipUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(4992.000000, 4288.000000), 'RigUnit_GetControlVector2D_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_5.Control', 'CTRL_C_tongue_tip')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5344.000000, 4656.000000), 'RigUnit_SetCurveValue_73_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_3_1.Curve', 'CTRL_expressions_tongueRollLeft')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 4800.000000), 'RigUnit_SetCurveValue_73_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_2_1.Curve', 'CTRL_expressions_tongueRollRight')
	RigUnit_AlphaInterp_12_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_12_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_12_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_12_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 5056.000000), 'RigUnit_SetCurveValue_73_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_1_1_1_1.Curve', 'CTRL_expressions_tongueRollDown')
	RigUnit_AlphaInterp_11_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('RigUnit_SetCurveValue_73_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_11_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_11_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_11_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(5392.000000, 4928.000000), 'RigUnit_SetCurveValue_73_2_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_73_2_1_1.Curve', 'CTRL_expressions_tongueRollUp')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(4992.000000, 4832.000000), 'RigUnit_GetControlVector2D_6')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_6.Control', 'CTRL_C_tongue_roll')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Tongue Tip and Roll', unreal.Vector2D(4912.000000, 4080.000000), unreal.Vector2D(928.000000, 1376.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_6_1')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_AimItem', 'Execute', unreal.Vector2D(6684.000000, 4149.000000), 'AimItem')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Item', '(Type=Bone,Name="EyeAim_L")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Primary', '(Weight=1.000000,Axis=(X=0.000000,Y=0.000000,Z=1.000000),Target=(X=1.000000,Y=0.000000,Z=0.000000),Kind=Location,Space=(Type=Bone))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Primary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Secondary', '(Weight=1.000000,Axis=(X=1.000000,Y=-0.000000,Z=0.000000),Target=(X=0.000000,Y=0.000000,Z=-1.000000),Kind=Direction,Space=(Type=Bone,Name="head"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.Secondary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem.DebugSettings', '(Scale=10.000000,WorldOffset=(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000)))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem.DebugSettings.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6320.000000, 4336.000000), 'GetTransform_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4.Item', '(Type=Control,Name="CTRL_L_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_4.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_AimItem', 'Execute', unreal.Vector2D(7516.000000, 4149.000000), 'AimItem_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Item', '(Type=Bone,Name="EyeAim_R")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Primary', '(Weight=1.000000,Axis=(X=0.000000,Y=0.000000,Z=1.000000),Target=(X=1.000000,Y=0.000000,Z=0.000000),Kind=Location,Space=(Type=Bone))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Primary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Secondary', '(Weight=1.000000,Axis=(X=1.000000,Y=0.000000,Z=0.000000),Target=(X=0.000000,Y=0.000000,Z=-1.000000),Kind=Direction,Space=(Type=Bone,Name="head"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Axis', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Target', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.Secondary.Space', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('AimItem_1.DebugSettings', '(Scale=10.000000,WorldOffset=(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000)))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('AimItem_1.DebugSettings.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(7152.000000, 4384.000000), 'GetTransform_4_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4_1.Item', '(Type=Control,Name="CTRL_R_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_4_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_4_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Aim Controls', unreal.Vector2D(6240.000000, 4096.000000), unreal.Vector2D(1808.000000, 896.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_5_2')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8336.000000, 4256.000000), 'RigUnit_GetControlFloat_17')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8832.000000, 4224.000000), 'RigUnit_SetCurveValue_15')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetCurveValue_15.Curve', 'CTRL_expressions_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_CollectionLoop', 'Execute', unreal.Vector2D(9952.000000, 4223.000000), 'CollectionLoop')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Greater::Execute(in A,in B,out Result)', unreal.Vector2D(8448.000000, 4448.000000), 'MathFloatGreater')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatGreater.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatGreater.B', '0.500000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('SetControlVisibility::Execute(in Item,in Pattern,in bVisible,io ExecuteContext)', unreal.Vector2D(10592.000000, 4240.000000), 'SetControlVisibility')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVisibility.Item', '(Type=Control)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('SetControlVisibility.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetControlVisibility.bVisible', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Aim Controls', unreal.Vector2D(8224.000000, 4096.000000), unreal.Vector2D(2832.000000, 1312.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_60')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_DebugLineItemSpace', 'Execute', unreal.Vector2D(8928.000000, 4768.000000), 'DebugLineItemSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.A', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.B', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Color', '(R=0.000000,G=0.000000,B=0.000000,A=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.Color', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Thickness', '0.050000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.Space', '(Type=Bone)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.Space', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.WorldOffset', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace.bEnabled', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(8352.000000, 4624.000000), 'GetTransform_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3.Item', '(Type=Bone,Name="FACIAL_L_Eye")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(8352.000000, 4976.000000), 'GetTransform_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1.Item', '(Type=Control,Name="CTRL_L_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(9360.000000, 5072.000000), 'GetTransform_3_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1_1.Item', '(Type=Control,Name="CTRL_R_eyeAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_1_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_1_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(9328.000000, 4768.000000), 'GetTransform_3_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_2.Item', '(Type=Bone,Name="FACIAL_R_Eye")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_3_2.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_3_2.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_DebugLineItemSpace', 'Execute', unreal.Vector2D(10304.000000, 4816.000000), 'DebugLineItemSpace_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.A', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.B', '(X=0.000000,Y=0.000000,Z=0.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Color', '(R=0.000000,G=0.000000,B=0.000000,A=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.Color', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Thickness', '0.050000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.Space', '(Type=Bone)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.Space', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.WorldOffset', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('DebugLineItemSpace_1.WorldOffset.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('DebugLineItemSpace_1.bEnabled', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SequenceExecution', 'Execute', unreal.Vector2D(10240.000000, 4352.000000), 'SequenceExecution_6')
	blueprint.get_controller_by_name('RigVMModel').add_branch_node(unreal.Vector2D(10608.000000, 4448.000000), 'Branch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_CollectionItems', 'Execute', unreal.Vector2D(9520.000000, 4224.000000), 'CollectionItems')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('CollectionItems.Items', '((Type=Control,Name="CTRL_C_eyesAim"),(Type=Control,Name="CTRL_L_eyeAim"),(Type=Control,Name="CTRL_R_eyeAim"),(Type=Control,Name="FRM_convergenceGUI"),(Type=Control,Name="CTRL_convergenceSwitch"))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.0', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.1', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.2', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.3', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('CollectionItems.Items.4', True)
	blueprint.get_controller_by_name('RigVMModel').add_variable_node('eyes_aim_rig', 'bool', None, False, '', unreal.Vector2D(8944.000000, 4448.000000), 'VariableNode')
	blueprint.get_controller_by_name('RigVMModel').add_variable_node('eyes_aim_rig', 'bool', None, True, '', unreal.Vector2D(9712.000000, 4544.000000), 'VariableNode_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7504.000000, 6047.000000), 'RigUnit_GetControlVector2D_2_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_2_2.Control', 'CTRL_L_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7504.000000, 6255.000000), 'RigUnit_GetControlVector2D_8')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_8.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7888.000000, 5967.000000), 'MathFloatAdd')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7968.000000, 6319.000000), 'MathFloatAdd_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8768.000000, 5888.000000), 'SetCurveValue_1_1_1_2_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_2.Curve', 'CTRL_expressions_eyeLookLeftL')
	RigUnit_AlphaInterp_4_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_4')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_4.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_4.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_4.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8784.000000, 6063.000000), 'SetCurveValue_1_1_1_2_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_2.Curve', 'CTRL_expressions_eyeLookRightL')
	RigUnit_AlphaInterp_2_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_2_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_2_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_2_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7165.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookRightR')
	RigUnit_AlphaInterp_8_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_8_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_8_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_8_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_8_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7552.000000, 6463.000000), 'MathFloatAdd_19_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_19_2.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8784.000000, 6303.000000), 'SetCurveValue_1_1_1_2_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_2.Curve', 'CTRL_expressions_eyeLookUpL')
	RigUnit_AlphaInterp_27_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_27')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_27.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_27.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_27.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8800.000000, 6511.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_2')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_2.Curve', 'CTRL_expressions_eyeLookDownL')
	RigUnit_AlphaInterp_1_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_2.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_1_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_1_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_1_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7597.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.Curve', 'CTRL_expressions_eyeLookDownR')
	RigUnit_AlphaInterp_9_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_9_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InRange', '(Min=0.000000,Max=-1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_9_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_9_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_9_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Left Eye', unreal.Vector2D(6304.000000, 5712.000000), unreal.Vector2D(3008.000000, 1056.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_58')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8480.000000, 5999.000000), 'MathFloatLerp')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8096.000000, 6175.000000), 'RigUnit_GetControlFloat_17_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17_1.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8496.000000, 6367.000000), 'MathFloatLerp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7584.000000, 7439.000000), 'RigUnit_GetControlVector2D_3_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_3_1.Control', 'CTRL_R_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(8096.000000, 7535.000000), 'MathFloatAdd_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_1_1_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out Vector,out Minimum,out Maximum)', unreal.Vector2D(7584.000000, 7151.000000), 'RigUnit_GetControlVector2D_8_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlVector2D_8_1_1.Control', 'CTRL_C_eye')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(8096.000000, 7055.000000), 'MathFloatAdd_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_2_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8640.000000, 7103.000000), 'MathFloatLerp_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_2.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_2.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(8573.000000, 7581.000000), 'MathFloatLerp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatLerp_1_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatLerp_1_1.B', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(8224.000000, 7359.000000), 'RigUnit_GetControlFloat_17_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_17_1_1.Control', 'CTRL_lookAtSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8925.000000, 7037.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.Curve', 'CTRL_expressions_eyeLookLeftR')
	RigUnit_AlphaInterp_26_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_26_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_26_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_26_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_26_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_SetCurveValue', 'Execute', unreal.Vector2D(8957.000000, 7421.000000), 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.Curve', 'CTRL_expressions_eyeLookUpR')
	RigUnit_AlphaInterp_28_1_info = blueprint.get_controller_by_name('RigVMModel').add_injected_node_from_struct_path('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.Value', True, '/Script/ControlRig.RigUnit_AlphaInterp', 'Execute', 'Value', 'Result', 'RigUnit_AlphaInterp_28_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.Scale', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.bMapRange', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_28_1.InRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.OutRange', '(Max=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_AlphaInterp_28_1.OutRange', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.bClampResult', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.ClampMax', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InterpSpeedIncreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_AlphaInterp_28_1.InterpSpeedDecreasing', '10.000000')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Right Eye', unreal.Vector2D(6272.000000, 6879.000000), unreal.Vector2D(3184.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_61')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6336.000000, 6015.000000), 'GetTransform_5')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5.Item', '(Type=Bone,Name="EyeAim_L")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_5.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5.Space', 'LocalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Cast::Execute(in Value,out Result)', unreal.Vector2D(6752.000000, 6063.000000), 'MathQuaternionToRotator')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathQuaternionToRotator.Value', 'FQuat', '/Script/CoreUObject.Quat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathQuaternionToRotator.Value', '(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathQuaternionToRotator.Value', False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 5904.000000), 'MathFloatRemap')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.SourceMinimum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.SourceMaximum', '-40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.TargetMinimum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 6239.000000), 'MathFloatRemap_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.SourceMaximum', '-30.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7072.000000, 6447.000000), 'MathFloatRemap_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.SourceMaximum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(6321.000000, 7103.000000), 'GetTransform_5_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5_1.Item', '(Type=Bone,Name="EyeAim_R")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('GetTransform_5_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('GetTransform_5_1.Space', 'LocalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Cast::Execute(in Value,out Result)', unreal.Vector2D(6737.000000, 7151.000000), 'MathQuaternionToRotator_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathQuaternionToRotator_1.Value', 'FQuat', '/Script/CoreUObject.Quat')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathQuaternionToRotator_1.Value', '(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000)')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathQuaternionToRotator_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7184.000000, 6991.000000), 'MathFloatRemap_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_2.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.SourceMinimum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.SourceMaximum', '-40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.TargetMinimum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7056.000000, 7247.000000), 'MathFloatRemap_1_2')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_2.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.SourceMaximum', '-30.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.TargetMaximum', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_2.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Remap::Execute(in Value,in SourceMinimum,in SourceMaximum,in TargetMinimum,in TargetMaximum,in bClamp,out Result)', unreal.Vector2D(7056.000000, 7535.000000), 'MathFloatRemap_1_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatRemap_1_1_1.Value', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.SourceMaximum', '40.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.TargetMaximum', '-1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathFloatRemap_1_1_1.bClamp', 'true')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Add::Execute(in A,in B,out Result)', unreal.Vector2D(7392.000000, 7583.000000), 'MathFloatAdd_19_2_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathFloatAdd_19_2_1.A', 'float', 'None')
	blueprint.get_controller_by_name('RigVMModel').add_comment_node('Eye Convergence', unreal.Vector2D(9792.000000, 6320.000000), unreal.Vector2D(2128.000000, 928.000000), unreal.LinearColor(1.000000, 1.000000, 1.000000, 1.000000), 'EdGraphNode_Comment_61_1')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('GetControlValue::Execute(in Control,out FloatValue,out Minimum,out Maximum)', unreal.Vector2D(9872.000000, 6640.000000), 'RigUnit_GetControlFloat_12_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetControlFloat_12_1.Control', 'CTRL_convergenceSwitch')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Set Transform::Execute(in Item,in Space,in bInitial,in Value,in Weight,in bPropagateToChildren,io ExecuteContext)', unreal.Vector2D(11552.000000, 6496.000000), 'RigUnit_SetTransform')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('RigUnit_SetTransform.Value', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Item', '(Type=Null,Name="CTRL_L_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Value', '(Rotation=(X=0.707107,Y=0.000000,Z=0.707107,W=0.000000),Translation=(X=3.105512,Y=38.008495,Z=149.175949),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform.Value.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform.bPropagateToChildren', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Set Transform::Execute(in Item,in Space,in bInitial,in Value,in Weight,in bPropagateToChildren,io ExecuteContext)', unreal.Vector2D(11568.000000, 6816.000000), 'RigUnit_SetTransform_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('RigUnit_SetTransform_1.Value', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Item', '(Type=Null,Name="CTRL_R_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Value', '(Rotation=(X=0.707107,Y=0.000000,Z=0.707107,W=0.000000),Translation=(X=-3.132267,Y=38.008495,Z=149.181046),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_SetTransform_1.Value.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.Weight', '1.000000')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_SetTransform_1.bPropagateToChildren', 'True')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(11360.000000, 6528.000000), 'MathTransformLerp_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathTransformLerp_1.A', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1.A', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.A.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1.B', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1.B.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_GetTransform', 'Execute', unreal.Vector2D(10336.000000, 6608.000000), 'RigUnit_GetTransform_3')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_3.Item', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('RigUnit_GetTransform_3.Item', True)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('RigUnit_GetTransform_3.Space', 'GlobalSpace')
	blueprint.get_controller_by_name('RigVMModel').add_template_node('Interpolate::Execute(in A,in B,in T,out Result)', unreal.Vector2D(11376.000000, 6944.000000), 'MathTransformLerp_1_1')
	blueprint.get_controller_by_name('RigVMModel').resolve_wild_card_pin('MathTransformLerp_1_1.A', 'FTransform', '/Script/CoreUObject.Transform')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1_1.A', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.A.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('MathTransformLerp_1_1.B', '(Rotation=(X=0.000000,Y=0.000000,Z=0.000000,W=1.000000),Translation=(X=0.000000,Y=0.000000,Z=0.000000),Scale3D=(X=1.000000,Y=1.000000,Z=1.000000))')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Rotation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Translation', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('MathTransformLerp_1_1.B.Scale3D', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_ProjectTransformToNewParent', 'Execute', unreal.Vector2D(10784.000000, 6400.000000), 'ProjectTransformToNewParent_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.Child', '(Type=Null,Name="CTRL_L_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.Child', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.bChildInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.OldParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.OldParent', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.bOldParentInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1.NewParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1.NewParent', False)
	blueprint.get_controller_by_name('RigVMModel').add_unit_node_from_struct_path('/Script/ControlRig.RigUnit_ProjectTransformToNewParent', 'Execute', unreal.Vector2D(10784.000000, 6816.000000), 'ProjectTransformToNewParent_1_1')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.Child', '(Type=Null,Name="CTRL_R_eyeAim_space")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.Child', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.bChildInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.OldParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.OldParent', False)
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.bOldParentInitial', 'True')
	blueprint.get_controller_by_name('RigVMModel').set_pin_default_value('ProjectTransformToNewParent_1_1.NewParent', '(Type=Control,Name="CTRL_C_eyesAim")')
	blueprint.get_controller_by_name('RigVMModel').set_pin_expansion('ProjectTransformToNewParent_1_1.NewParent', False)
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2.FloatValue', 'SetCurveValue_1_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_1.FloatValue', 'SetCurveValue_1_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1.FloatValue', 'Add_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_3.Result', 'Clamp_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_3.Result', 'RigUnit_SetCurveValue_40_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'Add_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1.FloatValue', 'Add_4.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_4.Result', 'Clamp_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_4.Result', 'RigUnit_SetCurveValue_40_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2.FloatValue', 'SetCurveValue_1_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_1.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_2_1_1.ExecuteContext', 'RigUnit_SetCurveValue_40_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'SetCurveValue_1_1_2_2_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_2_1_1_1_1.FloatValue', 'RigUnit_SetCurveValue_40_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_40_1_2_2_2.ExecuteContext', 'SetCurveValue_1_1_2_2_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue.Value', 'Add_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5.Result', 'Clamp_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5.Result', 'SetCurveValue_5.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_1.Value', 'Add_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_5_1.Result', 'Clamp_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_4_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_5_1.Result', 'SetCurveValue_5_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3.Result', 'Add_5.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1.Value', 'SetCurveValue_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1.Value', 'SetCurveValue_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_3_1.Result', 'Add_5_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4.ExecuteContext', 'SetCurveValue_5.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5.ExecuteContext', 'SetCurveValue_4_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_4_1.ExecuteContext', 'SetCurveValue_5_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6.ExecuteContext', 'SetCurveValue_7.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7.ExecuteContext', 'SetCurveValue_6_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_1.ExecuteContext', 'SetCurveValue_7_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2.Value', 'Add_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6.Result', 'Clamp_6.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6.Result', 'SetCurveValue_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'Multiply_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4.Result', 'Add_6.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8.ExecuteContext', 'SetCurveValue_9.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_1.Value', 'Add_6_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_6_1.Result', 'Clamp_6_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_8_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_6_1.Result', 'SetCurveValue_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_4_1.Result', 'Add_6_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_8_1.ExecuteContext', 'SetCurveValue_9_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'Multiply_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9.ExecuteContext', 'SetCurveValue_8_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_9_1.ExecuteContext', 'SetCurveValue_6.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2.Value', 'SetCurveValue_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_5_1.ExecuteContext', 'SetCurveValue_10.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_10.ExecuteContext', 'SetCurveValue_11.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2.Value', 'SetCurveValue_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_11.ExecuteContext', 'SetCurveValue_12.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_12.ExecuteContext', 'SetCurveValue_13.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_13.ExecuteContext', 'SetCurveValue_8.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_6_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3.Value', 'SetCurveValue_7_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2.ExecuteContext', 'SetCurveValue_7_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_1.ExecuteContext', 'SetCurveValue_6_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_6_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_1.Value', 'SetCurveValue_7_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_6_2_1.ExecuteContext', 'SetCurveValue_7_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2.ExecuteContext', 'SetCurveValue_6_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3.FloatValue', 'SetCurveValue_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1.FloatValue', 'SetCurveValue_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue.ExecuteContext', 'SetCurveValue_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3.ExecuteContext', 'SetCurveValue_14.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2.ExecuteContext', 'SetCurveValue_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_3_1.ExecuteContext', 'SetCurveValue_14_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14_1.ExecuteContext', 'SetCurveValue_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2.ExecuteContext', 'SetCurveValue_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3.ExecuteContext', 'SetCurveValue_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1.ExecuteContext', 'SetCurveValue_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_3_1.FloatValue', 'SetCurveValue_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1_1_1.FloatValue', 'SetCurveValue_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_2_1.ExecuteContext', 'SetCurveValue_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_3_1.ExecuteContext', 'SetCurveValue_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_1.ExecuteContext', 'SetCurveValue_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1.ExecuteContext', 'SetCurveValue_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_2_1_1.ExecuteContext', 'SetCurveValue_15.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15.ExecuteContext', 'SetCurveValue_16.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1.ExecuteContext', 'SetCurveValue_16_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2.ExecuteContext', 'SetCurveValue_16_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_1_1.ExecuteContext', 'SetCurveValue_16_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1.ExecuteContext', 'SetCurveValue_16_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_1.ExecuteContext', 'SetCurveValue_16_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2.ExecuteContext', 'SetCurveValue_16_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_15_2_1_2_1.ExecuteContext', 'SetCurveValue_16_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp.Result', 'SetCurveValue_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1.Result', 'Multiply.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply.Result', 'Clamp_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_15_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1.Result', 'SetCurveValue_16_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2.Result', 'Clamp_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_15_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2.Result', 'SetCurveValue_16_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.Y', 'Add_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.Y', 'Add_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7.Result', 'Multiply_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1.Result', 'Clamp_7.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_15_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7.Result', 'SetCurveValue_16_2_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16.ExecuteContext', 'SetCurveValue_15_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2.ExecuteContext', 'SetCurveValue_15_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1.ExecuteContext', 'SetCurveValue_15_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2.ExecuteContext', 'SetCurveValue_15_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_8.Result', 'Clamp_8.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1.Result', 'Multiply_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_2.Result', 'Clamp_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_1.Result', 'Clamp_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_7_1.Result', 'Multiply_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_1_1.Result', 'Clamp_7_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_8.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.X', 'Add_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.X', 'Add_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_1.Vector.Y', 'Add_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_1.Vector.Y', 'Add_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_15_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_8.Result', 'SetCurveValue_16_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_15_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_1_1.Result', 'SetCurveValue_16_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_15_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_2_1.Result', 'SetCurveValue_16_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_15_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_7_1.Result', 'SetCurveValue_16_2_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1.ExecuteContext', 'SetCurveValue_15_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_1_1.ExecuteContext', 'SetCurveValue_15_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_1.ExecuteContext', 'SetCurveValue_15_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_14.ExecuteContext', 'SetCurveValue_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9.Result', 'SetCurveValue.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10_1.Result', 'SetCurveValue_14_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1.Value', 'Multiply_8.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1.Value', 'Multiply_8_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2.Value', 'Multiply_8_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3.Value', 'Multiply_8_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4.Value', 'Multiply_8_4.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5.Value', 'Multiply_8_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7.Result', 'SetCurveValue_17_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1.Result', 'SetCurveValue_17_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_16_2_1_2_1.ExecuteContext', 'SetCurveValue_17_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1.Result', 'SetCurveValue_17_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_6.Value', 'Multiply_8_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_1_1.Value', 'Multiply_8_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_2_1.Value', 'Multiply_8_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_3_1.Value', 'Multiply_8_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_4_1.Value', 'Multiply_8_4_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_1_5_1.Value', 'Multiply_8_5_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_2.Result', 'SetCurveValue_17_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_2.Result', 'SetCurveValue_17_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_2.Result', 'SetCurveValue_17_1_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_7_1_1_1_1_1_1.Result', 'SetCurveValue_17_1_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17_1_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_17_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_17.ExecuteContext', 'SetCurveValue_17_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10.Result', 'Clamp_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11.Result', 'SetCurveValue_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11.Result', 'Clamp_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_20.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12.Result', 'SetCurveValue_21.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_20_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1.Result', 'SetCurveValue_21_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_20_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1.Result', 'SetCurveValue_21_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_20_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1.Result', 'SetCurveValue_21_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4.Value', 'Add_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3.Value', 'Multiply_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9.Result', 'Add_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1.Value', 'Multiply_9_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1.Result', 'Add_11.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1.Value', 'Multiply_9_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_20_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'SetCurveValue_21_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_9_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1.Value', 'Multiply_10.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_9_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1.Value', 'Multiply_11.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1.Value', 'Multiply_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_20_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'SetCurveValue_21_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18.ExecuteContext', 'SetCurveValue_19.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19.ExecuteContext', 'SetCurveValue_20.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20.ExecuteContext', 'SetCurveValue_21.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21.ExecuteContext', 'SetCurveValue_20_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1.ExecuteContext', 'SetCurveValue_21_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1.ExecuteContext', 'SetCurveValue_20_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1.ExecuteContext', 'SetCurveValue_21_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1.ExecuteContext', 'SetCurveValue_20_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_10_1.Result', 'Clamp_11_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_18_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_11_1.Result', 'SetCurveValue_19_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_2.Result', 'Clamp_12_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_20_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_2.Result', 'SetCurveValue_21_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_20_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_2.Result', 'SetCurveValue_21_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_20_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_2.Result', 'SetCurveValue_21_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_20_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_2.Result', 'SetCurveValue_21_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_20_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_12_1_1_1_1_1.Result', 'SetCurveValue_21_1_1_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_4.Value', 'Add_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_2.Value', 'Multiply_9_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_2.Result', 'Add_11_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_2.Value', 'Multiply_9_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_2.Result', 'Add_11_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2.Value', 'Multiply_9_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_20_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'SetCurveValue_21_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_9_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_2.Value', 'Multiply_10_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_9_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_2.Value', 'Multiply_11_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_1_1_1_1.Value', 'Multiply_12_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_20_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'SetCurveValue_21_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_18_1.ExecuteContext', 'SetCurveValue_19_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_19_1.ExecuteContext', 'SetCurveValue_20_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_2.ExecuteContext', 'SetCurveValue_21_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_2.ExecuteContext', 'SetCurveValue_20_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_2.ExecuteContext', 'SetCurveValue_21_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_2.ExecuteContext', 'SetCurveValue_20_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_3.ExecuteContext', 'SetCurveValue_21_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_3.ExecuteContext', 'SetCurveValue_20_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_2_1.ExecuteContext', 'SetCurveValue_21_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_2_1.ExecuteContext', 'SetCurveValue_20_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_20_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_18_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'Multiply_13.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_4.FloatValue', 'SetCurveValue_23.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_13.Result', 'SetCurveValue_22.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22.ExecuteContext', 'SetCurveValue_23.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23.ExecuteContext', 'SetCurveValue_23_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'Multiply_14.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'SetCurveValue_22_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_23_1.ExecuteContext', 'SetCurveValue_22_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_14.Result', 'SetCurveValue_22_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'SetCurveValue_22_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.X', 'SetCurveValue_22_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1.ExecuteContext', 'SetCurveValue_22_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1.ExecuteContext', 'SetCurveValue_22_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2.ExecuteContext', 'SetCurveValue_22_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_2_1.ExecuteContext', 'SetCurveValue_22_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3.Vector.Y', 'SetCurveValue_22_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_22_1_1_1.ExecuteContext', 'SetCurveValue_22_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'SetCurveValue_24.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_13.Result', 'SetCurveValue_25_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_15.Result', 'Add_12.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_12.Result', 'Clamp_13.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_5.FloatValue', 'Add_12.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25.ExecuteContext', 'SetCurveValue_25_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1.ExecuteContext', 'SetCurveValue_25_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1.ExecuteContext', 'SetCurveValue_25_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2.ExecuteContext', 'SetCurveValue_25_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2.ExecuteContext', 'SetCurveValue_25_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2.ExecuteContext', 'SetCurveValue_25_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_25_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'Multiply_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_2_1.ExecuteContext', 'SetCurveValue_25_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_2_1.ExecuteContext', 'SetCurveValue_25_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_16.Result', 'SetCurveValue_25_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_6.FloatValue', 'SetCurveValue_26.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1.ExecuteContext', 'SetCurveValue_25_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1.ExecuteContext', 'SetCurveValue_25_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_24.ExecuteContext', 'SetCurveValue_26.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_26.ExecuteContext', 'SetCurveValue_25.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_25_1_1_1_1_1.ExecuteContext', 'SetCurveValue_27.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Multiply_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_7.FloatValue', 'Clamp_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_17.Result', 'Clamp_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_15.Result', 'SetCurveValue_27_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_14.Result', 'SetCurveValue_27_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27.ExecuteContext', 'SetCurveValue_27_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_2.ExecuteContext', 'SetCurveValue_27_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1.ExecuteContext', 'SetCurveValue_27_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8.FloatValue', 'SetCurveValue_28.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28.ExecuteContext', 'SetCurveValue_28_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_27_1_1.ExecuteContext', 'SetCurveValue_28.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_1.FloatValue', 'SetCurveValue_28_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_2.ExecuteContext', 'SetCurveValue_28_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2.FloatValue', 'SetCurveValue_28_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3.ExecuteContext', 'SetCurveValue_28_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1.FloatValue', 'SetCurveValue_28_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_1.ExecuteContext', 'SetCurveValue_28_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1.ExecuteContext', 'SetCurveValue_28_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2.FloatValue', 'SetCurveValue_28_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2.ExecuteContext', 'SetCurveValue_28_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_1.FloatValue', 'SetCurveValue_28_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_1.ExecuteContext', 'SetCurveValue_28_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2.FloatValue', 'SetCurveValue_28_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2.ExecuteContext', 'SetCurveValue_28_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2.ExecuteContext', 'SetCurveValue_28_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2_1.FloatValue', 'SetCurveValue_28_3_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_2_2_1.ExecuteContext', 'SetCurveValue_28_1_2_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_1.ExecuteContext', 'SetCurveValue_28_3_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2.ExecuteContext', 'SetCurveValue_28_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_2_2_1.ExecuteContext', 'SetCurveValue_30.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'SetCurveValue_30.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'SetCurveValue_31.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10.FloatValue', 'SetCurveValue_32_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32.ExecuteContext', 'SetCurveValue_32_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1.ExecuteContext', 'SetCurveValue_32_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_10_1.FloatValue', 'SetCurveValue_32_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_2.ExecuteContext', 'SetCurveValue_32_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_2.ExecuteContext', 'SetCurveValue_32_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1.ExecuteContext', 'SetCurveValue_32_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3.ExecuteContext', 'SetCurveValue_32_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3.ExecuteContext', 'SetCurveValue_32_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11.FloatValue', 'SetCurveValue_32_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_1.ExecuteContext', 'SetCurveValue_32_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_1.ExecuteContext', 'SetCurveValue_32_1_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_1.ExecuteContext', 'SetCurveValue_32_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_1.FloatValue', 'SetCurveValue_32_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2.ExecuteContext', 'SetCurveValue_32_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_2.ExecuteContext', 'SetCurveValue_32_1_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_2.FloatValue', 'SetCurveValue_32_1_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_3_2_1_1.ExecuteContext', 'SetCurveValue_32_1_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_11_2_1_1.FloatValue', 'SetCurveValue_32_1_3_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4.Vector.Y', 'Multiply_19.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'Multiply_19.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_6.Valid', 'If_4.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_19.Result', 'If_4.True')
	blueprint.get_controller_by_name('RigVMModel').add_link('If_4.Result', 'SetCurveValue_33.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12.FloatValue', 'SetCurveValue_34_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_2.ExecuteContext', 'SetCurveValue_32_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_33.ExecuteContext', 'SetCurveValue_34.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34.ExecuteContext', 'SetCurveValue_34_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1.ExecuteContext', 'SetCurveValue_34_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_34_1_1.ExecuteContext', 'SetCurveValue_34_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35.ExecuteContext', 'SetCurveValue_35_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2.ExecuteContext', 'SetCurveValue_35_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1.ExecuteContext', 'SetCurveValue_35_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1.ExecuteContext', 'SetCurveValue_35_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1.ExecuteContext', 'SetCurveValue_35_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_13.FloatValue', 'SetCurveValue_35_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'SetCurveValue_35_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_2_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'SetCurveValue_35_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_7_2_1.ExecuteContext', 'SetCurveValue_18.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36.ExecuteContext', 'SetCurveValue_36_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1.ExecuteContext', 'SetCurveValue_36_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1.ExecuteContext', 'SetCurveValue_36_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_2.ExecuteContext', 'SetCurveValue_36_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_2.ExecuteContext', 'SetCurveValue_36_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_2.ExecuteContext', 'SetCurveValue_36_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1.ExecuteContext', 'SetCurveValue_36_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_16.Result', 'SetCurveValue_36_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_9_1_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_9_1_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1.Value', 'Multiply_9_1_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1.Value', 'Multiply_20.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1.Value', 'Multiply_20_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_2.Value', 'Multiply_22.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_21_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_36.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17.Result', 'SetCurveValue_37.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37.ExecuteContext', 'SetCurveValue_37_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7.Value', 'Multiply_23.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_17_1.Result', 'SetCurveValue_37_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_2.ExecuteContext', 'SetCurveValue_37_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_1.Value', 'Multiply_23_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_36_1_1_1_1.ExecuteContext', 'SetCurveValue_37.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2.Value', 'Multiply_24.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1.Value', 'Multiply_24_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2.Value', 'Multiply_24_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_1_1.Value', 'Multiply_24_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1.Value', 'Multiply_24_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3.ExecuteContext', 'SetCurveValue_37_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1.Result', 'SetCurveValue_37_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1.ExecuteContext', 'SetCurveValue_37_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_1.Value', 'Multiply_24_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_1.ExecuteContext', 'SetCurveValue_37_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_1.Result', 'SetCurveValue_37_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_1.ExecuteContext', 'SetCurveValue_37_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2.Value', 'Multiply_24_2_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2.ExecuteContext', 'SetCurveValue_37_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_3_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2.Result', 'SetCurveValue_37_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2.ExecuteContext', 'SetCurveValue_37_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2.ExecuteContext', 'SetCurveValue_37_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_1.Value', 'Multiply_24_2_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_1.ExecuteContext', 'SetCurveValue_37_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_3_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2_1_2_1.Result', 'SetCurveValue_37_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_1.ExecuteContext', 'SetCurveValue_37_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_3_2_2.ExecuteContext', 'SetCurveValue_37_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_3_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_7_2_2_1_2_2.Value', 'SetCurveValue_37_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2_1.ExecuteContext', 'SetCurveValue_37_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_4.Value', 'Multiply_7_1_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_2.Value', 'Multiply_7_1_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_5.Value', 'Multiply_7_1_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_3.Value', 'Multiply_7_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_2.Value', 'Multiply_7_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_2.Value', 'Multiply_7_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_2.Value', 'Multiply_7_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2_1.Value', 'Multiply_7_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_2.Value', 'Multiply_7_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_2.Value', 'Multiply_7_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_2.Value', 'Multiply_7_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2.Value', 'Multiply_7.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1.Value', 'Multiply_7.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1.Value', 'Multiply_7_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1.Value', 'Multiply_7_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1.Value', 'Multiply_7_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1.Value', 'Multiply_7_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1.Value', 'Multiply_7_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1.Value', 'Multiply_7_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1.Value', 'Multiply_7_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_2_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_1_1_1_1_1_1.Value', 'Multiply_7_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_9_1.Result', 'SetCurveValue_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Multiply_6.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_14.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_10.Result', 'SetCurveValue_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Multiply_5.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat.FloatValue', 'Clamp_9.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_5.Result', 'Clamp_10.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_1.FloatValue', 'Clamp_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_6.Result', 'Clamp_10_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3.Value', 'ArrayIterator.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Index', 'ArrayGetAtIndex.Index')
	blueprint.get_controller_by_name('RigVMModel').add_link('RerouteNode_3_1.Value', 'ArrayGetAtIndex.Array')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.Element.Name', 'GetCurveValue_8.Curve')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayIterator.ExecuteContext', 'SetControlFloat.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_8.Value', 'SetControlFloat.FloatValue')
	blueprint.get_controller_by_name('RigVMModel').add_link('ArrayGetAtIndex.Element.Name', 'SetControlFloat.Control')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3.Value', 'Remap.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap.Result', 'Add_15.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_4.Value', 'Add_15.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_15.Result', 'SetControlVector2D_3.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1.Value', 'Remap_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1.Result', 'Add_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1.Value', 'Add_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2.Result', 'SetControlVector2D_3.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_3_1.Value', 'Remap_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_2.Result', 'Add_2_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_2_2.Value', 'Add_2_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_2_2.Result', 'SetControlVector2D_3_1.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_1_1.Value', 'Remap_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_1.Result', 'Add_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_1_1.Value', 'Add_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_1_1.Result', 'SetControlVector2D_3_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3.ExecuteContext', 'SetControlVector2D_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2.Value', 'Remap_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2.Result', 'Add_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2.Value', 'Add_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1.Result', 'SetControlVector2D_3_2.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_3_2.Value', 'SetControlVector2D_3_2.Vector.Y')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1.Value', 'Remap_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1.Result', 'Add_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1.Value', 'Add_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1.Result', 'SetControlVector2D_3_2_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1.Value', 'Remap_1_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1.Result', 'Add_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1.Value', 'Add_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1.Result', 'SetControlVector2D_3_2_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1.Value', 'Remap_1_2_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1.Result', 'Add_1_2_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_1_1_2_1_1_1.Value', 'Add_1_2_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_2_2_2_1_1_1_1.Value', 'Remap_1_2_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Remap_1_2_1_1_1_1.Result', 'Add_1_2_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_1_2_1_1_1_1_1.Result', 'SetControlVector2D_3_2_1_1_1_1.Vector.X')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2.ExecuteContext', 'SetControlVector2D_3_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVector2D_3_2_1_1.ExecuteContext', 'SetControlVector2D_3_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D.Vector.X', 'Add_16.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2.Vector.X', 'Add_16.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_16.Result', 'Clamp.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3.Value', 'Add.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8.Result', 'Add.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1.Result', 'Add_17.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2.Result', 'Add_17.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3.Result', 'Add_17_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4.Result', 'Add_17_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1.Result', 'Add_17_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5.Result', 'Add_17_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add.Result', 'Add_17_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17.Result', 'Add_17_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1.Result', 'Add_17_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1.Result', 'Add_17_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1.Result', 'SetCurveValue_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_2.Result', 'Add_17_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_9.Result', 'Add_17_1_1_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_2.Result', 'Add_17_1_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_2.Result', 'Add_17_1_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_2.Result', 'Add_17_1_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_3_2.Value', 'Add_9.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_6.Result', 'Add_9.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_1_1.Result', 'Add_17_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_2_1.Result', 'Add_17_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_3_1.Result', 'Add_17_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_4_1.Result', 'Add_17_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_8_5_1.Result', 'Add_17_1_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_17_1_1_1_1_1.Result', 'SetCurveValue_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.B', 'SequenceAggregate_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.B', 'SequenceAggregate_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.B', 'SequenceAggregate_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2.A', 'SetCurveValue.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1.A', 'SetCurveValue_22.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1.A', 'SetCurveValue_24.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.B', 'SequenceAggregate_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1.A', 'SetCurveValue_1_1_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1.A', 'SetCurveValue_35.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('InverseExecution.ExecuteContext', 'SequenceAggregate_2_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.A', 'ArrayIterator.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.A', 'SetControlVector2D_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1.B', 'SequenceAggregate_2_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.A', 'SetControlVector2D_3_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceAggregate_2_1_1_1_1_1_1_1_1.B', 'SetControlVector2D_3_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3.Result', 'Add_11_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1.Result', 'Clamp_12_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2.Result', 'Add_11_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1.Result', 'Add_11_3_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1.Result', 'Add_11_3_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1.Result', 'Add_11_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1.Result', 'Clamp_12_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1.Result', 'Add_11_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1.Result', 'Add_11_3_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20.Result', 'Add_11_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1.Result', 'Clamp_12_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_2_1_1.Result', 'Add_11_3_1_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10.Result', 'Add_11_3_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11.Result', 'Add_11_3_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12.Result', 'Add_11_3_1_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_1_1_1.Result', 'Clamp_12_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3.Result', 'Add_11_3_1_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2.Result', 'Clamp_12_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1.Result', 'Add_11_3_1_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2.Result', 'Add_11_3_3_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_2.Result', 'Add_11_3_3_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1.Result', 'Add_11_3_1_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1.Result', 'Clamp_12_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1.Result', 'Add_11_3_1_2_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_1_1_1.Result', 'Add_11_3_3_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_20_1.Result', 'Add_11_3_1_2_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1.Result', 'Clamp_12_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_3_1_1_1.Result', 'Add_11_3_1_2_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_10_1.Result', 'Add_11_3_3_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_11_1.Result', 'Add_11_3_3_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_12_1.Result', 'Add_11_3_1_2_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_11_3_1_2_1_1_1.Result', 'Clamp_12_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1.Value', 'Multiply_22_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetCurveValue_4_3_1_1_2_1_1_1_1_1.Value', 'Multiply_22_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1.Result', 'Multiply_22_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_9_1_1_2_1_1_1.Result', 'Add_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22.Result', 'Add_18.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18.Result', 'Add_18_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_22_1_1.Result', 'Add_18_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1.Result', 'Clamp_16.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2.Result', 'Add_18_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23.Result', 'Add_18_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24.Result', 'Add_18_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_2.Result', 'Add_18_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1.Result', 'Clamp_17.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_2_1.Result', 'Add_18_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_23_1.Result', 'Add_18_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1.Result', 'Add_18_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_24_1_1.Result', 'Add_18_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_18_1_1_1.Result', 'Clamp_17_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('BeginExecution.ExecuteContext', 'SequenceAggregate_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Clamp_15.Result', 'SetCurveValue_27_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8.FloatValue', 'SetCurveValue_28_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2.FloatValue', 'SetCurveValue_28_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2.FloatValue', 'SetCurveValue_28_1_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2.FloatValue', 'SetCurveValue_28_1_2_2_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_1.FloatValue', 'SetCurveValue_28_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1.FloatValue', 'SetCurveValue_28_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_1.FloatValue', 'SetCurveValue_28_1_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_2_2_1.FloatValue', 'SetCurveValue_28_1_2_2_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1_1.FloatValue', 'SetCurveValue_28_3_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_1_1.ExecuteContext', 'SetCurveValue_28_1_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_1_1.FloatValue', 'SetCurveValue_28_1_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2.ExecuteContext', 'SetCurveValue_28_3_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_1_1.ExecuteContext', 'SetCurveValue_28_3_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_3.FloatValue', 'SetCurveValue_28_3_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_3_3.ExecuteContext', 'SetCurveValue_28_1_2_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_8_2_3.FloatValue', 'SetCurveValue_28_1_2_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_1.ExecuteContext', 'SetCurveValue_28_3_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_28_1_2_3.ExecuteContext', 'SetCurveValue_28_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_3_2_1_1.ExecuteContext', 'SetCurveValue_33.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_32_1_1_2_1.ExecuteContext', 'SetCurveValue_32_3_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_3.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_30.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_1_2.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_3.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_31.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_2_1_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_31.ExecuteContext', 'RigUnit_SetCurveValue_76_1_2_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_32.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_AlphaInterp_22_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_AlphaInterp_22_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_SetCurveValue_76_1_1_1_1_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'Multiply_18.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_18.Result', 'Add_13.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9_1.FloatValue', 'Add_13.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_9.FloatValue', 'RigUnit_SetCurveValue_76_1_1_1_1_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp_22_1_1_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_SetCurveValue_76_1_1_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('Add_13.Result', 'RigUnit_AlphaInterp_22_1_1_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2.FloatValue', 'RigUnit_SetCurveValue_48.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2.ExecuteContext', 'RigUnit_SetCurveValue_48.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_48.ExecuteContext', 'SetCurveValue_1_1_2_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_2_1.FloatValue', 'RigUnit_SetCurveValue_26.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_2_2_1.ExecuteContext', 'RigUnit_SetCurveValue_26.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_26.ExecuteContext', 'SetCurveValue_1_1_2_2_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Multiply_13.Result', 'SetCurveValue_23_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14.FloatValue', 'RigUnit_SetCurveValue_98.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2.ExecuteContext', 'RigUnit_SetCurveValue_98.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_98.ExecuteContext', 'SetCurveValue_35_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_1_1_1.ExecuteContext', 'SetCurveValue_35_2_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_35_1_1_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_99.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_99.ExecuteContext', 'SetCurveValue_4.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_14_1.FloatValue', 'RigUnit_SetCurveValue_99.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_21.FloatValue', 'RigUnit_SetCurveValue_19.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.X', 'RigUnit_SetCurveValue_73.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.Y', 'RigUnit_SetCurveValue_73_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73.ExecuteContext', 'RigUnit_SetCurveValue_73_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1.ExecuteContext', 'RigUnit_SetCurveValue_73_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.Y', 'RigUnit_AlphaInterp_11.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_4_1.Vector.X', 'RigUnit_AlphaInterp_12.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_74.FloatValue', 'RigUnit_AlphaInterp_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_72.ExecuteContext', 'RigUnit_SetCurveValue_72_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_74.FloatValue', 'RigUnit_AlphaInterp_15_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1.ExecuteContext', 'RigUnit_SetCurveValue_72.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_50.ExecuteContext', 'RigUnit_SetCurveValue_50_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_52.FloatValue', 'RigUnit_SetCurveValue_50_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_52.FloatValue', 'RigUnit_AlphaInterp_18.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_72_1.ExecuteContext', 'RigUnit_SetCurveValue_50.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_3.ExecuteContext', 'RigUnit_SetCurveValue_73_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_2.ExecuteContext', 'RigUnit_SetCurveValue_73_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.X', 'RigUnit_SetCurveValue_73_3.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.X', 'RigUnit_AlphaInterp_12_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.Y', 'RigUnit_SetCurveValue_73_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_5.Vector.Y', 'RigUnit_AlphaInterp_11_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_50_1.ExecuteContext', 'RigUnit_SetCurveValue_73_3.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_3_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_2_1.ExecuteContext', 'RigUnit_SetCurveValue_73_2_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_2_1_1.ExecuteContext', 'RigUnit_SetCurveValue_73_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.X', 'RigUnit_SetCurveValue_73_3_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.X', 'RigUnit_AlphaInterp_12_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.Y', 'RigUnit_SetCurveValue_73_2_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_6.Vector.Y', 'RigUnit_AlphaInterp_11_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_73_3_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_73_1_1_1_1.ExecuteContext', 'RigUnit_SetCurveValue_19.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_37_1_2_2_2.ExecuteContext', 'RigUnit_SetCurveValue_73.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_4.Transform.Translation', 'AimItem.Primary.Target')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_4_1.Transform.Translation', 'AimItem_1.Primary.Target')
	blueprint.get_controller_by_name('RigVMModel').add_link('AimItem.ExecuteContext', 'AimItem_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17.FloatValue', 'RigUnit_SetCurveValue_15.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17.FloatValue', 'MathFloatGreater.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.Item', 'SetControlVisibility.Item')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.ExecuteContext', 'SetControlVisibility.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3.Transform.Translation', 'DebugLineItemSpace.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_1.Transform.Translation', 'DebugLineItemSpace.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('DebugLineItemSpace.ExecuteContext', 'DebugLineItemSpace_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_2.Transform.Translation', 'DebugLineItemSpace_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_3_1_1.Transform.Translation', 'DebugLineItemSpace_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionLoop.Completed', 'SequenceExecution_6.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SequenceExecution_6.A', 'Branch.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('Branch.True', 'DebugLineItemSpace.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('CollectionItems.Collection', 'CollectionLoop.Collection')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_15.ExecuteContext', 'VariableNode.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatGreater.Result', 'VariableNode.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode.ExecuteContext', 'CollectionLoop.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode_1.Value', 'SetControlVisibility.bVisible')
	blueprint.get_controller_by_name('RigVMModel').add_link('VariableNode_1.Value', 'Branch.Condition')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetCurveValue_19.ExecuteContext', 'AimItem.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('AimItem_1.ExecuteContext', 'RigUnit_SetCurveValue_15.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8.Vector.X', 'MathFloatAdd.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_2.Vector.X', 'MathFloatAdd.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8.Vector.Y', 'MathFloatAdd_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_2_2.Vector.Y', 'MathFloatAdd_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd.Result', 'MathFloatLerp.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp.Result', 'RigUnit_AlphaInterp_4.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1.FloatValue', 'MathFloatLerp.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_1.Result', 'MathFloatLerp_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_19_2.Result', 'MathFloatLerp_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1.FloatValue', 'MathFloatLerp_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1.Result', 'RigUnit_AlphaInterp_27.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8_1_1.Vector.X', 'MathFloatAdd_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_8_1_1.Vector.Y', 'MathFloatAdd_1_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3_1.Vector.X', 'MathFloatAdd_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlVector2D_3_1.Vector.Y', 'MathFloatAdd_1_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_2_1.Result', 'MathFloatLerp_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1_1.FloatValue', 'MathFloatLerp_2.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_17_1_1.FloatValue', 'MathFloatLerp_1_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_1_1_1.Result', 'MathFloatLerp_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1_1.Result', 'RigUnit_AlphaInterp_9_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp.Result', 'RigUnit_AlphaInterp_2_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1.Result', 'RigUnit_AlphaInterp_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_2.Result', 'RigUnit_AlphaInterp_26_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_2_1.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_1_1.Result', 'RigUnit_AlphaInterp_28_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_2.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_2_1.ExecuteContext', 'SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatLerp_2.Result', 'RigUnit_AlphaInterp_8_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_5.Transform.Rotation', 'MathQuaternionToRotator.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Pitch', 'MathFloatRemap.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap.Result', 'MathFloatLerp.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Roll', 'MathFloatRemap_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator.Result.Roll', 'MathFloatRemap_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1.Result', 'MathFloatAdd_19_2.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_1.Result', 'MathFloatAdd_19_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('GetTransform_5_1.Transform.Rotation', 'MathQuaternionToRotator_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Pitch', 'MathFloatRemap_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Roll', 'MathFloatRemap_1_2.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathQuaternionToRotator_1.Result.Roll', 'MathFloatRemap_1_1_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_2.Result', 'MathFloatAdd_19_2_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_1_1_1.Result', 'MathFloatAdd_19_2_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatRemap_2.Result', 'MathFloatLerp_2.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathFloatAdd_19_2_1.Result', 'MathFloatLerp_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetControlVisibility.ExecuteContext', 'SetCurveValue_1_1_1_2_1_2.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_SetTransform.ExecuteContext', 'RigUnit_SetTransform_1.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12_1.FloatValue', 'MathTransformLerp_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetControlFloat_12_1.FloatValue', 'MathTransformLerp_1_1.T')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathTransformLerp_1_1.Result', 'RigUnit_SetTransform_1.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('MathTransformLerp_1.Result', 'RigUnit_SetTransform.Value')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetTransform_3.Transform', 'MathTransformLerp_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('RigUnit_GetTransform_3.Transform', 'MathTransformLerp_1_1.B')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent_1.Transform', 'MathTransformLerp_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('ProjectTransformToNewParent_1_1.Transform', 'MathTransformLerp_1_1.A')
	blueprint.get_controller_by_name('RigVMModel').add_link('SetCurveValue_1_1_1_2_1_1_1_1_1_1_1_1_1_1_1.ExecuteContext', 'RigUnit_SetTransform.ExecuteContext')
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3', True)
	blueprint.get_controller_by_name('RigVMModel').set_reroute_compactness_by_name('RerouteNode_3_1', True)
	blueprint.set_preview_mesh(unreal.load_object(name='/Game/'+ch_folder+'/'+ch_name+'.'+ch_name, outer=None))
create_control_rig('Characters/test2', 'test')
